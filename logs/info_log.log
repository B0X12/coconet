Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41, started on Fri Aug 05 18:46:43 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Add connection elided, waiting 1, queue 7
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6a1189] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@34c4ed1a]
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=8, active=0, idle=8, waiting=0)
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 24696 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
HV000001: Hibernate Validator 6.2.3.Final
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Finished Spring Data repository scanning in 102 ms. Found 9 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@138d6a43'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@5d34bd4c]
Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 7000 (http)
Initializing ProtocolHandler ["http-nio-7000"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 2613 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@12c4f691

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@138d6a43'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@12c4f691
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@44224585
Adding type registration boolean -> org.hibernate.type.BooleanType@44224585
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@44224585
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@75a2c13
Adding type registration true_false -> org.hibernate.type.TrueFalseType@75bd7e2
Adding type registration yes_no -> org.hibernate.type.YesNoType@2f22c62a
Adding type registration byte -> org.hibernate.type.ByteType@56359e65
Adding type registration byte -> org.hibernate.type.ByteType@56359e65
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56359e65
Adding type registration character -> org.hibernate.type.CharacterType@51d6efc5
Adding type registration char -> org.hibernate.type.CharacterType@51d6efc5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@51d6efc5
Adding type registration short -> org.hibernate.type.ShortType@5aea1cd7
Adding type registration short -> org.hibernate.type.ShortType@5aea1cd7
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5aea1cd7
Adding type registration integer -> org.hibernate.type.IntegerType@a5f465f
Adding type registration int -> org.hibernate.type.IntegerType@a5f465f
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@a5f465f
Adding type registration long -> org.hibernate.type.LongType@546aad4a
Adding type registration long -> org.hibernate.type.LongType@546aad4a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@546aad4a
Adding type registration float -> org.hibernate.type.FloatType@c7cfd66
Adding type registration float -> org.hibernate.type.FloatType@c7cfd66
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@c7cfd66
Adding type registration double -> org.hibernate.type.DoubleType@2e4e0462
Adding type registration double -> org.hibernate.type.DoubleType@2e4e0462
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2e4e0462
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@51e11d68
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@51e11d68
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4da0d464
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4da0d464
Adding type registration string -> org.hibernate.type.StringType@dfff77c
Adding type registration java.lang.String -> org.hibernate.type.StringType@dfff77c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1cbc030d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@579c9b36
Adding type registration url -> org.hibernate.type.UrlType@7fbd115e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7fbd115e
Adding type registration Duration -> org.hibernate.type.DurationType@715d70dd
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@715d70dd
Adding type registration Instant -> org.hibernate.type.InstantType@387ad205
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@387ad205
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1aa39b5
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1aa39b5
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@60e0b6cd
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@60e0b6cd
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2c2844de
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2c2844de
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30853db0
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@30853db0
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@981365d
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@981365d
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@321a8536
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@321a8536
Adding type registration date -> org.hibernate.type.DateType@7b30b7d4
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7b30b7d4
Adding type registration time -> org.hibernate.type.TimeType@19270455
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19270455
Adding type registration timestamp -> org.hibernate.type.TimestampType@6d0cdc38
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6d0cdc38
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6d0cdc38
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b0dd533
Adding type registration calendar -> org.hibernate.type.CalendarType@46a9c79f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@46a9c79f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@46a9c79f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ad9ee92
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6e2160d9
Adding type registration locale -> org.hibernate.type.LocaleType@470e2ef
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@470e2ef
Adding type registration currency -> org.hibernate.type.CurrencyType@2f2220cd
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f2220cd
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1efeb0e6
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1efeb0e6
Adding type registration class -> org.hibernate.type.ClassType@6dd2d1fe
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6dd2d1fe
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@688463f6
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@688463f6
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e6ba71c
Adding type registration binary -> org.hibernate.type.BinaryType@49ebd317
Adding type registration byte[] -> org.hibernate.type.BinaryType@49ebd317
Adding type registration [B -> org.hibernate.type.BinaryType@49ebd317
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38816797
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38816797
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38816797
Adding type registration row_version -> org.hibernate.type.RowVersionType@31b53b2f
Adding type registration image -> org.hibernate.type.ImageType@2926cdf1
Adding type registration characters -> org.hibernate.type.CharArrayType@75b1e902
Adding type registration char[] -> org.hibernate.type.CharArrayType@75b1e902
Adding type registration [C -> org.hibernate.type.CharArrayType@75b1e902
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e775491
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e775491
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e775491
Adding type registration text -> org.hibernate.type.TextType@30ac182
Adding type registration ntext -> org.hibernate.type.NTextType@20a31445
Adding type registration blob -> org.hibernate.type.BlobType@5b136e6a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b136e6a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7fcc7ee9
Adding type registration clob -> org.hibernate.type.ClobType@7f33646b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7f33646b
Adding type registration nclob -> org.hibernate.type.NClobType@7bae4624
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7bae4624
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4b2a5735
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f4f39e2
Adding type registration serializable -> org.hibernate.type.SerializableType@5cea3f2c
Adding type registration object -> org.hibernate.type.ObjectType@6edd341a
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6edd341a
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@417fe51a
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3d4b470d
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@477466ec
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a3d9ee2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1454f98a
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7340a722
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17e7eca0
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51ebba30
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@52a70e2a] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@52a70e2a) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6aa4e44a] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@fd85f9f] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4939ca48]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@52a70e2a]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@52a70e2a]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69ec604c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@627ec429]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1d1b798e, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@77911abd, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.7000.16110017699226206012, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=24696, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.7000.16110017699226206012, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4c7a8b9e, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69ec604c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6a8172df]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36eb4d7b]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.day as day2_5_, notice_.title as title3_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (day, title, id) values (?, ?, ?)
 Update 0: update notice set day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, day, title) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6784b72b]
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.day as day2_5_0_, notice0_.title as title3_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48770c20]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@223d9043]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@204d75d8]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6366a8fb]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48b5001a]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aea72a4]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39a0e2e0]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ca81b20]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29e43e55]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61d079ac]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28287a55]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12f9eb26]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value integer not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d0b95d5
Registering SessionFactory: 83004f71-6c6e-4c59-9238-aed52de3edc4 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$396ed5b2] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$396ed5b2] because it is not cache-safe
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@138d6a43'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@138d6a43'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@17dfc3ca
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@dfff77c
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@a5f465f
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@dfff77c
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@dfff77c}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@dfff77c
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@a5f465f
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@a5f465f}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'logService'
Creating shared instance of singleton bean 'certificationService'
Creating shared instance of singleton bean 'logTag'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1e36f25d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4232dd66, org.springframework.security.web.context.SecurityContextPersistenceFilter@44f3c752, org.springframework.security.web.header.HeaderWriterFilter@3cb8eb26, org.springframework.security.web.authentication.logout.LogoutFilter@449c00e9, org.springframework.web.filter.CorsFilter@6b69350e, com.coconet.server.jwt.JwtFilter@58a1a9a5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@257bb3fd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33351aa5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9d9e5b, org.springframework.security.web.session.SessionManagementFilter@669f91bb, org.springframework.security.web.access.ExceptionTranslationFilter@445a8bc0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3dbc3c89]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/department]}: retrieveDepartment()
	{GET [/coconet/user/username]}: retrieveUsername(String,String)

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String,HttpServletRequest,HttpServletResponse)
	{GET [/coconet/logs/admin]}: adminLogInfo()

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/log]}: logAll()
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{POST [/coconet/image]}: createFeed(MultipartFile)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{POST [/coconet/users]}: createUser(Users)
	{GET [/coconet/users]}: retrieveAllUsers()
	{POST [/coconet/signup]}: signup(UserDto)
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/login]}: login(LoginDto)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
23 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@138d6a43'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, day) values(1, '공지사항 test1', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(2, '공지사항 test2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(3, '공지사항 test3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(4, '공지사항 test4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(5, '공지사항 test5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 44 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["http-nio-7000"]
Tomcat started on port(s): 7000 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 7.159 seconds (JVM running for 8.009)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2ad7cdb2
Detected org.springframework.web.servlet.support.SessionFlashMapManager@e457703
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 2 ms
Securing GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
Set SecurityContextHolder to empty SecurityContext
Security Context에 'admin' 인증 정보를 저장했습니다, uri: /coconet/logs/user
Authorized public object filter invocation [GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84]
Secured GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
GET "/coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84", parameters={masked}
Mapped to com.coconet.server.controller.AdminLogController#userLogInfo(String, String, String, HttpServletRequest, HttpServletResponse)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'department'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'position'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : department -> org.hibernate.type.StringType@dfff77c
Resolved : generatedAlias0.department -> users0_.department
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : position -> org.hibernate.type.StringType@dfff77c
Resolved : generatedAlias0.position -> users0_.position
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : name -> org.hibernate.type.StringType@dfff77c
Resolved : generatedAlias0.name -> users0_.name
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( and ( and ( = ( users0_.department users0_.user_id department ) ? ) ( = ( users0_.position users0_.user_id position ) ? ) ) ( = ( users0_.name users0_.user_id name ) ? ) ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-BinaryLogicOperatorNode
          |  |  +-DotNode
          |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  | path: generatedAlias0.department
          |  |  |  +-IdentNode
          |  |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  |  | originalText: generatedAlias0
          |  |  |  \-IdentNode
          |  |  |    persister: null
          |  |  |    originalText: department
          |  |  \-ParameterNode
          |  \-BinaryLogicOperatorNode
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     | path: generatedAlias0.position
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     |  | originalText: generatedAlias0
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: position
          |     \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             | path: generatedAlias0.name
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: name
             \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'users0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=generatedAlias0.department,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@dfff77c}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'users0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=generatedAlias0.position,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |     |  \-[IDENT] IdentNode: 'position' {originalText=position}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@dfff77c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@dfff77c}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6548b627, started on Fri Aug 05 18:47:11 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5ceaccde] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6a8172df]
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 22560 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
HV000001: Hibernate Validator 6.2.3.Final
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Finished Spring Data repository scanning in 103 ms. Found 9 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5cae1fa3'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@14ec7a20]
Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 7000 (http)
Initializing ProtocolHandler ["http-nio-7000"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 2748 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4b77da4a

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5cae1fa3'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4b77da4a
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@56c2855a
Adding type registration boolean -> org.hibernate.type.BooleanType@56c2855a
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@56c2855a
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@31246929
Adding type registration true_false -> org.hibernate.type.TrueFalseType@16bdcd37
Adding type registration yes_no -> org.hibernate.type.YesNoType@449f258c
Adding type registration byte -> org.hibernate.type.ByteType@78bacd9a
Adding type registration byte -> org.hibernate.type.ByteType@78bacd9a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78bacd9a
Adding type registration character -> org.hibernate.type.CharacterType@7e136564
Adding type registration char -> org.hibernate.type.CharacterType@7e136564
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e136564
Adding type registration short -> org.hibernate.type.ShortType@74c03a2c
Adding type registration short -> org.hibernate.type.ShortType@74c03a2c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@74c03a2c
Adding type registration integer -> org.hibernate.type.IntegerType@29af4ae9
Adding type registration int -> org.hibernate.type.IntegerType@29af4ae9
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29af4ae9
Adding type registration long -> org.hibernate.type.LongType@6b671860
Adding type registration long -> org.hibernate.type.LongType@6b671860
Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b671860
Adding type registration float -> org.hibernate.type.FloatType@30c6a4eb
Adding type registration float -> org.hibernate.type.FloatType@30c6a4eb
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@30c6a4eb
Adding type registration double -> org.hibernate.type.DoubleType@6d197f00
Adding type registration double -> org.hibernate.type.DoubleType@6d197f00
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d197f00
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18d40c8c
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18d40c8c
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@65cca220
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@65cca220
Adding type registration string -> org.hibernate.type.StringType@24c98cab
Adding type registration java.lang.String -> org.hibernate.type.StringType@24c98cab
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6eb313ed
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d3eec5c
Adding type registration url -> org.hibernate.type.UrlType@c7535fd
Adding type registration java.net.URL -> org.hibernate.type.UrlType@c7535fd
Adding type registration Duration -> org.hibernate.type.DurationType@68d266dc
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@68d266dc
Adding type registration Instant -> org.hibernate.type.InstantType@6a40b00a
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a40b00a
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@40d32ba6
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@40d32ba6
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@66c6a77b
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@66c6a77b
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@148b46ef
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@148b46ef
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@27fad493
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@27fad493
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67ff3499
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67ff3499
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7137a4e3
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7137a4e3
Adding type registration date -> org.hibernate.type.DateType@632f56bf
Adding type registration java.sql.Date -> org.hibernate.type.DateType@632f56bf
Adding type registration time -> org.hibernate.type.TimeType@1e1a582d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e1a582d
Adding type registration timestamp -> org.hibernate.type.TimestampType@507c946a
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@507c946a
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@507c946a
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@346dd5dc
Adding type registration calendar -> org.hibernate.type.CalendarType@6d9292f1
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9292f1
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9292f1
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@55a012c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@12fbfd23
Adding type registration locale -> org.hibernate.type.LocaleType@21faedf
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@21faedf
Adding type registration currency -> org.hibernate.type.CurrencyType@b42cfeb
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b42cfeb
Adding type registration timezone -> org.hibernate.type.TimeZoneType@95cb869
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@95cb869
Adding type registration class -> org.hibernate.type.ClassType@5a5c7164
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a5c7164
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2cfede0a
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2cfede0a
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b3a3d9a
Adding type registration binary -> org.hibernate.type.BinaryType@7388056b
Adding type registration byte[] -> org.hibernate.type.BinaryType@7388056b
Adding type registration [B -> org.hibernate.type.BinaryType@7388056b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c4ead0c
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c4ead0c
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c4ead0c
Adding type registration row_version -> org.hibernate.type.RowVersionType@72622098
Adding type registration image -> org.hibernate.type.ImageType@d1ccab6
Adding type registration characters -> org.hibernate.type.CharArrayType@72eaa924
Adding type registration char[] -> org.hibernate.type.CharArrayType@72eaa924
Adding type registration [C -> org.hibernate.type.CharArrayType@72eaa924
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@29720e6b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@29720e6b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@29720e6b
Adding type registration text -> org.hibernate.type.TextType@25c5c32e
Adding type registration ntext -> org.hibernate.type.NTextType@31ec45f5
Adding type registration blob -> org.hibernate.type.BlobType@a666634
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a666634
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@76a4cc8c
Adding type registration clob -> org.hibernate.type.ClobType@68eee495
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@68eee495
Adding type registration nclob -> org.hibernate.type.NClobType@64df7c75
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64df7c75
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4ad7d9be
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@46dbe1b0
Adding type registration serializable -> org.hibernate.type.SerializableType@263c0afc
Adding type registration object -> org.hibernate.type.ObjectType@8593699
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@8593699
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6d022915
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3425e3ce
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@172978fa
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4aa53c6f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3613eeaf
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2db34030
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@718113d4
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12241fcf
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@353a366c] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@353a366c) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2f1a2fc8] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6858eede] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5352b60]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@353a366c]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@353a366c]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6bbefb73] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@47cb1d69]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6d72da42, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7f349035, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.7000.10035952521118929633, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=22560, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.7000.10035952521118929633, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2f8399c6, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6bbefb73] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4ed8d845]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3798c73a]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.day as day2_5_, notice_.title as title3_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (day, title, id) values (?, ?, ?)
 Update 0: update notice set day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, day, title) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73eac284]
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.day as day2_5_0_, notice0_.title as title3_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@799afe5e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a0d29d0]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a3a4774]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64064fc6]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58c854c7]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f807a73]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54f20e8f]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41b89c83]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c8d81c]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5377d8bd]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cdc75cd]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21837b37]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value integer not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d14aeb8
Registering SessionFactory: 8a2c78b6-b382-4950-b2c9-1e544195b87e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$14e916c2] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$14e916c2] because it is not cache-safe
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5cae1fa3'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5cae1fa3'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@253d959d
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@24c98cab
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@29af4ae9
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@24c98cab
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@24c98cab}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@24c98cab
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@29af4ae9
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@29af4ae9}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'logService'
Creating shared instance of singleton bean 'certificationService'
Creating shared instance of singleton bean 'logTag'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@671c934, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@53593928, org.springframework.security.web.context.SecurityContextPersistenceFilter@79b2c8a9, org.springframework.security.web.header.HeaderWriterFilter@1f136205, org.springframework.security.web.authentication.logout.LogoutFilter@72ae7a6a, org.springframework.web.filter.CorsFilter@397aacfa, com.coconet.server.jwt.JwtFilter@7f72c54b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cef108d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@386e1532, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1328070a, org.springframework.security.web.session.SessionManagementFilter@1158449c, org.springframework.security.web.access.ExceptionTranslationFilter@164e6c71, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ed365cf]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/department]}: retrieveDepartment()
	{GET [/coconet/user/username]}: retrieveUsername(String,String)
	{GET [/coconet/user/position]}: retrievePosition(String)

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String,HttpServletRequest,HttpServletResponse)
	{GET [/coconet/logs/admin]}: adminLogInfo()

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/log]}: logAll()
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{POST [/coconet/image]}: createFeed(MultipartFile)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{POST [/coconet/signup]}: signup(UserDto)
	{POST [/coconet/login]}: login(LoginDto)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{POST [/coconet/users]}: createUser(Users)
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{GET [/coconet/users]}: retrieveAllUsers()

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
23 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5cae1fa3'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, day) values(1, '공지사항 test1', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(2, '공지사항 test2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(3, '공지사항 test3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(4, '공지사항 test4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(5, '공지사항 test5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 41 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["http-nio-7000"]
Tomcat started on port(s): 7000 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 7.438 seconds (JVM running for 8.332)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2843ec95
Detected org.springframework.web.servlet.support.SessionFlashMapManager@431265dc
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 1 ms
Securing GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
Set SecurityContextHolder to empty SecurityContext
Security Context에 'admin' 인증 정보를 저장했습니다, uri: /coconet/logs/user
Authorized public object filter invocation [GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84]
Secured GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
GET "/coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84", parameters={masked}
Mapped to com.coconet.server.controller.AdminLogController#userLogInfo(String, String, String, HttpServletRequest, HttpServletResponse)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'department'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'position'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : department -> org.hibernate.type.StringType@24c98cab
Resolved : generatedAlias0.department -> users0_.department
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : position -> org.hibernate.type.StringType@24c98cab
Resolved : generatedAlias0.position -> users0_.position
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : name -> org.hibernate.type.StringType@24c98cab
Resolved : generatedAlias0.name -> users0_.name
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( and ( and ( = ( users0_.department users0_.user_id department ) ? ) ( = ( users0_.position users0_.user_id position ) ? ) ) ( = ( users0_.name users0_.user_id name ) ? ) ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-BinaryLogicOperatorNode
          |  |  +-DotNode
          |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  | path: generatedAlias0.department
          |  |  |  +-IdentNode
          |  |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  |  | originalText: generatedAlias0
          |  |  |  \-IdentNode
          |  |  |    persister: null
          |  |  |    originalText: department
          |  |  \-ParameterNode
          |  \-BinaryLogicOperatorNode
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     | path: generatedAlias0.position
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     |  | originalText: generatedAlias0
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: position
          |     \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             | path: generatedAlias0.name
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: name
             \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'users0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=generatedAlias0.department,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@24c98cab}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'users0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=generatedAlias0.position,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |     |  \-[IDENT] IdentNode: 'position' {originalText=position}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@24c98cab}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@24c98cab}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Securing GET /coconet/users
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/users
Authorized public object filter invocation [GET /coconet/users]
Secured GET /coconet/users
GET "/coconet/users", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#retrieveAllUsers()
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers(); target is of class [com.coconet.server.controller.UserJpaController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Found thread-bound EntityManager [SessionImpl(39109090<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
Setting JDBC Connection [HikariProxyConnection@1332663116 wrapping conn0: url=jdbc:h2:mem:testdb user=SA] read-only
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6c098fb8]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Users'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90000]
Result set row: 1
Result row: EntityKey[com.coconet.server.entity.Users#90001]
Result set row: 2
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Result set row: 3
Result row: EntityKey[com.coconet.server.entity.Users#90003]
Resolving attributes for [com.coconet.server.entity.Users#90000]
Processing attribute `andnum` : value = andNum0
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 000000
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = department_admin
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = admin
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = admin
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01000000000
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = position_admin
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90000]
Resolving attributes for [com.coconet.server.entity.Users#90001]
Processing attribute `andnum` : value = andNum1
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 970816
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 개발팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = jjh@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 정재훈
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01020770880
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 부장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90001]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90003]
Processing attribute `andnum` : value = andNum3
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 012345
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 디자인팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = khb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김현빈
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01065597556
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사원
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90003]
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(39109090<open>)]
committing
Resetting read-only flag of JDBC Connection [HikariProxyConnection@1332663116 wrapping conn0: url=jdbc:h2:mem:testdb user=SA]
Not closing pre-bound JPA EntityManager after transaction
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Loading collection: [com.coconet.server.entity.Users.authorities#90000]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90000]
Found row of collection: [com.coconet.server.entity.Users.authorities#90000]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_ADMIN]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_ADMIN]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90000]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
Loading collection: [com.coconet.server.entity.Users.authorities#90001]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90001]
Found row of collection: [com.coconet.server.entity.Users.authorities#90001]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90001]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
Loading collection: [com.coconet.server.entity.Users.authorities#90002]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90002]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
Loading collection: [com.coconet.server.entity.Users.authorities#90003]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90003]
Found row of collection: [com.coconet.server.entity.Users.authorities#90003]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90003]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
Writing [[Users(num=90000, department=department_admin, position=position_admin, name=admin, email=admin, pho (truncated)...]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing GET /coconet/logs/admin
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/logs/admin
Authorized public object filter invocation [GET /coconet/logs/admin]
Secured GET /coconet/logs/admin
GET "/coconet/logs/admin", parameters={}
Mapped to com.coconet.server.controller.AdminLogController#adminLogInfo()
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo(); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [[{ip:192.168.57.1, tag:Login, title:로그인 성공, status:true, email:admin, date:2022. 08. 05. 00:06:21, t (truncated)...]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2913250d, started on Fri Aug 05 18:48:11 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@54132ac3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4ed8d845]
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=9, active=0, idle=9, waiting=0)
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 15576 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
HV000001: Hibernate Validator 6.2.3.Final
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Finished Spring Data repository scanning in 113 ms. Found 9 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@12929c2'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@687ff5d9]
Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 7000 (http)
Initializing ProtocolHandler ["http-nio-7000"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 2885 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@595bf78d

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@12929c2'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@595bf78d
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@3563d092
Adding type registration boolean -> org.hibernate.type.BooleanType@3563d092
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3563d092
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@617dabc9
Adding type registration true_false -> org.hibernate.type.TrueFalseType@3e7bbb81
Adding type registration yes_no -> org.hibernate.type.YesNoType@a2de9d8
Adding type registration byte -> org.hibernate.type.ByteType@5b020f90
Adding type registration byte -> org.hibernate.type.ByteType@5b020f90
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b020f90
Adding type registration character -> org.hibernate.type.CharacterType@11f2207f
Adding type registration char -> org.hibernate.type.CharacterType@11f2207f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11f2207f
Adding type registration short -> org.hibernate.type.ShortType@5a8a68a3
Adding type registration short -> org.hibernate.type.ShortType@5a8a68a3
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a8a68a3
Adding type registration integer -> org.hibernate.type.IntegerType@75bbafa1
Adding type registration int -> org.hibernate.type.IntegerType@75bbafa1
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75bbafa1
Adding type registration long -> org.hibernate.type.LongType@17522c98
Adding type registration long -> org.hibernate.type.LongType@17522c98
Adding type registration java.lang.Long -> org.hibernate.type.LongType@17522c98
Adding type registration float -> org.hibernate.type.FloatType@70faa324
Adding type registration float -> org.hibernate.type.FloatType@70faa324
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@70faa324
Adding type registration double -> org.hibernate.type.DoubleType@326c40bd
Adding type registration double -> org.hibernate.type.DoubleType@326c40bd
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@326c40bd
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@35362e04
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@35362e04
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71bfa58d
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71bfa58d
Adding type registration string -> org.hibernate.type.StringType@3c08363b
Adding type registration java.lang.String -> org.hibernate.type.StringType@3c08363b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@32b58f00
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@76898ff1
Adding type registration url -> org.hibernate.type.UrlType@3595b94d
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3595b94d
Adding type registration Duration -> org.hibernate.type.DurationType@2ed2d452
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ed2d452
Adding type registration Instant -> org.hibernate.type.InstantType@1e42548f
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1e42548f
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@298de500
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@298de500
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@282e7bf9
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@282e7bf9
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@62244972
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@62244972
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@825d995
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@825d995
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3d5dc2ff
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3d5dc2ff
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@22408837
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@22408837
Adding type registration date -> org.hibernate.type.DateType@5adfd2e4
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5adfd2e4
Adding type registration time -> org.hibernate.type.TimeType@9b5781d
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@9b5781d
Adding type registration timestamp -> org.hibernate.type.TimestampType@3f18df2e
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3f18df2e
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3f18df2e
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2888905b
Adding type registration calendar -> org.hibernate.type.CalendarType@3f99cb97
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3f99cb97
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3f99cb97
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fba47a6
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@300d24b5
Adding type registration locale -> org.hibernate.type.LocaleType@8012916
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@8012916
Adding type registration currency -> org.hibernate.type.CurrencyType@74ce4a74
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@74ce4a74
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4654f0a1
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4654f0a1
Adding type registration class -> org.hibernate.type.ClassType@26cf668a
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26cf668a
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e857b00
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e857b00
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@28d0371d
Adding type registration binary -> org.hibernate.type.BinaryType@6362910b
Adding type registration byte[] -> org.hibernate.type.BinaryType@6362910b
Adding type registration [B -> org.hibernate.type.BinaryType@6362910b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b7df65b
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b7df65b
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b7df65b
Adding type registration row_version -> org.hibernate.type.RowVersionType@16d29eca
Adding type registration image -> org.hibernate.type.ImageType@674154c2
Adding type registration characters -> org.hibernate.type.CharArrayType@3dc3789a
Adding type registration char[] -> org.hibernate.type.CharArrayType@3dc3789a
Adding type registration [C -> org.hibernate.type.CharArrayType@3dc3789a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@21189d55
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@21189d55
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@21189d55
Adding type registration text -> org.hibernate.type.TextType@7cdcf819
Adding type registration ntext -> org.hibernate.type.NTextType@4eb640e9
Adding type registration blob -> org.hibernate.type.BlobType@2cfaa2cf
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2cfaa2cf
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c1c3270
Adding type registration clob -> org.hibernate.type.ClobType@565ef5da
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@565ef5da
Adding type registration nclob -> org.hibernate.type.NClobType@284be3a7
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@284be3a7
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2ccd4c15
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@47521167
Adding type registration serializable -> org.hibernate.type.SerializableType@6edee84d
Adding type registration object -> org.hibernate.type.ObjectType@378bc964
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@378bc964
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30971880
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@420fe038
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6231dbf4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a7652f2
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@42ad0024
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7f9e2669
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@139cbc15
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6b058d56
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@40108c43] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@40108c43) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4249e983] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68c361f1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@809e3fd]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@40108c43]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@40108c43]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@282b8343] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48cfa2]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@190361ce, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4feaedeb, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.7000.15827996765589106487, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=15576, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.7000.15827996765589106487, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2d165a1e, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@282b8343] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@78a1aa62]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@267a99b]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.day as day2_5_, notice_.title as title3_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (day, title, id) values (?, ?, ?)
 Update 0: update notice set day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, day, title) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a66c79]
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.day as day2_5_0_, notice0_.title as title3_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f198e52]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a11e7a]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d7e9429]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62b5a06b]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36898290]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b4eeed]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25f67df5]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@794473f9]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31845c95]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3296565e]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a86177]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58345e06]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value integer not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3c5665fa
Registering SessionFactory: b7e629ce-d3f7-4a0a-97b2-fe46e182d46e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$fe56d352] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$fe56d352] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@12929c2'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@12929c2'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@31f17a39
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@3c08363b
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@75bbafa1
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@3c08363b
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@3c08363b}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@3c08363b
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@75bbafa1
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@75bbafa1}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'logService'
Creating shared instance of singleton bean 'certificationService'
Creating shared instance of singleton bean 'logTag'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@482709a2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33890ce7, org.springframework.security.web.context.SecurityContextPersistenceFilter@5b931e24, org.springframework.security.web.header.HeaderWriterFilter@59cf5633, org.springframework.security.web.authentication.logout.LogoutFilter@21c25e26, org.springframework.web.filter.CorsFilter@43b73f21, com.coconet.server.jwt.JwtFilter@19422a4f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@24142913, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78acc5bc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5881c2f4, org.springframework.security.web.session.SessionManagementFilter@682e02d4, org.springframework.security.web.access.ExceptionTranslationFilter@41543d76, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@131d0908]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/username]}: retrieveUsername(String,String)
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/department]}: retrieveDepartment()

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String,HttpServletRequest,HttpServletResponse)
	{GET [/coconet/logs/admin]}: adminLogInfo(HttpServletRequest,HttpServletResponse)

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/log]}: logAll()
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)
	{GET [/coconet/board/notice]}: noticeAll()

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{POST [/coconet/image]}: createFeed(MultipartFile)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{GET [/coconet/users]}: retrieveAllUsers()
	{POST [/coconet/users]}: createUser(Users)
	{POST [/coconet/signup]}: signup(UserDto)
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/login]}: login(LoginDto)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
23 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@12929c2'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, day) values(1, '공지사항 test1', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(2, '공지사항 test2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(3, '공지사항 test3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(4, '공지사항 test4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(5, '공지사항 test5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 48 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["http-nio-7000"]
Tomcat started on port(s): 7000 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 7.647 seconds (JVM running for 8.508)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5edffc87
Detected org.springframework.web.servlet.support.SessionFlashMapManager@3c403105
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 1 ms
Securing POST /coconet/login
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/login
Set SecurityContextHolder to anonymous SecurityContext
Authorized filter invocation [POST /coconet/login] with attributes [permitAll]
Secured POST /coconet/login
POST "/coconet/login", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#login(LoginDto)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.LoginDto@5990ccb3]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@3c08363b
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3c08363b}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90000]
Resolving attributes for [com.coconet.server.entity.Users#90000]
Processing attribute `andnum` : value = andNum0
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 000000
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = department_admin
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = admin
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = admin
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01000000000
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = position_admin
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90000]
Found thread-bound EntityManager [SessionImpl(83032376<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.CustomUserDetailsService.loadUserByUsername]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3f097424]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@3c08363b
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3c08363b}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=<uninitialized>, email=admin}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90000], EntityKey[com.coconet.server.entity.Authority#ROLE_ADMIN]
Found row of collection: [com.coconet.server.entity.Users.authorities#90000]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_ADMIN]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_ADMIN]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90000]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(83032376<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=[com.coconet.server.entity.Authority#ROLE_ADMIN], email=admin}
com.coconet.server.entity.Authority{authorityName=ROLE_ADMIN}
Not closing pre-bound JPA EntityManager after transaction
Authenticated user
Found thread-bound EntityManager [SessionImpl(83032376<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3149d0b2]
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity com.coconet.server.entity.Token: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Loading entity: [com.coconet.server.entity.Token#admin]
select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Done entity load
Generated identifier: admin, using strategy: org.hibernate.id.Assigned
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(83032376<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=[com.coconet.server.entity.Authority#ROLE_ADMIN], email=admin}
com.coconet.server.entity.Authority{authorityName=ROLE_ADMIN}
com.coconet.server.entity.Token{email=admin, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTY2MDI5ODAzNH0.yJrSaZU25X4ToSZHE1hJ6oDaaLwfva8N7u_vxuZ_C4s}
insert into token (refresh_token, email) values (?, ?)
Not closing pre-bound JPA EntityManager after transaction
{&ip&:&192.168.57.1&, &tag&:&Login&, &title&:&로그인 성공&, &email&:&admin&, &date&:&2022. 08. 05. 18:53:54&}
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.AuthDto@267a91c4]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing POST /coconet/login
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/login
Set SecurityContextHolder to anonymous SecurityContext
Authorized filter invocation [POST /coconet/login] with attributes [permitAll]
Secured POST /coconet/login
POST "/coconet/login", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#login(LoginDto)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.LoginDto@303ad95d]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90000]
Resolving attributes for [com.coconet.server.entity.Users#90000]
Processing attribute `andnum` : value = andNum0
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 000000
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = department_admin
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = admin
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = admin
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01000000000
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = position_admin
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90000]
Found thread-bound EntityManager [SessionImpl(1316320228<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.CustomUserDetailsService.loadUserByUsername]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6189f3dd]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@3c08363b
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3c08363b}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=<uninitialized>, email=admin}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90000], EntityKey[com.coconet.server.entity.Authority#ROLE_ADMIN]
Found row of collection: [com.coconet.server.entity.Users.authorities#90000]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_ADMIN]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_ADMIN]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90000]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1316320228<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=[com.coconet.server.entity.Authority#ROLE_ADMIN], email=admin}
com.coconet.server.entity.Authority{authorityName=ROLE_ADMIN}
Not closing pre-bound JPA EntityManager after transaction
Authenticated user
Found thread-bound EntityManager [SessionImpl(1316320228<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@9ad820c]
Loading entity: [com.coconet.server.entity.Token#admin]
select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Token#admin]
Resolving attributes for [com.coconet.server.entity.Token#admin]
Processing attribute `refreshToken` : value = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTY2MDI5ODAzNH0.yJrSaZU25X4ToSZHE1hJ6oDaaLwfva8N7u_vxuZ_C4s
Attribute (`refreshToken`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Token#admin]
Done entity load
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1316320228<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (initialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=[com.coconet.server.entity.Authority#ROLE_ADMIN], email=admin}
com.coconet.server.entity.Authority{authorityName=ROLE_ADMIN}
com.coconet.server.entity.Token{email=admin, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTY2MDI5ODA0N30.E1snwvG4bdfG5f29IuBs-UDAspJSLnxs60tks4coYoA}
update token set refresh_token=? where email=?
Not closing pre-bound JPA EntityManager after transaction
{&ip&:&192.168.57.1&, &tag&:&Login&, &title&:&로그인 성공&, &email&:&admin&, &date&:&2022. 08. 05. 18:54:07&}
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.AuthDto@b75dc07]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing POST /coconet/login
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/login
Set SecurityContextHolder to anonymous SecurityContext
Authorized filter invocation [POST /coconet/login] with attributes [permitAll]
Secured POST /coconet/login
POST "/coconet/login", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#login(LoginDto)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.LoginDto@a784eb1]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90000]
Resolving attributes for [com.coconet.server.entity.Users#90000]
Processing attribute `andnum` : value = andNum0
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 000000
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = department_admin
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = admin
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = admin
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01000000000
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = position_admin
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90000]
Found thread-bound EntityManager [SessionImpl(1947048853<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.CustomUserDetailsService.loadUserByUsername]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@752216f8]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@3c08363b
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3c08363b}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=<uninitialized>, email=admin}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90000], EntityKey[com.coconet.server.entity.Authority#ROLE_ADMIN]
Found row of collection: [com.coconet.server.entity.Users.authorities#90000]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_ADMIN]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_ADMIN]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90000]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1947048853<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=[com.coconet.server.entity.Authority#ROLE_ADMIN], email=admin}
com.coconet.server.entity.Authority{authorityName=ROLE_ADMIN}
Not closing pre-bound JPA EntityManager after transaction
Authenticated user
Found thread-bound EntityManager [SessionImpl(1947048853<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7a9bd71a]
Loading entity: [com.coconet.server.entity.Token#admin]
select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Token#admin]
Resolving attributes for [com.coconet.server.entity.Token#admin]
Processing attribute `refreshToken` : value = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTY2MDI5ODA0N30.E1snwvG4bdfG5f29IuBs-UDAspJSLnxs60tks4coYoA
Attribute (`refreshToken`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Token#admin]
Done entity load
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1947048853<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=[com.coconet.server.entity.Authority#ROLE_ADMIN], email=admin}
com.coconet.server.entity.Authority{authorityName=ROLE_ADMIN}
com.coconet.server.entity.Token{email=admin, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTY2MDI5ODA0N30.E1snwvG4bdfG5f29IuBs-UDAspJSLnxs60tks4coYoA}
Not closing pre-bound JPA EntityManager after transaction
{&ip&:&192.168.57.1&, &tag&:&Login&, &title&:&로그인 성공&, &email&:&admin&, &date&:&2022. 08. 05. 18:54:07&}
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.AuthDto@36adc32b]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing GET /coconet/logs/admin
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/logs/admin
Authorized public object filter invocation [GET /coconet/logs/admin]
Secured GET /coconet/logs/admin
GET "/coconet/logs/admin", parameters={}
Mapped to com.coconet.server.controller.AdminLogController#adminLogInfo(HttpServletRequest, HttpServletResponse)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Securing GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
Set SecurityContextHolder to empty SecurityContext
Security Context에 'admin' 인증 정보를 저장했습니다, uri: /coconet/logs/user
Authorized public object filter invocation [GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84]
Secured GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
GET "/coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84", parameters={masked}
Mapped to com.coconet.server.controller.AdminLogController#userLogInfo(String, String, String, HttpServletRequest, HttpServletResponse)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'department'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'position'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : department -> org.hibernate.type.StringType@3c08363b
Resolved : generatedAlias0.department -> users0_.department
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : position -> org.hibernate.type.StringType@3c08363b
Resolved : generatedAlias0.position -> users0_.position
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : name -> org.hibernate.type.StringType@3c08363b
Resolved : generatedAlias0.name -> users0_.name
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( and ( and ( = ( users0_.department users0_.user_id department ) ? ) ( = ( users0_.position users0_.user_id position ) ? ) ) ( = ( users0_.name users0_.user_id name ) ? ) ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-BinaryLogicOperatorNode
          |  |  +-DotNode
          |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  | path: generatedAlias0.department
          |  |  |  +-IdentNode
          |  |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  |  | originalText: generatedAlias0
          |  |  |  \-IdentNode
          |  |  |    persister: null
          |  |  |    originalText: department
          |  |  \-ParameterNode
          |  \-BinaryLogicOperatorNode
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     | path: generatedAlias0.position
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     |  | originalText: generatedAlias0
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: position
          |     \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             | path: generatedAlias0.name
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: name
             \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'users0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=generatedAlias0.department,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3c08363b}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'users0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=generatedAlias0.position,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |     |  \-[IDENT] IdentNode: 'position' {originalText=position}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@3c08363b}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@3c08363b}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a73521c, started on Fri Aug 05 18:53:41 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2c8a1d85] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@78a1aa62]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=9, active=0, idle=9, waiting=0)
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 18012 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
Loading source class com.coconet.server.ServerApplication
HV000001: Hibernate Validator 6.2.3.Final
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Finished Spring Data repository scanning in 112 ms. Found 9 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@207cd51f'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@38a81122]
Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 7000 (http)
Initializing ProtocolHandler ["http-nio-7000"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 2634 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7ac64f69

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@207cd51f'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7ac64f69
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@720be7f7
Adding type registration boolean -> org.hibernate.type.BooleanType@720be7f7
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@720be7f7
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48292a46
Adding type registration true_false -> org.hibernate.type.TrueFalseType@13b890eb
Adding type registration yes_no -> org.hibernate.type.YesNoType@67b77736
Adding type registration byte -> org.hibernate.type.ByteType@52ef84f0
Adding type registration byte -> org.hibernate.type.ByteType@52ef84f0
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52ef84f0
Adding type registration character -> org.hibernate.type.CharacterType@79c29db4
Adding type registration char -> org.hibernate.type.CharacterType@79c29db4
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@79c29db4
Adding type registration short -> org.hibernate.type.ShortType@33e001ee
Adding type registration short -> org.hibernate.type.ShortType@33e001ee
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33e001ee
Adding type registration integer -> org.hibernate.type.IntegerType@18f3420c
Adding type registration int -> org.hibernate.type.IntegerType@18f3420c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@18f3420c
Adding type registration long -> org.hibernate.type.LongType@61ea42a0
Adding type registration long -> org.hibernate.type.LongType@61ea42a0
Adding type registration java.lang.Long -> org.hibernate.type.LongType@61ea42a0
Adding type registration float -> org.hibernate.type.FloatType@786f9be1
Adding type registration float -> org.hibernate.type.FloatType@786f9be1
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@786f9be1
Adding type registration double -> org.hibernate.type.DoubleType@7f06908e
Adding type registration double -> org.hibernate.type.DoubleType@7f06908e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7f06908e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64fadc72
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64fadc72
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2bfc5532
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2bfc5532
Adding type registration string -> org.hibernate.type.StringType@6ad5ac90
Adding type registration java.lang.String -> org.hibernate.type.StringType@6ad5ac90
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39d951a5
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58f7aa14
Adding type registration url -> org.hibernate.type.UrlType@5e329201
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e329201
Adding type registration Duration -> org.hibernate.type.DurationType@496e9ad4
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@496e9ad4
Adding type registration Instant -> org.hibernate.type.InstantType@190fbe95
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@190fbe95
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@278a5465
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@278a5465
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6591e4c5
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6591e4c5
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@471f3c1e
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@471f3c1e
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d8cf2bc
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d8cf2bc
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@39309400
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@39309400
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3fbb487f
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3fbb487f
Adding type registration date -> org.hibernate.type.DateType@76dce316
Adding type registration java.sql.Date -> org.hibernate.type.DateType@76dce316
Adding type registration time -> org.hibernate.type.TimeType@7ba8c121
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7ba8c121
Adding type registration timestamp -> org.hibernate.type.TimestampType@d61ec15
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d61ec15
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d61ec15
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@636ed749
Adding type registration calendar -> org.hibernate.type.CalendarType@1e6bd01b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e6bd01b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e6bd01b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e1cc535
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@79b37801
Adding type registration locale -> org.hibernate.type.LocaleType@2dad3936
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2dad3936
Adding type registration currency -> org.hibernate.type.CurrencyType@156121a9
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@156121a9
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2401b778
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2401b778
Adding type registration class -> org.hibernate.type.ClassType@75409d13
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75409d13
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e9167f0
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e9167f0
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b3f6777
Adding type registration binary -> org.hibernate.type.BinaryType@12bc6383
Adding type registration byte[] -> org.hibernate.type.BinaryType@12bc6383
Adding type registration [B -> org.hibernate.type.BinaryType@12bc6383
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44880436
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44880436
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44880436
Adding type registration row_version -> org.hibernate.type.RowVersionType@383e85a
Adding type registration image -> org.hibernate.type.ImageType@5f2b63f2
Adding type registration characters -> org.hibernate.type.CharArrayType@36201d82
Adding type registration char[] -> org.hibernate.type.CharArrayType@36201d82
Adding type registration [C -> org.hibernate.type.CharArrayType@36201d82
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5593644a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5593644a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5593644a
Adding type registration text -> org.hibernate.type.TextType@22df10ec
Adding type registration ntext -> org.hibernate.type.NTextType@5fd035bc
Adding type registration blob -> org.hibernate.type.BlobType@4a5e9232
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a5e9232
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4719eb27
Adding type registration clob -> org.hibernate.type.ClobType@235521ed
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@235521ed
Adding type registration nclob -> org.hibernate.type.NClobType@32e8fad4
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@32e8fad4
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d952279
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@232b82fb
Adding type registration serializable -> org.hibernate.type.SerializableType@7e322d63
Adding type registration object -> org.hibernate.type.ObjectType@3001ab6c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3001ab6c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c2fee95
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@30405553
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@28b2be5f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a40c0f9
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2938dc62
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1be0fedb
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@261dfbbe
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a56a08c
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@441927cb] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@441927cb) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3d101d82] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@833cfb3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@409a9e7f]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@441927cb]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@441927cb]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@362940a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@26f81a38]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2fbcd3d3, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7e21c926, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.7000.5401764324774330753, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=18012, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.7000.5401764324774330753, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@23eb1133, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@362940a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@68921bad]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6770fce4]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.day as day2_5_, notice_.title as title3_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (day, title, id) values (?, ?, ?)
 Update 0: update notice set day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, day, title) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2dd0f9]
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.day as day2_5_0_, notice0_.title as title3_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45fa76bd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b3a8ae4]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f84920d]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e736545]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@377cf2ab]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aa72722]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a4cb6f3]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5764d65]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17c9b327]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@904e2da]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2206d9df]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f15e79f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value integer not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@83947de
Registering SessionFactory: de1159a8-261c-47c7-9f2f-b6bf1c1c3191 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$43790870] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$43790870] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@207cd51f'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@207cd51f'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@fc1e642
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@6ad5ac90
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@18f3420c
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@6ad5ac90
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@6ad5ac90}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@6ad5ac90
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@18f3420c
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@18f3420c}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'logService'
Creating shared instance of singleton bean 'certificationService'
Creating shared instance of singleton bean 'logTag'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@47aee904, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f92c79, org.springframework.security.web.context.SecurityContextPersistenceFilter@14413062, org.springframework.security.web.header.HeaderWriterFilter@6618ea5c, org.springframework.security.web.authentication.logout.LogoutFilter@7e2fc93e, org.springframework.web.filter.CorsFilter@33cff0cb, com.coconet.server.jwt.JwtFilter@4d2dc3d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@550f0425, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23a45c15, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@497e0d1d, org.springframework.security.web.session.SessionManagementFilter@5221194f, org.springframework.security.web.access.ExceptionTranslationFilter@6b17fe3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4a415ac2]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/username]}: retrieveUsername(String,String)
	{GET [/coconet/user/department]}: retrieveDepartment()

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String,HttpServletRequest,HttpServletResponse)
	{GET [/coconet/logs/admin]}: adminLogInfo(HttpServletRequest,HttpServletResponse)

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/approval]}: approvalAll()
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{GET [/coconet/board/log]}: logAll()

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{POST [/coconet/image]}: createFeed(MultipartFile)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/login]}: login(LoginDto)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{POST [/coconet/users]}: createUser(Users)
	{POST [/coconet/signup]}: signup(UserDto)
	{GET [/coconet/users]}: retrieveAllUsers()

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
23 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@207cd51f'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, day) values(1, '공지사항 test1', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(2, '공지사항 test2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(3, '공지사항 test3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(4, '공지사항 test4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(5, '공지사항 test5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 73 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["http-nio-7000"]
Tomcat started on port(s): 7000 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 8.315 seconds (JVM running for 9.195)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@392cbdb0
Detected org.springframework.web.servlet.support.SessionFlashMapManager@754762a3
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 1 ms
Securing GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
Set SecurityContextHolder to empty SecurityContext
Security Context에 'admin' 인증 정보를 저장했습니다, uri: /coconet/logs/user
Authorized public object filter invocation [GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84]
Secured GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
GET "/coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84", parameters={masked}
Mapped to com.coconet.server.controller.AdminLogController#userLogInfo(String, String, String, HttpServletRequest, HttpServletResponse)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'department'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'position'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : department -> org.hibernate.type.StringType@6ad5ac90
Resolved : generatedAlias0.department -> users0_.department
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : position -> org.hibernate.type.StringType@6ad5ac90
Resolved : generatedAlias0.position -> users0_.position
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : name -> org.hibernate.type.StringType@6ad5ac90
Resolved : generatedAlias0.name -> users0_.name
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( and ( and ( = ( users0_.department users0_.user_id department ) ? ) ( = ( users0_.position users0_.user_id position ) ? ) ) ( = ( users0_.name users0_.user_id name ) ? ) ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-BinaryLogicOperatorNode
          |  |  +-DotNode
          |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  | path: generatedAlias0.department
          |  |  |  +-IdentNode
          |  |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  |  | originalText: generatedAlias0
          |  |  |  \-IdentNode
          |  |  |    persister: null
          |  |  |    originalText: department
          |  |  \-ParameterNode
          |  \-BinaryLogicOperatorNode
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     | path: generatedAlias0.position
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     |  | originalText: generatedAlias0
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: position
          |     \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             | path: generatedAlias0.name
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: name
             \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'users0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=generatedAlias0.department,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6ad5ac90}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'users0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=generatedAlias0.position,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |     |  \-[IDENT] IdentNode: 'position' {originalText=position}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@6ad5ac90}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@6ad5ac90}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@acfebe, started on Fri Aug 05 18:58:51 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1337cbfc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@68921bad]
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=9, active=0, idle=9, waiting=0)
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 22728 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
HV000001: Hibernate Validator 6.2.3.Final
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Finished Spring Data repository scanning in 108 ms. Found 9 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58c13474'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@4f99471]
Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 7000 (http)
Initializing ProtocolHandler ["http-nio-7000"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 2725 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@86b5d8f

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58c13474'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@86b5d8f
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@640662fb
Adding type registration boolean -> org.hibernate.type.BooleanType@640662fb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@640662fb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ce52426
Adding type registration true_false -> org.hibernate.type.TrueFalseType@78322d3a
Adding type registration yes_no -> org.hibernate.type.YesNoType@13c0f888
Adding type registration byte -> org.hibernate.type.ByteType@1565a427
Adding type registration byte -> org.hibernate.type.ByteType@1565a427
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1565a427
Adding type registration character -> org.hibernate.type.CharacterType@69772be
Adding type registration char -> org.hibernate.type.CharacterType@69772be
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@69772be
Adding type registration short -> org.hibernate.type.ShortType@1c4daf6f
Adding type registration short -> org.hibernate.type.ShortType@1c4daf6f
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c4daf6f
Adding type registration integer -> org.hibernate.type.IntegerType@34a16f67
Adding type registration int -> org.hibernate.type.IntegerType@34a16f67
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34a16f67
Adding type registration long -> org.hibernate.type.LongType@5b87835a
Adding type registration long -> org.hibernate.type.LongType@5b87835a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b87835a
Adding type registration float -> org.hibernate.type.FloatType@3f28792f
Adding type registration float -> org.hibernate.type.FloatType@3f28792f
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3f28792f
Adding type registration double -> org.hibernate.type.DoubleType@ce1fa93
Adding type registration double -> org.hibernate.type.DoubleType@ce1fa93
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ce1fa93
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1494e9dc
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1494e9dc
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@55c12ee6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@55c12ee6
Adding type registration string -> org.hibernate.type.StringType@2070073b
Adding type registration java.lang.String -> org.hibernate.type.StringType@2070073b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@845d309
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ed745e
Adding type registration url -> org.hibernate.type.UrlType@8910125
Adding type registration java.net.URL -> org.hibernate.type.UrlType@8910125
Adding type registration Duration -> org.hibernate.type.DurationType@5335982a
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5335982a
Adding type registration Instant -> org.hibernate.type.InstantType@2ec2a0d9
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2ec2a0d9
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4017d6ec
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4017d6ec
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@f5ff4e
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@f5ff4e
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@32cc9a48
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@32cc9a48
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5534bc9
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5534bc9
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2841c804
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2841c804
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60590c3f
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60590c3f
Adding type registration date -> org.hibernate.type.DateType@2b05c7c
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b05c7c
Adding type registration time -> org.hibernate.type.TimeType@1242ee7b
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1242ee7b
Adding type registration timestamp -> org.hibernate.type.TimestampType@1a997354
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a997354
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a997354
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@36ea32a3
Adding type registration calendar -> org.hibernate.type.CalendarType@6f062a6
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f062a6
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f062a6
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7381c57f
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1c73a618
Adding type registration locale -> org.hibernate.type.LocaleType@13db50d6
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13db50d6
Adding type registration currency -> org.hibernate.type.CurrencyType@35af27d4
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@35af27d4
Adding type registration timezone -> org.hibernate.type.TimeZoneType@341aa5ff
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@341aa5ff
Adding type registration class -> org.hibernate.type.ClassType@7bba2ef9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bba2ef9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@12f0587f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@12f0587f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@8bfc181
Adding type registration binary -> org.hibernate.type.BinaryType@2ddc5ddb
Adding type registration byte[] -> org.hibernate.type.BinaryType@2ddc5ddb
Adding type registration [B -> org.hibernate.type.BinaryType@2ddc5ddb
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3bfc5096
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3bfc5096
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3bfc5096
Adding type registration row_version -> org.hibernate.type.RowVersionType@cd43b3a
Adding type registration image -> org.hibernate.type.ImageType@7470ab1a
Adding type registration characters -> org.hibernate.type.CharArrayType@4eedd333
Adding type registration char[] -> org.hibernate.type.CharArrayType@4eedd333
Adding type registration [C -> org.hibernate.type.CharArrayType@4eedd333
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71958405
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71958405
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71958405
Adding type registration text -> org.hibernate.type.TextType@696c37e4
Adding type registration ntext -> org.hibernate.type.NTextType@789e8932
Adding type registration blob -> org.hibernate.type.BlobType@59291e85
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@59291e85
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b984185
Adding type registration clob -> org.hibernate.type.ClobType@55e391a8
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@55e391a8
Adding type registration nclob -> org.hibernate.type.NClobType@304c0253
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@304c0253
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7aad0cb8
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d6b372d
Adding type registration serializable -> org.hibernate.type.SerializableType@70cf7270
Adding type registration object -> org.hibernate.type.ObjectType@6d0e6348
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d0e6348
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d8f947e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@47d552db
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e453292
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50759830
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1118ca24
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7cb61156
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b106df0
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77d8c0ba
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1abf3e35] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1abf3e35) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@77f44b14] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b23e3f7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c5dd21c]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1abf3e35]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1abf3e35]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6cda1cff] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a2aa0bd]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@69ab97bd, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2e6ca92a, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.7000.9352444388782712362, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=22728, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.7000.9352444388782712362, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@ca1ad52, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6cda1cff] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2a14e388]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@657f1401]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.day as day2_5_, notice_.title as title3_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (day, title, id) values (?, ?, ?)
 Update 0: update notice set day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, day, title) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f34025c]
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.day as day2_5_0_, notice0_.title as title3_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e44e3ac]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51f41c65]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@272628af]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41701ce9]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7553d3b1]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d797a8]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c0266dc]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@acdd92d]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5476f8af]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fb6f73c]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@39a48695]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11ad6bb]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value integer not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7c291b6d
Registering SessionFactory: 335064a9-de32-42c8-93c1-e99dcc71cf0c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$d1b115c7] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$d1b115c7] because it is not cache-safe
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58c13474'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58c13474'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ab64ef5
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@2070073b
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@34a16f67
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@2070073b
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@2070073b}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@2070073b
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@34a16f67
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@34a16f67}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'logService'
Creating shared instance of singleton bean 'certificationService'
Creating shared instance of singleton bean 'logTag'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3e548ec0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7cc830c4, org.springframework.security.web.context.SecurityContextPersistenceFilter@73db717, org.springframework.security.web.header.HeaderWriterFilter@65adc75b, org.springframework.security.web.authentication.logout.LogoutFilter@6660a035, org.springframework.web.filter.CorsFilter@5e2fb82e, com.coconet.server.jwt.JwtFilter@521dd2c0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a455c88, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6dd6c8a5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e353efd, org.springframework.security.web.session.SessionManagementFilter@5ec14b0c, org.springframework.security.web.access.ExceptionTranslationFilter@24012bf3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f27af29]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/username]}: retrieveUsername(String,String)
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/department]}: retrieveDepartment()

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/admin]}: adminLogInfo(HttpServletRequest,HttpServletResponse)
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String,HttpServletRequest,HttpServletResponse)

	c.c.s.c.BoardJpaController:
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{GET [/coconet/board/log]}: logAll()
	{GET [/coconet/board/notice]}: noticeAll()
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{GET [/coconet/board/approval]}: approvalAll()

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{POST [/coconet/image]}: createFeed(MultipartFile)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/login]}: login(LoginDto)
	{POST [/coconet/users]}: createUser(Users)
	{GET [/coconet/users]}: retrieveAllUsers()
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{POST [/coconet/signup]}: signup(UserDto)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
23 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58c13474'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, day) values(1, '공지사항 test1', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(2, '공지사항 test2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(3, '공지사항 test3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(4, '공지사항 test4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, day) values(5, '공지사항 test5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 47 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["http-nio-7000"]
Tomcat started on port(s): 7000 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 7.329 seconds (JVM running for 8.219)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5dd51f48
Detected org.springframework.web.servlet.support.SessionFlashMapManager@596a8824
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 1 ms
Securing GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
Set SecurityContextHolder to empty SecurityContext
Security Context에 'admin' 인증 정보를 저장했습니다, uri: /coconet/logs/user
Authorized public object filter invocation [GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84]
Secured GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
GET "/coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84", parameters={masked}
Mapped to com.coconet.server.controller.AdminLogController#userLogInfo(String, String, String, HttpServletRequest, HttpServletResponse)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'department'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'position'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : department -> org.hibernate.type.StringType@2070073b
Resolved : generatedAlias0.department -> users0_.department
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : position -> org.hibernate.type.StringType@2070073b
Resolved : generatedAlias0.position -> users0_.position
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : name -> org.hibernate.type.StringType@2070073b
Resolved : generatedAlias0.name -> users0_.name
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( and ( and ( = ( users0_.department users0_.user_id department ) ? ) ( = ( users0_.position users0_.user_id position ) ? ) ) ( = ( users0_.name users0_.user_id name ) ? ) ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-BinaryLogicOperatorNode
          |  |  +-DotNode
          |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  | path: generatedAlias0.department
          |  |  |  +-IdentNode
          |  |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  |  | originalText: generatedAlias0
          |  |  |  \-IdentNode
          |  |  |    persister: null
          |  |  |    originalText: department
          |  |  \-ParameterNode
          |  \-BinaryLogicOperatorNode
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     | path: generatedAlias0.position
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     |  | originalText: generatedAlias0
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: position
          |     \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             | path: generatedAlias0.name
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: name
             \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'users0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=generatedAlias0.department,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2070073b}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'users0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=generatedAlias0.position,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |     |  \-[IDENT] IdentNode: 'position' {originalText=position}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@2070073b}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@2070073b}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing GET /coconet/logs/admin
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/logs/admin
Authorized public object filter invocation [GET /coconet/logs/admin]
Secured GET /coconet/logs/admin
GET "/coconet/logs/admin", parameters={}
Mapped to com.coconet.server.controller.AdminLogController#adminLogInfo(HttpServletRequest, HttpServletResponse)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030, started on Fri Aug 05 19:05:09 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2de513b5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2a14e388]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 29640 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
HV000001: Hibernate Validator 6.2.3.Final
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Finished Spring Data repository scanning in 89 ms. Found 9 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7373dd91'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@4d91f508]
Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 7000 (http)
Initializing ProtocolHandler ["http-nio-7000"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 2602 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2979d428

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7373dd91'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2979d428
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@881e3dd
Adding type registration boolean -> org.hibernate.type.BooleanType@881e3dd
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@881e3dd
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6e83e82
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e988f97
Adding type registration yes_no -> org.hibernate.type.YesNoType@1dc6c9d7
Adding type registration byte -> org.hibernate.type.ByteType@209ba048
Adding type registration byte -> org.hibernate.type.ByteType@209ba048
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@209ba048
Adding type registration character -> org.hibernate.type.CharacterType@7673ca26
Adding type registration char -> org.hibernate.type.CharacterType@7673ca26
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7673ca26
Adding type registration short -> org.hibernate.type.ShortType@432d50cc
Adding type registration short -> org.hibernate.type.ShortType@432d50cc
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@432d50cc
Adding type registration integer -> org.hibernate.type.IntegerType@47573e6c
Adding type registration int -> org.hibernate.type.IntegerType@47573e6c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@47573e6c
Adding type registration long -> org.hibernate.type.LongType@71ab8392
Adding type registration long -> org.hibernate.type.LongType@71ab8392
Adding type registration java.lang.Long -> org.hibernate.type.LongType@71ab8392
Adding type registration float -> org.hibernate.type.FloatType@39046d81
Adding type registration float -> org.hibernate.type.FloatType@39046d81
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39046d81
Adding type registration double -> org.hibernate.type.DoubleType@78592910
Adding type registration double -> org.hibernate.type.DoubleType@78592910
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@78592910
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ae95cee
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ae95cee
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4764df99
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4764df99
Adding type registration string -> org.hibernate.type.StringType@63332b55
Adding type registration java.lang.String -> org.hibernate.type.StringType@63332b55
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1850a165
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@72134419
Adding type registration url -> org.hibernate.type.UrlType@521e6701
Adding type registration java.net.URL -> org.hibernate.type.UrlType@521e6701
Adding type registration Duration -> org.hibernate.type.DurationType@4b905d24
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4b905d24
Adding type registration Instant -> org.hibernate.type.InstantType@7dda0961
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7dda0961
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d4fb670
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d4fb670
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@518ef74c
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@518ef74c
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@69b69284
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@69b69284
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@73bbd5c6
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@73bbd5c6
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@a402ba6
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@a402ba6
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6177ff2e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6177ff2e
Adding type registration date -> org.hibernate.type.DateType@7f597a99
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f597a99
Adding type registration time -> org.hibernate.type.TimeType@6a9bc3fc
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6a9bc3fc
Adding type registration timestamp -> org.hibernate.type.TimestampType@52e876c4
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52e876c4
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52e876c4
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f813b45
Adding type registration calendar -> org.hibernate.type.CalendarType@1447e9fa
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1447e9fa
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1447e9fa
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e6d80
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@76ea88c4
Adding type registration locale -> org.hibernate.type.LocaleType@1321ff2
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1321ff2
Adding type registration currency -> org.hibernate.type.CurrencyType@76d63ae8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@76d63ae8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@6a9fcef3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6a9fcef3
Adding type registration class -> org.hibernate.type.ClassType@10c96ae6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10c96ae6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@415659b2
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@415659b2
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6b5cff62
Adding type registration binary -> org.hibernate.type.BinaryType@33fb2ae
Adding type registration byte[] -> org.hibernate.type.BinaryType@33fb2ae
Adding type registration [B -> org.hibernate.type.BinaryType@33fb2ae
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3a875561
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3a875561
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3a875561
Adding type registration row_version -> org.hibernate.type.RowVersionType@62bef0a5
Adding type registration image -> org.hibernate.type.ImageType@1df6ba65
Adding type registration characters -> org.hibernate.type.CharArrayType@12f43337
Adding type registration char[] -> org.hibernate.type.CharArrayType@12f43337
Adding type registration [C -> org.hibernate.type.CharArrayType@12f43337
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ca6c839
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ca6c839
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ca6c839
Adding type registration text -> org.hibernate.type.TextType@6edcaa68
Adding type registration ntext -> org.hibernate.type.NTextType@1ff640aa
Adding type registration blob -> org.hibernate.type.BlobType@21f6ccba
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21f6ccba
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d671aa8
Adding type registration clob -> org.hibernate.type.ClobType@1abf6cc8
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1abf6cc8
Adding type registration nclob -> org.hibernate.type.NClobType@2c1e0c4a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c1e0c4a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@440fdeb5
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1470b8f
Adding type registration serializable -> org.hibernate.type.SerializableType@1f32da52
Adding type registration object -> org.hibernate.type.ObjectType@44ca4852
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44ca4852
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f1dc37
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@682b3427
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@33faf84f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5d8cf8ce
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5716972c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@66ad1be5
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f1afff
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@38016de7
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1bde9ac0] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1bde9ac0) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4bc6d5b4] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2d461735] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b25229f]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1bde9ac0]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1bde9ac0]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b4b4990] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4b9fed2e]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3f5a17ea, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@292c93da, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.7000.5030820347472385943, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=29640, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.7000.5030820347472385943, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@154cb240, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b4b4990] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1f0df939]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1061b562]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.day as day2_5_, notice_.title as title3_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (day, title, id) values (?, ?, ?)
 Update 0: update notice set day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, day, title) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6402379e]
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.day as day2_5_0_, notice0_.title as title3_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7228db83]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d344d9b]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8584184]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7635606c]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70fc6c5c]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50aa39b5]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35747852]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5918aa7e]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77d60bde]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41efb48d]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37b31091]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b0ea38b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value integer not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4e14e238
Registering SessionFactory: ab56daf1-d0ca-4356-bfdd-1c2b6d4a4a1a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$3dff5e3a] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$3dff5e3a] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7373dd91'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7373dd91'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@620d7439
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@63332b55
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@47573e6c
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@63332b55
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@63332b55}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@63332b55
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@47573e6c
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@47573e6c}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@47573e6c
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@63332b55
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@63332b55}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@63332b55
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@63332b55
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@63332b55
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@63332b55
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@63332b55}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@63332b55
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@63332b55
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@63332b55}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@47573e6c
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'logService'
Creating shared instance of singleton bean 'certificationService'
Creating shared instance of singleton bean 'logTag'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@67de5d23, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e991934, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f687813, org.springframework.security.web.header.HeaderWriterFilter@28dfdf, org.springframework.security.web.authentication.logout.LogoutFilter@74456950, org.springframework.web.filter.CorsFilter@514593be, com.coconet.server.jwt.JwtFilter@5cf938c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57d63563, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a5adddc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4ccebda7, org.springframework.security.web.session.SessionManagementFilter@7b9b8ccf, org.springframework.security.web.access.ExceptionTranslationFilter@5920420, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@550eef1]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73e491fc'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/username]}: retrieveUsername(String,String)
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/department]}: retrieveDepartment()

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String,HttpServletRequest,HttpServletResponse)
	{GET [/coconet/logs/admin]}: adminLogInfo(HttpServletRequest,HttpServletResponse)

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/log]}: logAll()
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{GET [/coconet/board/notice]}: noticeAll()

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{POST [/coconet/image]}: createFeed(MultipartFile)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/users]}: createUser(Users)
	{POST [/coconet/login]}: login(LoginDto)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{GET [/coconet/users]}: retrieveAllUsers()
	{POST [/coconet/signup]}: signup(UserDto)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
25 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7373dd91'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"')); nested exception is org.h2.jdbc.JdbcSQLException: Column "DATE" not found; SQL statement:
insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"')) [42122-197]
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@195c726d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1f0df939]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:596)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.coconet.server.ServerApplication.main(ServerApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Stopping service [Tomcat]
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"')); nested exception is org.h2.jdbc.JdbcSQLException: Column "DATE" not found; SQL statement:
insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"')) [42122-197]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.coconet.server.ServerApplication.main(ServerApplication.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"')); nested exception is org.h2.jdbc.JdbcSQLException: Column "DATE" not found; SQL statement:
insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"')) [42122-197]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:90)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 23 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLException: Column "DATE" not found; SQL statement:
insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"')) [42122-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:682)
	at org.h2.command.Parser.parseColumn(Parser.java:936)
	at org.h2.command.Parser.parseColumnList(Parser.java:920)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1258)
	at org.h2.command.Parser.parseInsert(Parser.java:1222)
	at org.h2.command.Parser.parsePrepared(Parser.java:431)
	at org.h2.command.Parser.parse(Parser.java:335)
	at org.h2.command.Parser.parse(Parser.java:307)
	at org.h2.command.Parser.prepareCommand(Parser.java:278)
	at org.h2.engine.Session.prepareLocal(Session.java:611)
	at org.h2.engine.Session.prepareCommand(Session.java:549)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1247)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:217)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 33 common frames omitted
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 31164 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
Loading source class com.coconet.server.ServerApplication
HV000001: Hibernate Validator 6.2.3.Final
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Finished Spring Data repository scanning in 100 ms. Found 9 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@41012fee'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@698e9567]
Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 7000 (http)
Initializing ProtocolHandler ["http-nio-7000"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 2462 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@151a8e4c

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@41012fee'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@151a8e4c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@6f5931a7
Adding type registration boolean -> org.hibernate.type.BooleanType@6f5931a7
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f5931a7
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40aba009
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6cd8ab8d
Adding type registration yes_no -> org.hibernate.type.YesNoType@7c6f2f6f
Adding type registration byte -> org.hibernate.type.ByteType@20745224
Adding type registration byte -> org.hibernate.type.ByteType@20745224
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20745224
Adding type registration character -> org.hibernate.type.CharacterType@e297a75
Adding type registration char -> org.hibernate.type.CharacterType@e297a75
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@e297a75
Adding type registration short -> org.hibernate.type.ShortType@3189e10c
Adding type registration short -> org.hibernate.type.ShortType@3189e10c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3189e10c
Adding type registration integer -> org.hibernate.type.IntegerType@324fcf77
Adding type registration int -> org.hibernate.type.IntegerType@324fcf77
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@324fcf77
Adding type registration long -> org.hibernate.type.LongType@4ea29d47
Adding type registration long -> org.hibernate.type.LongType@4ea29d47
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4ea29d47
Adding type registration float -> org.hibernate.type.FloatType@7febd665
Adding type registration float -> org.hibernate.type.FloatType@7febd665
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7febd665
Adding type registration double -> org.hibernate.type.DoubleType@5a83410a
Adding type registration double -> org.hibernate.type.DoubleType@5a83410a
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a83410a
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@52724fc
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@52724fc
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2638a17c
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2638a17c
Adding type registration string -> org.hibernate.type.StringType@700c76cd
Adding type registration java.lang.String -> org.hibernate.type.StringType@700c76cd
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@36e552db
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@658cc77a
Adding type registration url -> org.hibernate.type.UrlType@2b21829e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2b21829e
Adding type registration Duration -> org.hibernate.type.DurationType@1688c88e
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1688c88e
Adding type registration Instant -> org.hibernate.type.InstantType@4944b56f
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4944b56f
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5c41f4bf
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5c41f4bf
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6c1ef173
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6c1ef173
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7712c558
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7712c558
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@e5d015
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@e5d015
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@53982e68
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@53982e68
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69be00e6
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69be00e6
Adding type registration date -> org.hibernate.type.DateType@1e95a701
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e95a701
Adding type registration time -> org.hibernate.type.TimeType@35a4305f
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@35a4305f
Adding type registration timestamp -> org.hibernate.type.TimestampType@52477e41
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52477e41
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52477e41
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@37fa4a57
Adding type registration calendar -> org.hibernate.type.CalendarType@3486845e
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3486845e
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3486845e
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5be6388
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1cf706f
Adding type registration locale -> org.hibernate.type.LocaleType@6da01eef
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6da01eef
Adding type registration currency -> org.hibernate.type.CurrencyType@6808d944
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6808d944
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4db5c15d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4db5c15d
Adding type registration class -> org.hibernate.type.ClassType@6b33cddb
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b33cddb
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@19ae38d3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@19ae38d3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11a0ccb9
Adding type registration binary -> org.hibernate.type.BinaryType@220d2dff
Adding type registration byte[] -> org.hibernate.type.BinaryType@220d2dff
Adding type registration [B -> org.hibernate.type.BinaryType@220d2dff
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@72986bbf
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@72986bbf
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@72986bbf
Adding type registration row_version -> org.hibernate.type.RowVersionType@16cc8cec
Adding type registration image -> org.hibernate.type.ImageType@2029f3
Adding type registration characters -> org.hibernate.type.CharArrayType@39be99ea
Adding type registration char[] -> org.hibernate.type.CharArrayType@39be99ea
Adding type registration [C -> org.hibernate.type.CharArrayType@39be99ea
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3782fb94
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3782fb94
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3782fb94
Adding type registration text -> org.hibernate.type.TextType@23b2d61e
Adding type registration ntext -> org.hibernate.type.NTextType@10f49482
Adding type registration blob -> org.hibernate.type.BlobType@419060f3
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@419060f3
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@740ad4f1
Adding type registration clob -> org.hibernate.type.ClobType@1294aba4
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1294aba4
Adding type registration nclob -> org.hibernate.type.NClobType@7253b34c
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7253b34c
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67cc3420
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@68ef5ce9
Adding type registration serializable -> org.hibernate.type.SerializableType@1da895cb
Adding type registration object -> org.hibernate.type.ObjectType@17d607d5
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@17d607d5
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b46c3cc
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2d5953a7
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61d5b32a
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61b56a02
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3cb09d5b
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b133501
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@171391aa
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d3c0c30
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2c0e1387] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2c0e1387) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4853714] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5871d6d8] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4f517137]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2c0e1387]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2c0e1387]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30b6448c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@221b5357]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:date]
building SimpleValue for date
Building property date
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for date
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@35227abf, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1aceb263, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.7000.7470903612407154782, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=31164, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.7000.7470903612407154782, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@657dc835, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30b6448c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7bffa302]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d4bcc5]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.date as date2_5_, notice_.day as day3_5_, notice_.title as title4_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (date, day, title, id) values (?, ?, ?, ?)
 Update 0: update notice set date=?, day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, date, day, title) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@666a3cb1]
Visiting attribute path : date
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.date as date2_5_0_, notice0_.day as day3_5_0_, notice0_.title as title4_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448f0182]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@680842b7]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53b8c476]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ec0eb63]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5695c359]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25099afa]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@903a3aa]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a66faa7]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e19a5e3]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bdd6168]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@114253f7]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39701cdf]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value integer not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, date varchar(255), day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@690d5b82
Registering SessionFactory: cfe651ba-d9c2-4b9c-b8a8-8c3b4f62aa10 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$427e6d21] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$427e6d21] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@41012fee'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@41012fee'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5c276254
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@700c76cd
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@324fcf77
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@700c76cd
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@700c76cd}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@700c76cd
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@324fcf77
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@324fcf77}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@324fcf77
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@700c76cd
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@700c76cd}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@700c76cd
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@700c76cd
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@700c76cd
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@700c76cd
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@700c76cd}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@700c76cd
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@700c76cd
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@700c76cd}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@324fcf77
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'logService'
Creating shared instance of singleton bean 'certificationService'
Creating shared instance of singleton bean 'logTag'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@51bd6501, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@391d9d0c, org.springframework.security.web.context.SecurityContextPersistenceFilter@512692eb, org.springframework.security.web.header.HeaderWriterFilter@3b0d9b92, org.springframework.security.web.authentication.logout.LogoutFilter@5b8b4d25, org.springframework.web.filter.CorsFilter@6fc6e62d, com.coconet.server.jwt.JwtFilter@448bc564, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f684141, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@577d2fb8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f271e3d, org.springframework.security.web.session.SessionManagementFilter@27ee8c4a, org.springframework.security.web.access.ExceptionTranslationFilter@5d474b9e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@d9cba80]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/department]}: retrieveDepartment()
	{GET [/coconet/user/username]}: retrieveUsername(String,String)
	{GET [/coconet/user/position]}: retrievePosition(String)

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String,HttpServletRequest,HttpServletResponse)
	{GET [/coconet/logs/admin]}: adminLogInfo(HttpServletRequest,HttpServletResponse)

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{GET [/coconet/board/log]}: logAll()
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{POST [/coconet/image]}: createFeed(MultipartFile)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/users]}: createUser(Users)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{POST [/coconet/login]}: login(LoginDto)
	{GET [/coconet/users]}: retrieveAllUsers()
	{POST [/coconet/signup]}: signup(UserDto)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
25 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@41012fee'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(2, '공지사항 test2', '공지사항 내용2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(3, '공지사항 test3', '공지사항 내용3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(4, '공지사항 test4', '공지사항 내용4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(5, '공지사항 test5', '공지사항 내용5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(6, '공지사항 test6', '공지사항 내용6', to_char('2021.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(7, '공지사항 test7', '공지사항 내용7', to_char('2020.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 46 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["http-nio-7000"]
Tomcat started on port(s): 7000 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 7.043 seconds (JVM running for 7.924)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@197a9972
Detected org.springframework.web.servlet.support.SessionFlashMapManager@2282192f
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 2 ms
Securing GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
Set SecurityContextHolder to empty SecurityContext
Security Context에 'admin' 인증 정보를 저장했습니다, uri: /coconet/logs/user
Authorized public object filter invocation [GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84]
Secured GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
GET "/coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84", parameters={masked}
Mapped to com.coconet.server.controller.AdminLogController#userLogInfo(String, String, String, HttpServletRequest, HttpServletResponse)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'department'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'position'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : department -> org.hibernate.type.StringType@700c76cd
Resolved : generatedAlias0.department -> users0_.department
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : position -> org.hibernate.type.StringType@700c76cd
Resolved : generatedAlias0.position -> users0_.position
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : name -> org.hibernate.type.StringType@700c76cd
Resolved : generatedAlias0.name -> users0_.name
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( and ( and ( = ( users0_.department users0_.user_id department ) ? ) ( = ( users0_.position users0_.user_id position ) ? ) ) ( = ( users0_.name users0_.user_id name ) ? ) ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-BinaryLogicOperatorNode
          |  |  +-DotNode
          |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  | path: generatedAlias0.department
          |  |  |  +-IdentNode
          |  |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  |  | originalText: generatedAlias0
          |  |  |  \-IdentNode
          |  |  |    persister: null
          |  |  |    originalText: department
          |  |  \-ParameterNode
          |  \-BinaryLogicOperatorNode
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     | path: generatedAlias0.position
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     |  | originalText: generatedAlias0
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: position
          |     \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             | path: generatedAlias0.name
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: name
             \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'users0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=generatedAlias0.department,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@700c76cd}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'users0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=generatedAlias0.position,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |     |  \-[IDENT] IdentNode: 'position' {originalText=position}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@700c76cd}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@700c76cd}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@477a3f41, started on Fri Aug 05 20:27:12 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5af732aa] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7bffa302]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 26156 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
HV000001: Hibernate Validator 6.2.3.Final
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Finished Spring Data repository scanning in 103 ms. Found 9 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5f2596c4'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@24143927]
Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 7000 (http)
Initializing ProtocolHandler ["http-nio-7000"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 2858 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@30ffeb0d

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5f2596c4'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@30ffeb0d
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7ba01464
Adding type registration boolean -> org.hibernate.type.BooleanType@7ba01464
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ba01464
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1bebb446
Adding type registration true_false -> org.hibernate.type.TrueFalseType@53ee85ba
Adding type registration yes_no -> org.hibernate.type.YesNoType@1b689a1d
Adding type registration byte -> org.hibernate.type.ByteType@2be6ca40
Adding type registration byte -> org.hibernate.type.ByteType@2be6ca40
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2be6ca40
Adding type registration character -> org.hibernate.type.CharacterType@b942789
Adding type registration char -> org.hibernate.type.CharacterType@b942789
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b942789
Adding type registration short -> org.hibernate.type.ShortType@ac4a62d
Adding type registration short -> org.hibernate.type.ShortType@ac4a62d
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@ac4a62d
Adding type registration integer -> org.hibernate.type.IntegerType@3bb07ee6
Adding type registration int -> org.hibernate.type.IntegerType@3bb07ee6
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3bb07ee6
Adding type registration long -> org.hibernate.type.LongType@702cad9a
Adding type registration long -> org.hibernate.type.LongType@702cad9a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@702cad9a
Adding type registration float -> org.hibernate.type.FloatType@67421e04
Adding type registration float -> org.hibernate.type.FloatType@67421e04
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@67421e04
Adding type registration double -> org.hibernate.type.DoubleType@854d0a1
Adding type registration double -> org.hibernate.type.DoubleType@854d0a1
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@854d0a1
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@349dee91
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@349dee91
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31d4d7da
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31d4d7da
Adding type registration string -> org.hibernate.type.StringType@57224552
Adding type registration java.lang.String -> org.hibernate.type.StringType@57224552
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@58c9f19d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@735ad0a1
Adding type registration url -> org.hibernate.type.UrlType@73c4ba
Adding type registration java.net.URL -> org.hibernate.type.UrlType@73c4ba
Adding type registration Duration -> org.hibernate.type.DurationType@2c23a9f9
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2c23a9f9
Adding type registration Instant -> org.hibernate.type.InstantType@43ae3caa
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43ae3caa
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c73a1e6
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c73a1e6
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@14a58a72
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@14a58a72
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@11b70993
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@11b70993
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c73b259
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c73b259
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@579ced7d
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@579ced7d
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5eb6b45f
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5eb6b45f
Adding type registration date -> org.hibernate.type.DateType@1e731c4b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e731c4b
Adding type registration time -> org.hibernate.type.TimeType@a515cd6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@a515cd6
Adding type registration timestamp -> org.hibernate.type.TimestampType@384d653d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@384d653d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@384d653d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a0ec52d
Adding type registration calendar -> org.hibernate.type.CalendarType@7b84fb0
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b84fb0
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b84fb0
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4b942e8c
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b8c6a25
Adding type registration locale -> org.hibernate.type.LocaleType@81e4ba5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@81e4ba5
Adding type registration currency -> org.hibernate.type.CurrencyType@2ca71e45
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ca71e45
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d99c829
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d99c829
Adding type registration class -> org.hibernate.type.ClassType@25928e4a
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@25928e4a
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1733c8c8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1733c8c8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a17195f
Adding type registration binary -> org.hibernate.type.BinaryType@1be35e53
Adding type registration byte[] -> org.hibernate.type.BinaryType@1be35e53
Adding type registration [B -> org.hibernate.type.BinaryType@1be35e53
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6cac22a1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6cac22a1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6cac22a1
Adding type registration row_version -> org.hibernate.type.RowVersionType@386cf5ed
Adding type registration image -> org.hibernate.type.ImageType@427bf301
Adding type registration characters -> org.hibernate.type.CharArrayType@7463585b
Adding type registration char[] -> org.hibernate.type.CharArrayType@7463585b
Adding type registration [C -> org.hibernate.type.CharArrayType@7463585b
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a39b94d
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a39b94d
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a39b94d
Adding type registration text -> org.hibernate.type.TextType@11cb013
Adding type registration ntext -> org.hibernate.type.NTextType@756ea997
Adding type registration blob -> org.hibernate.type.BlobType@12549371
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12549371
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@a20e192
Adding type registration clob -> org.hibernate.type.ClobType@70696d1e
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@70696d1e
Adding type registration nclob -> org.hibernate.type.NClobType@7f69dbc
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7f69dbc
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@fe4003b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@260d64d4
Adding type registration serializable -> org.hibernate.type.SerializableType@602f324
Adding type registration object -> org.hibernate.type.ObjectType@86157fb
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@86157fb
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@679fdc78
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ff210ac
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58f179d8
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@21461d43
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@38a3790f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57bb69c7
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4d7f551
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@156a4c8d
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c71d9b8] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c71d9b8) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4b2ee77b] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@72592e76] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@57ac909f]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c71d9b8]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c71d9b8]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26764db] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3f667a9d]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:date]
building SimpleValue for date
Building property date
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for date
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1c8c9131, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@753e1238, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.7000.12820385188618331370, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=26156, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.7000.12820385188618331370, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@689d41ef, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@26764db] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@718e5ca6]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@396660d1]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.date as date2_5_, notice_.day as day3_5_, notice_.title as title4_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (date, day, title, id) values (?, ?, ?, ?)
 Update 0: update notice set date=?, day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, date, day, title) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64f1bbd9]
Visiting attribute path : date
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.date as date2_5_0_, notice0_.day as day3_5_0_, notice0_.title as title4_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fff4995]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50d89f0d]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@478f9189]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bde1d80]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7297c704]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@493abbad]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e09f49]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1af9be59]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6866d398]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d7dcb3a]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ce5c0d0]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10f79b74]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value integer not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, date varchar(255), day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@38ef09be
Registering SessionFactory: 0b76d3b1-7128-47ab-ba31-65bd0de3f89e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$866cffde] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$866cffde] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5f2596c4'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5f2596c4'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2b2b8483
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@57224552
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@3bb07ee6
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@57224552
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@57224552}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@57224552
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@3bb07ee6
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@3bb07ee6}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@3bb07ee6
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@57224552
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@57224552}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@57224552
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@57224552
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@57224552
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@57224552
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@57224552}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@57224552
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@57224552
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@57224552}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@3bb07ee6
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'logService'
Creating shared instance of singleton bean 'certificationService'
Creating shared instance of singleton bean 'logTag'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@55e587c7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64ff4d03, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c16085e, org.springframework.security.web.header.HeaderWriterFilter@710e8026, org.springframework.security.web.authentication.logout.LogoutFilter@449a2a0, org.springframework.web.filter.CorsFilter@71ba35f4, com.coconet.server.jwt.JwtFilter@13329cf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5abfc755, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4418e5ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6c0a2a61, org.springframework.security.web.session.SessionManagementFilter@6e30da43, org.springframework.security.web.access.ExceptionTranslationFilter@2110c1ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e37e383]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/username]}: retrieveUsername(String,String)
	{GET [/coconet/user/department]}: retrieveDepartment()

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/admin]}: adminLogInfo(HttpServletRequest,HttpServletResponse)
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String,HttpServletRequest,HttpServletResponse)

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/log]}: logAll()
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{POST [/coconet/image]}: createFeed(MultipartFile)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{POST [/coconet/users]}: createUser(Users)
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/signup]}: signup(UserDto)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{GET [/coconet/users]}: retrieveAllUsers()
	{POST [/coconet/login]}: login(LoginDto)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
25 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5f2596c4'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(2, '공지사항 test2', '공지사항 내용2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(3, '공지사항 test3', '공지사항 내용3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(4, '공지사항 test4', '공지사항 내용4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(5, '공지사항 test5', '공지사항 내용5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(6, '공지사항 test6', '공지사항 내용6', to_char('2021.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(7, '공지사항 test7', '공지사항 내용7', to_char('2020.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 47 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["http-nio-7000"]
Tomcat started on port(s): 7000 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 7.806 seconds (JVM running for 8.752)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8c5ef1, started on Fri Aug 05 20:29:13 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@f75be53] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@718e5ca6]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=8, active=0, idle=8, waiting=0)
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 29320 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
HV000001: Hibernate Validator 6.2.3.Final
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Finished Spring Data repository scanning in 113 ms. Found 9 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58c13474'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@19a328bb]
Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 7000 (http)
Initializing ProtocolHandler ["http-nio-7000"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 2694 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@793b41a8

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'entityManagerFactory'
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58c13474'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@793b41a8
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@3ce52426
Adding type registration boolean -> org.hibernate.type.BooleanType@3ce52426
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3ce52426
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78322d3a
Adding type registration true_false -> org.hibernate.type.TrueFalseType@13c0f888
Adding type registration yes_no -> org.hibernate.type.YesNoType@6c0a2d10
Adding type registration byte -> org.hibernate.type.ByteType@177edb82
Adding type registration byte -> org.hibernate.type.ByteType@177edb82
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@177edb82
Adding type registration character -> org.hibernate.type.CharacterType@4b7f0697
Adding type registration char -> org.hibernate.type.CharacterType@4b7f0697
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4b7f0697
Adding type registration short -> org.hibernate.type.ShortType@745408fb
Adding type registration short -> org.hibernate.type.ShortType@745408fb
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@745408fb
Adding type registration integer -> org.hibernate.type.IntegerType@68209662
Adding type registration int -> org.hibernate.type.IntegerType@68209662
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@68209662
Adding type registration long -> org.hibernate.type.LongType@673b1890
Adding type registration long -> org.hibernate.type.LongType@673b1890
Adding type registration java.lang.Long -> org.hibernate.type.LongType@673b1890
Adding type registration float -> org.hibernate.type.FloatType@30ec724f
Adding type registration float -> org.hibernate.type.FloatType@30ec724f
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@30ec724f
Adding type registration double -> org.hibernate.type.DoubleType@4bc4b131
Adding type registration double -> org.hibernate.type.DoubleType@4bc4b131
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bc4b131
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30f3c93
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30f3c93
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13ca31a3
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13ca31a3
Adding type registration string -> org.hibernate.type.StringType@845d309
Adding type registration java.lang.String -> org.hibernate.type.StringType@845d309
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2ed745e
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4fd28dcf
Adding type registration url -> org.hibernate.type.UrlType@1daa4225
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1daa4225
Adding type registration Duration -> org.hibernate.type.DurationType@216d68b4
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@216d68b4
Adding type registration Instant -> org.hibernate.type.InstantType@1814eeef
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1814eeef
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a834290
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a834290
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1fb6a18c
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1fb6a18c
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@40c53de2
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@40c53de2
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cb6e37
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5cb6e37
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@658da8be
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@658da8be
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@38b30ab0
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@38b30ab0
Adding type registration date -> org.hibernate.type.DateType@624f2b12
Adding type registration java.sql.Date -> org.hibernate.type.DateType@624f2b12
Adding type registration time -> org.hibernate.type.TimeType@6a1a54de
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6a1a54de
Adding type registration timestamp -> org.hibernate.type.TimestampType@36ea32a3
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36ea32a3
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36ea32a3
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2196d0dd
Adding type registration calendar -> org.hibernate.type.CalendarType@c96c005
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c96c005
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c96c005
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63b63d33
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4b26f077
Adding type registration locale -> org.hibernate.type.LocaleType@463537b9
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@463537b9
Adding type registration currency -> org.hibernate.type.CurrencyType@27744d5d
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@27744d5d
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5986720b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5986720b
Adding type registration class -> org.hibernate.type.ClassType@302853ab
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@302853ab
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@8bfc181
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@8bfc181
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@475f0cd6
Adding type registration binary -> org.hibernate.type.BinaryType@e995caa
Adding type registration byte[] -> org.hibernate.type.BinaryType@e995caa
Adding type registration [B -> org.hibernate.type.BinaryType@e995caa
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@506bd89e
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@506bd89e
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@506bd89e
Adding type registration row_version -> org.hibernate.type.RowVersionType@7470ab1a
Adding type registration image -> org.hibernate.type.ImageType@3e9630ef
Adding type registration characters -> org.hibernate.type.CharArrayType@53536670
Adding type registration char[] -> org.hibernate.type.CharArrayType@53536670
Adding type registration [C -> org.hibernate.type.CharArrayType@53536670
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@696c37e4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@696c37e4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@696c37e4
Adding type registration text -> org.hibernate.type.TextType@789e8932
Adding type registration ntext -> org.hibernate.type.NTextType@4e0f5e92
Adding type registration blob -> org.hibernate.type.BlobType@4b984185
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b984185
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3798013f
Adding type registration clob -> org.hibernate.type.ClobType@6c71236b
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6c71236b
Adding type registration nclob -> org.hibernate.type.NClobType@7aad0cb8
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7aad0cb8
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3d6b372d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@422c405
Adding type registration serializable -> org.hibernate.type.SerializableType@1e4463b0
Adding type registration object -> org.hibernate.type.ObjectType@3d8f947e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3d8f947e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1118ca24
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7cb61156
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@b106df0
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@77d8c0ba
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20c66d8f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c36f460
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64c17bfb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@55adbac9
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@24e9dbef] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@24e9dbef) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@43781df4] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@47406237] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@551f85f1]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@24e9dbef]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@24e9dbef]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61827155] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ef20a90]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:date]
building SimpleValue for date
Building property date
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for date
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@702292fa, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3b4c402d, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.7000.7254349132573189690, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=29320, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.7000.7254349132573189690, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3a86b12b, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61827155] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@49dc1f04]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@461aafa1]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.date as date2_5_, notice_.day as day3_5_, notice_.title as title4_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (date, day, title, id) values (?, ?, ?, ?)
 Update 0: update notice set date=?, day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, date, day, title) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1004a4c4]
Visiting attribute path : date
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.date as date2_5_0_, notice0_.day as day3_5_0_, notice0_.title as title4_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@88d3b1d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28d3be09]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b23258b]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7553d3b1]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d46624a]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70b94135]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4470a1bf]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4969c6b9]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39cad3d9]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5195be4e]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7616771b]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36500678]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value integer not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, date varchar(255), day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@71cc90fd
Registering SessionFactory: f81baca7-9642-422a-9314-2269b9f438a7 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$8f752acc] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$8f752acc] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58c13474'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58c13474'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@f85dce8
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@845d309
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@68209662
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@845d309
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@845d309}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@845d309
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@68209662
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@68209662}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@68209662
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@845d309
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@845d309}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@845d309
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@845d309
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@845d309
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@845d309
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@845d309}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@845d309
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@845d309
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@845d309}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@68209662
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'logService'
Creating shared instance of singleton bean 'certificationService'
Creating shared instance of singleton bean 'logTag'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2f7286d1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e1c339f, org.springframework.security.web.context.SecurityContextPersistenceFilter@339ea271, org.springframework.security.web.header.HeaderWriterFilter@609b28fa, org.springframework.security.web.authentication.logout.LogoutFilter@1b625f14, org.springframework.web.filter.CorsFilter@616122db, com.coconet.server.jwt.JwtFilter@75e948df, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e6a0a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6660a035, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24954f44, org.springframework.security.web.session.SessionManagementFilter@37f3ab2b, org.springframework.security.web.access.ExceptionTranslationFilter@7d2071e5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5037ef]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/username]}: retrieveUsername(String,String)
	{GET [/coconet/user/department]}: retrieveDepartment()

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/admin]}: adminLogInfo(HttpServletRequest,HttpServletResponse)
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String,HttpServletRequest,HttpServletResponse)

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/notice]}: noticeAll()
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{GET [/coconet/board/log]}: logAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{POST [/coconet/image]}: createFeed(MultipartFile)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{GET [/coconet/users]}: retrieveAllUsers()
	{POST [/coconet/signup]}: signup(UserDto)
	{POST [/coconet/login]}: login(LoginDto)
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{POST [/coconet/users]}: createUser(Users)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
25 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@58c13474'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(2, '공지사항 test2', '공지사항 내용2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(3, '공지사항 test3', '공지사항 내용3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(4, '공지사항 test4', '공지사항 내용4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(5, '공지사항 test5', '공지사항 내용5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(6, '공지사항 test6', '공지사항 내용6', to_char('2021.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(7, '공지사항 test7', '공지사항 내용7', to_char('2020.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 49 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["http-nio-7000"]
Tomcat started on port(s): 7000 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 7.334 seconds (JVM running for 8.202)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6c71a7bf
Detected org.springframework.web.servlet.support.SessionFlashMapManager@7212996b
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 1 ms
Securing GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
Set SecurityContextHolder to empty SecurityContext
Security Context에 'admin' 인증 정보를 저장했습니다, uri: /coconet/logs/user
Authorized public object filter invocation [GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84]
Secured GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
GET "/coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84", parameters={masked}
Mapped to com.coconet.server.controller.AdminLogController#userLogInfo(String, String, String, HttpServletRequest, HttpServletResponse)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'department'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'position'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : department -> org.hibernate.type.StringType@845d309
Resolved : generatedAlias0.department -> users0_.department
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : position -> org.hibernate.type.StringType@845d309
Resolved : generatedAlias0.position -> users0_.position
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : name -> org.hibernate.type.StringType@845d309
Resolved : generatedAlias0.name -> users0_.name
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( and ( and ( = ( users0_.department users0_.user_id department ) ? ) ( = ( users0_.position users0_.user_id position ) ? ) ) ( = ( users0_.name users0_.user_id name ) ? ) ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-BinaryLogicOperatorNode
          |  |  +-DotNode
          |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  | path: generatedAlias0.department
          |  |  |  +-IdentNode
          |  |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  |  | originalText: generatedAlias0
          |  |  |  \-IdentNode
          |  |  |    persister: null
          |  |  |    originalText: department
          |  |  \-ParameterNode
          |  \-BinaryLogicOperatorNode
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     | path: generatedAlias0.position
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     |  | originalText: generatedAlias0
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: position
          |     \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             | path: generatedAlias0.name
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: name
             \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'users0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=generatedAlias0.department,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@845d309}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'users0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=generatedAlias0.position,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |     |  \-[IDENT] IdentNode: 'position' {originalText=position}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@845d309}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@845d309}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [[{"tag":"Login", "title":"로그인 성공", "name":"김은비", "email":"keb@naver.com", "date":"2022. 08. 05. 18:4 (truncated)...]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16ba3030, started on Fri Aug 05 20:30:32 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Add connection elided, waiting 1, queue 5
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e08f528] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@49dc1f04]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=6, active=0, idle=6, waiting=0)
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 28612 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
Loading source class com.coconet.server.ServerApplication
HV000001: Hibernate Validator 6.2.3.Final
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Finished Spring Data repository scanning in 101 ms. Found 9 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@9d48028'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@e598a79]
Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 7000 (http)
Initializing ProtocolHandler ["http-nio-7000"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 2637 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@37931feb

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'entityManagerFactory'
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@9d48028'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@37931feb
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@5f3b28f8
Adding type registration boolean -> org.hibernate.type.BooleanType@5f3b28f8
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f3b28f8
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@796eb83
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5216441
Adding type registration yes_no -> org.hibernate.type.YesNoType@349912b5
Adding type registration byte -> org.hibernate.type.ByteType@5e2a317e
Adding type registration byte -> org.hibernate.type.ByteType@5e2a317e
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e2a317e
Adding type registration character -> org.hibernate.type.CharacterType@3caef989
Adding type registration char -> org.hibernate.type.CharacterType@3caef989
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3caef989
Adding type registration short -> org.hibernate.type.ShortType@78f57f
Adding type registration short -> org.hibernate.type.ShortType@78f57f
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78f57f
Adding type registration integer -> org.hibernate.type.IntegerType@6f52c46b
Adding type registration int -> org.hibernate.type.IntegerType@6f52c46b
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6f52c46b
Adding type registration long -> org.hibernate.type.LongType@7d1ede16
Adding type registration long -> org.hibernate.type.LongType@7d1ede16
Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d1ede16
Adding type registration float -> org.hibernate.type.FloatType@47cd81d8
Adding type registration float -> org.hibernate.type.FloatType@47cd81d8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47cd81d8
Adding type registration double -> org.hibernate.type.DoubleType@5ed6fcf
Adding type registration double -> org.hibernate.type.DoubleType@5ed6fcf
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ed6fcf
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@22390db2
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@22390db2
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c9845d6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c9845d6
Adding type registration string -> org.hibernate.type.StringType@91431aa
Adding type registration java.lang.String -> org.hibernate.type.StringType@91431aa
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2bc124b6
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@721cf8b2
Adding type registration url -> org.hibernate.type.UrlType@e22f4ac
Adding type registration java.net.URL -> org.hibernate.type.UrlType@e22f4ac
Adding type registration Duration -> org.hibernate.type.DurationType@2cb966c1
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2cb966c1
Adding type registration Instant -> org.hibernate.type.InstantType@475cfdce
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@475cfdce
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@79246695
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@79246695
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a5f7c01
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a5f7c01
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5602da8c
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5602da8c
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d91395c
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d91395c
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@739dac07
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@739dac07
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@774066f4
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@774066f4
Adding type registration date -> org.hibernate.type.DateType@afc0097
Adding type registration java.sql.Date -> org.hibernate.type.DateType@afc0097
Adding type registration time -> org.hibernate.type.TimeType@74c45c10
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74c45c10
Adding type registration timestamp -> org.hibernate.type.TimestampType@744956e5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@744956e5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@744956e5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@96cee9a
Adding type registration calendar -> org.hibernate.type.CalendarType@58392d0d
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@58392d0d
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@58392d0d
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3adb0058
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5c15fbdb
Adding type registration locale -> org.hibernate.type.LocaleType@2c1aabf6
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c1aabf6
Adding type registration currency -> org.hibernate.type.CurrencyType@707872b6
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@707872b6
Adding type registration timezone -> org.hibernate.type.TimeZoneType@18d9780b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@18d9780b
Adding type registration class -> org.hibernate.type.ClassType@3b0a6483
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b0a6483
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15cddf86
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15cddf86
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7f8d407a
Adding type registration binary -> org.hibernate.type.BinaryType@39c964fc
Adding type registration byte[] -> org.hibernate.type.BinaryType@39c964fc
Adding type registration [B -> org.hibernate.type.BinaryType@39c964fc
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@753c2d04
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@753c2d04
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@753c2d04
Adding type registration row_version -> org.hibernate.type.RowVersionType@265f4e95
Adding type registration image -> org.hibernate.type.ImageType@1d2e6e5
Adding type registration characters -> org.hibernate.type.CharArrayType@ce09f58
Adding type registration char[] -> org.hibernate.type.CharArrayType@ce09f58
Adding type registration [C -> org.hibernate.type.CharArrayType@ce09f58
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@35a0faa8
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@35a0faa8
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@35a0faa8
Adding type registration text -> org.hibernate.type.TextType@1f0acd3
Adding type registration ntext -> org.hibernate.type.NTextType@7f38b27
Adding type registration blob -> org.hibernate.type.BlobType@7ea985ad
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7ea985ad
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1cbe3e7d
Adding type registration clob -> org.hibernate.type.ClobType@57692655
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57692655
Adding type registration nclob -> org.hibernate.type.NClobType@775b4ff5
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@775b4ff5
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1c4e9254
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43b3a8ed
Adding type registration serializable -> org.hibernate.type.SerializableType@120fb614
Adding type registration object -> org.hibernate.type.ObjectType@16d7f312
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@16d7f312
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5dd56620
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5831326a
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6af592de
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40ef6bb
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@721c647c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@236faa37
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@654abfe6
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@160236da
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4afbbdd1] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4afbbdd1) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6ada67f2] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5c5796ac] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@9cbfad4]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4afbbdd1]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4afbbdd1]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@972e7ef] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a8e7243]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:date]
building SimpleValue for date
Building property date
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for date
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2daa7c48, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@39501122, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.7000.6849417106561511351, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=28612, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.7000.6849417106561511351, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@64d35929, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@972e7ef] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5904587e]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6202dc1c]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.date as date2_5_, notice_.day as day3_5_, notice_.title as title4_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (date, day, title, id) values (?, ?, ?, ?)
 Update 0: update notice set date=?, day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, date, day, title) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16dcaf70]
Visiting attribute path : date
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.date as date2_5_0_, notice0_.day as day3_5_0_, notice0_.title as title4_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d199fc4]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dfd717e]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a76fe1e]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@788ad7f]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ecb30]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4694207c]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@128a598d]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12142f5b]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5633e9d9]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@336e02d0]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d610482]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d3d8760]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value integer not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, date varchar(255), day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@183eb95
Registering SessionFactory: f2033bfe-bb41-4b3d-8760-21077f9843cc (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$f31f4b5f] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$f31f4b5f] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@9d48028'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@9d48028'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@63329570
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@91431aa
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@6f52c46b
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@91431aa
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@91431aa}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@91431aa
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@6f52c46b
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@6f52c46b}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public void com.coconet.server.controller.AdminLogController.adminLogInfo(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@6f52c46b
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@91431aa
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@91431aa}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@91431aa
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@91431aa
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@91431aa
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@91431aa
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@91431aa}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@91431aa
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@91431aa
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@91431aa}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@6f52c46b
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'logService'
Creating shared instance of singleton bean 'certificationService'
Creating shared instance of singleton bean 'logTag'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5ff59b3c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e05e92e, org.springframework.security.web.context.SecurityContextPersistenceFilter@606444ae, org.springframework.security.web.header.HeaderWriterFilter@6c7ead6e, org.springframework.security.web.authentication.logout.LogoutFilter@3585dcfa, org.springframework.web.filter.CorsFilter@23df4028, com.coconet.server.jwt.JwtFilter@64e5e0ba, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3912a534, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@32501329, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7249d307, org.springframework.security.web.session.SessionManagementFilter@5f1628a, org.springframework.security.web.access.ExceptionTranslationFilter@6578875b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d9798d4]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/department]}: retrieveDepartment()
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/username]}: retrieveUsername(String,String)

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String,HttpServletRequest,HttpServletResponse)
	{GET [/coconet/logs/admin]}: adminLogInfo(HttpServletRequest,HttpServletResponse)

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/log]}: logAll()

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{POST [/coconet/image]}: createFeed(MultipartFile)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{POST [/coconet/users]}: createUser(Users)
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{GET [/coconet/users]}: retrieveAllUsers()
	{POST [/coconet/login]}: login(LoginDto)
	{POST [/coconet/signup]}: signup(UserDto)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
25 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@9d48028'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(2, '공지사항 test2', '공지사항 내용2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(3, '공지사항 test3', '공지사항 내용3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(4, '공지사항 test4', '공지사항 내용4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(5, '공지사항 test5', '공지사항 내용5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(6, '공지사항 test6', '공지사항 내용6', to_char('2021.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(7, '공지사항 test7', '공지사항 내용7', to_char('2020.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 47 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["http-nio-7000"]
Tomcat started on port(s): 7000 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 7.242 seconds (JVM running for 8.138)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1b74bcad
Detected org.springframework.web.servlet.support.SessionFlashMapManager@79e93dab
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 1 ms
Securing GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
Set SecurityContextHolder to empty SecurityContext
Security Context에 'admin' 인증 정보를 저장했습니다, uri: /coconet/logs/user
Authorized public object filter invocation [GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84]
Secured GET /coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84
GET "/coconet/logs/user?department=%EC%9D%B8%EC%82%AC%ED%8C%80&position=%EC%82%AC%EC%9E%A5&username=%EA%B9%80%EC%9D%80%EB%B9%84", parameters={masked}
Mapped to com.coconet.server.controller.AdminLogController#userLogInfo(String, String, String, HttpServletRequest, HttpServletResponse)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Authorized ReflectiveMethodInvocation: public void com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); target is of class [com.coconet.server.controller.AdminLogController] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'department'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'position'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param2'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : department -> org.hibernate.type.StringType@91431aa
Resolved : generatedAlias0.department -> users0_.department
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : position -> org.hibernate.type.StringType@91431aa
Resolved : generatedAlias0.position -> users0_.position
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : name -> org.hibernate.type.StringType@91431aa
Resolved : generatedAlias0.name -> users0_.name
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( and ( and ( = ( users0_.department users0_.user_id department ) ? ) ( = ( users0_.position users0_.user_id position ) ? ) ) ( = ( users0_.name users0_.user_id name ) ? ) ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-BinaryLogicOperatorNode
          |  |  +-DotNode
          |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  | path: generatedAlias0.department
          |  |  |  +-IdentNode
          |  |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  |  |  | originalText: generatedAlias0
          |  |  |  \-IdentNode
          |  |  |    persister: null
          |  |  |    originalText: department
          |  |  \-ParameterNode
          |  \-BinaryLogicOperatorNode
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     | path: generatedAlias0.position
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |     |  | originalText: generatedAlias0
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: position
          |     \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             | path: generatedAlias0.name
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    originalText: name
             \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'users0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=generatedAlias0.department,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@91431aa}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'users0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=generatedAlias0.position,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |     |  \-[IDENT] IdentNode: 'position' {originalText=position}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@91431aa}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'users0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param2, expectedType=org.hibernate.type.StringType@91431aa}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where ( ( generatedAlias0.department=:param0 ) and ( generatedAlias0.position=:param1 ) ) and ( generatedAlias0.name=:param2 )
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.department=? and users0_.position=? and users0_.name=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1dfa9a34, started on Fri Aug 05 20:32:13 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Add connection elided, waiting 1, queue 10
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=5, active=1, idle=4, waiting=0)
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@a7e182d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5904587e]
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
