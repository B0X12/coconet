Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 33512 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
Running with Spring Boot v2.7.1, Spring v5.3.21
HV000001: Hibernate Validator 6.2.3.Final
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8
Loaded expression factory via original TCCL
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserStatusController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\Status.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\BoardService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Finished Spring Data repository scanning in 230 ms. Found 10 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@201c2a43'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@ac9d5e7]
Creating shared instance of singleton bean 'servletContainer'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 443 (https) 7070 (http)
Initializing ProtocolHandler ["https-jsse-nio-443"]
Initializing ProtocolHandler ["http-nio-7070"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 6040 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1a82b0f7

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'formContentFilter'
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@201c2a43'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1a82b0f7
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.UserStatus
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2adc0b7c
Adding type registration boolean -> org.hibernate.type.BooleanType@2adc0b7c
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2adc0b7c
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78be0cc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@9db4659
Adding type registration yes_no -> org.hibernate.type.YesNoType@41592f38
Adding type registration byte -> org.hibernate.type.ByteType@1b8e4f47
Adding type registration byte -> org.hibernate.type.ByteType@1b8e4f47
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1b8e4f47
Adding type registration character -> org.hibernate.type.CharacterType@74163e6e
Adding type registration char -> org.hibernate.type.CharacterType@74163e6e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74163e6e
Adding type registration short -> org.hibernate.type.ShortType@328efb4c
Adding type registration short -> org.hibernate.type.ShortType@328efb4c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@328efb4c
Adding type registration integer -> org.hibernate.type.IntegerType@42dfe1d4
Adding type registration int -> org.hibernate.type.IntegerType@42dfe1d4
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@42dfe1d4
Adding type registration long -> org.hibernate.type.LongType@66e60cb9
Adding type registration long -> org.hibernate.type.LongType@66e60cb9
Adding type registration java.lang.Long -> org.hibernate.type.LongType@66e60cb9
Adding type registration float -> org.hibernate.type.FloatType@680bcdc2
Adding type registration float -> org.hibernate.type.FloatType@680bcdc2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@680bcdc2
Adding type registration double -> org.hibernate.type.DoubleType@47438746
Adding type registration double -> org.hibernate.type.DoubleType@47438746
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@47438746
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58b3cdda
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58b3cdda
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@136176e9
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@136176e9
Adding type registration string -> org.hibernate.type.StringType@35a97674
Adding type registration java.lang.String -> org.hibernate.type.StringType@35a97674
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@638bb0ad
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@20f4eeb2
Adding type registration url -> org.hibernate.type.UrlType@1cc45d
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cc45d
Adding type registration Duration -> org.hibernate.type.DurationType@6076925d
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6076925d
Adding type registration Instant -> org.hibernate.type.InstantType@403e59c9
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@403e59c9
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@44b2416c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@44b2416c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f159bd7
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f159bd7
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3a3590da
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3a3590da
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c96f69d
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c96f69d
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6b5b5fe2
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6b5b5fe2
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@782b944e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@782b944e
Adding type registration date -> org.hibernate.type.DateType@33e995bd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@33e995bd
Adding type registration time -> org.hibernate.type.TimeType@5b82e515
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5b82e515
Adding type registration timestamp -> org.hibernate.type.TimestampType@150d0cd0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@150d0cd0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@150d0cd0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d189e07
Adding type registration calendar -> org.hibernate.type.CalendarType@62b49422
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62b49422
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62b49422
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63c2ad25
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@61122088
Adding type registration locale -> org.hibernate.type.LocaleType@1f52c29a
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f52c29a
Adding type registration currency -> org.hibernate.type.CurrencyType@139d8de0
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@139d8de0
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b5c6366
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b5c6366
Adding type registration class -> org.hibernate.type.ClassType@12a76904
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12a76904
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@dbcbed3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@dbcbed3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34d957e7
Adding type registration binary -> org.hibernate.type.BinaryType@3403ada5
Adding type registration byte[] -> org.hibernate.type.BinaryType@3403ada5
Adding type registration [B -> org.hibernate.type.BinaryType@3403ada5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@eb94955
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@eb94955
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@eb94955
Adding type registration row_version -> org.hibernate.type.RowVersionType@7b981881
Adding type registration image -> org.hibernate.type.ImageType@e6b7006
Adding type registration characters -> org.hibernate.type.CharArrayType@19f999f3
Adding type registration char[] -> org.hibernate.type.CharArrayType@19f999f3
Adding type registration [C -> org.hibernate.type.CharArrayType@19f999f3
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@42889e70
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@42889e70
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@42889e70
Adding type registration text -> org.hibernate.type.TextType@2b9c4cf6
Adding type registration ntext -> org.hibernate.type.NTextType@284fd69e
Adding type registration blob -> org.hibernate.type.BlobType@46f5dfc0
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46f5dfc0
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7dc627c2
Adding type registration clob -> org.hibernate.type.ClobType@48de76c8
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48de76c8
Adding type registration nclob -> org.hibernate.type.NClobType@40174495
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@40174495
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@222ecc19
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@40c948a
Adding type registration serializable -> org.hibernate.type.SerializableType@34288413
Adding type registration object -> org.hibernate.type.ObjectType@329d0e19
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@329d0e19
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1121be30
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4da562c3
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d14ada6
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@229920fd
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ed5daa0
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@580014c3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2001fbf8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4bf4a9cd
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e6997ca] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e6997ca) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@26209957] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d139bf5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@41d97098]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e6997ca]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e6997ca]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@410db310] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@374cf4ad]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:date]
building SimpleValue for date
Building property date
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.UserStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserStatus
Bind entity com.coconet.server.entity.UserStatus on table user_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property status with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:status]
building SimpleValue for status
Building property status
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for date
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for status
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_status]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3a9f255b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7f3e097e, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.443.8306952829497552959, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=33512, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.443.8306952829497552959, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@24248d25, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@410db310] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ee05815]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dfc1fb5]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.date as date2_5_, notice_.day as day3_5_, notice_.title as title4_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (date, day, title, id) values (?, ?, ?, ?)
 Update 0: update notice set date=?, day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, date, day, title) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ccddeae]
Visiting attribute path : date
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.date as date2_5_0_, notice0_.day as day3_5_0_, notice0_.title as title4_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dda619a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2924e33c]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a79711f]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21eb9e1a]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a563001]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7aafaf]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.UserStatus
 Version select: select user_id from user_status where user_id =?
 Snapshot select: select userstatus_.user_id, userstatus_.status as status2_11_ from user_status userstatus_ where userstatus_.user_id=?
 Insert 0: insert into user_status (status, user_id) values (?, ?)
 Update 0: update user_status set status=? where user_id=?
 Delete 0: delete from user_status where user_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59f09367]
Visiting attribute path : status
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.UserStatus)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.UserStatus, querySpaceUid=<gen:0>, path=com.coconet.server.entity.UserStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.UserStatus)
          - SQL table alias mapping - userstatus0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_11_0_}

Static select for entity com.coconet.server.entity.UserStatus [NONE]: select userstatus0_.user_id as user_id1_11_0_, userstatus0_.status as status2_11_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65357e7c]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67a4d8d2]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2301291d]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@486081fc]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e55a7b1]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c9ad84]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
drop table if exists user_status CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value double not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, date varchar(255), day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
create table user_status (user_id integer not null, status integer not null, primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18bc9971
Registering SessionFactory: 01386845-701a-4bcf-b79c-c7966fc72943 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$4182aef6] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findNumByEmail.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@70ba39f2
parse() - HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'num'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (u) -> users0_
Resolved : u -> users0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@42dfe1d4
Resolved : u.num -> users0_.user_id
Resolved : u -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@35a97674
Resolved : u.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( users0_.user_id users0_.user_id num ) ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | path: u.num
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: num
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: u.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'users0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  |  \-[IDENT] IdentNode: 'num' {originalText=num}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@35a97674}

throwQueryException() : no errors
HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
SQL: select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
throwQueryException() : no errors
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNum
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$4182aef6] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@201c2a43'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@201c2a43'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@35a97674
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@42dfe1d4
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@35a97674
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@35a97674}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@35a97674
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@42dfe1d4
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@42dfe1d4}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Creating shared instance of singleton bean 'logTag'
Creating shared instance of singleton bean 'status'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'logTag'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'status'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardService'
Creating shared instance of singleton bean 'userStatusRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserStatusRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query UserStatus.countByStatus
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.countByStatus
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findStatusByNum.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'status'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'num'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (u) -> userstatus0_
Resolved : u -> userstatus0_.user_id
getDataType() : status -> org.hibernate.type.IntegerType@42dfe1d4
Resolved : u.status -> userstatus0_.status
Resolved : u -> userstatus0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@42dfe1d4
Resolved : u.num -> userstatus0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( userstatus0_.status userstatus0_.user_id status ) ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.user_id userstatus0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  | path: u.status
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: status
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: u.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'userstatus0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=num, expectedType=org.hibernate.type.IntegerType@42dfe1d4}

throwQueryException() : no errors
HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
SQL: select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
throwQueryException() : no errors
Looking up named query UserStatus.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findByNum
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserStatusRepository.
Creating shared instance of singleton bean 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'status'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@42dfe1d4
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@35a97674
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@35a97674}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@35a97674
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@35a97674
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@35a97674
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@35a97674
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@35a97674}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@35a97674
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@35a97674
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@35a97674}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@42dfe1d4
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardService'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'readFileService'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'status'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'userStatusController'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'status'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@50cfc6f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1cf700e4, org.springframework.security.web.context.SecurityContextPersistenceFilter@53b82e42, org.springframework.security.web.header.HeaderWriterFilter@2c59640b, org.springframework.security.web.authentication.logout.LogoutFilter@48c34068, org.springframework.web.filter.CorsFilter@13b5ac13, com.coconet.server.jwt.JwtFilter@7ec32fe1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6019fa79, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d1561a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43adafff, org.springframework.security.web.session.SessionManagementFilter@2fec09c8, org.springframework.security.web.access.ExceptionTranslationFilter@5d391a31, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@413be34]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/department]}: retrieveDepartment()
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/username]}: retrieveUsername(String,String)

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String)
	{GET [/coconet/logs/admin]}: adminLogInfo()

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{GET [/coconet/board/notification]}: getNoticeList()
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/log]}: logAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/approval]}: approvalAll()

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{GET [/coconet/image], produces [image/png]}: getImageWithMediaType(HttpServletRequest)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{POST [/coconet/logout]}: logout(String,LogoutDto)
	{POST [/coconet/users]}: createUser(Users)
	{POST [/coconet/login]}: login(LoginDto)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{GET [/coconet/users]}: retrieveAllUsers()
	{GET [/coconet/users/userid]}: retrieveUserNum(String)
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/signup]}: signup(UserDto,String)

	c.c.s.c.UserStatusController:
	{POST [/coconet/status]}: updateStatus(UserStatus)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
29 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@201c2a43'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(2, '공지사항 test2', '공지사항 내용2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(3, '공지사항 test3', '공지사항 내용3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(4, '공지사항 test4', '공지사항 내용4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(5, '공지사항 test5', '공지사항 내용5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(6, '공지사항 test6', '공지사항 내용6', to_char('2021.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(7, '공지사항 test7', '공지사항 내용7', to_char('2020.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
1 returned as update count for SQL: insert into user_status(user_id, status) values(90000, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90001, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90002, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90003, 15)
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 125 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["https-jsse-nio-443"]
Starting ProtocolHandler ["http-nio-7070"]
Tomcat started on port(s): 443 (https) 7070 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) found beans of type 'org.springframework.boot.web.servlet.server.ServletWebServerFactory' servletContainer (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 18.902 seconds (JVM running for 20.899)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6504f566
Detected org.springframework.web.servlet.support.SessionFlashMapManager@321054fc
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 4 ms
Securing POST /coconet/login
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/login
Set SecurityContextHolder to anonymous SecurityContext
Authorized filter invocation [POST /coconet/login] with attributes [permitAll]
Secured POST /coconet/login
POST "/coconet/login", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#login(LoginDto)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.LoginDto@7afc6a7a]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@35a97674
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@35a97674}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Found thread-bound EntityManager [SessionImpl(1444535816<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.CustomUserDetailsService.loadUserByUsername]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6d91ee82]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@35a97674
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@35a97674}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002], EntityKey[com.coconet.server.entity.Authority#ROLE_USER]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1444535816<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
Not closing pre-bound JPA EntityManager after transaction
Authenticated user
Found thread-bound EntityManager [SessionImpl(1444535816<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3368fdb4]
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity com.coconet.server.entity.Token: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Loading entity: [com.coconet.server.entity.Token#keb@naver.com]
select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Done entity load
Generated identifier: keb@naver.com, using strategy: org.hibernate.id.Assigned
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1444535816<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyNDkzfQ.1EuIRTQmOJgupcoTXDv0EZItr37KzwWyHck5dqWrhek}
insert into token (refresh_token, email) values (?, ?)
Not closing pre-bound JPA EntityManager after transaction
select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
Result set row: 0
Result row: 
{tag:Login, title:로그인 성공, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:34:54}
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.num=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (generatedAlias0) -> userstatus0_
Resolved : generatedAlias0 -> userstatus0_.user_id
Resolved : generatedAlias0 -> userstatus0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@42dfe1d4
Resolved : generatedAlias0.num -> userstatus0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} userstatus0_.user_id ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.user_id userstatus0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity UserStatus): [user_status]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: generatedAlias0.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id as user_id1_11_' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  \-[SQL_TOKEN] SqlFragment: 'userstatus0_.status as status2_11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=generatedAlias0.num,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@42dfe1d4}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.num=:param0
SQL: select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
throwQueryException() : no errors
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 15
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(1444535816<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@135b3831]
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1444535816<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.UserStatus{num=90002, status=10}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyNDkzfQ.1EuIRTQmOJgupcoTXDv0EZItr37KzwWyHck5dqWrhek}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
{tag:Status, title:출근, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:34:54}
select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: 
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.AuthDto@9dc433b]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing GET /coconet/board/log
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/board/log
Authorized public object filter invocation [GET /coconet/board/log]
Secured GET /coconet/board/log
GET "/coconet/board/log", parameters={}
Mapped to com.coconet.server.controller.BoardJpaController#logAll()
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [[com.coconet.server.dto.UserStatusLogdataDto@ab1f905]]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Securing GET /favicon.ico
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /favicon.ico
Set SecurityContextHolder to anonymous SecurityContext
Authorized public object filter invocation [GET /favicon.ico]
Secured GET /favicon.ico
GET "/favicon.ico", parameters={}
Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Resource not found
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 404 NOT_FOUND
Cleared SecurityContextHolder to complete request
Securing GET /error
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /error
Set SecurityContextHolder to anonymous SecurityContext
Secured GET /error
"ERROR" dispatch for GET "/error", parameters={}
Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Using 'application/json;q=0.8', given [image/avif, image/webp, image/apng, image/svg+xml, image/*, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [{timestamp=Wed Aug 10 19:35:22 KST 2022, status=404, error=Not Found, message=No message available,  (truncated)...]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Exiting from "ERROR" dispatch, status 404
Cleared SecurityContextHolder to complete request
Securing POST /coconet/status
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/status
Set SecurityContextHolder to anonymous SecurityContext
Authorized public object filter invocation [POST /coconet/status]
Secured POST /coconet/status
POST "/coconet/status", parameters={}
Mapped to com.coconet.server.controller.UserStatusController#updateStatus(UserStatus)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [UserStatus(num=90002, status=11)]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.num=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.num=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@42dfe1d4
Resolved : generatedAlias0.num -> users0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.user_id users0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=generatedAlias0.num,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@42dfe1d4}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.num=:param0
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.user_id=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 10
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(972685293<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@16fc6472]
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(972685293<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
com.coconet.server.entity.UserStatus{num=90002, status=11}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
Loading collection: [com.coconet.server.entity.Users.authorities#90002]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90002]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
{tag:@@Status, title:외근, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:35:36}
Using 'text/plain', given [*/*] and supported [text/plain, */*, text/plain, */*, application/json, application/*+json, application/json, application/*+json]
Writing ["update user status: [WORK_OUTWORK]"]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing POST /coconet/login
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/login
Set SecurityContextHolder to anonymous SecurityContext
Authorized filter invocation [POST /coconet/login] with attributes [permitAll]
Secured POST /coconet/login
POST "/coconet/login", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#login(LoginDto)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.LoginDto@724d1fce]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Found thread-bound EntityManager [SessionImpl(2063703878<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.CustomUserDetailsService.loadUserByUsername]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@41a7c5e1]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@35a97674
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@35a97674}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002], EntityKey[com.coconet.server.entity.Authority#ROLE_USER]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(2063703878<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
Not closing pre-bound JPA EntityManager after transaction
Authenticated user
Found thread-bound EntityManager [SessionImpl(2063703878<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6b681db3]
Loading entity: [com.coconet.server.entity.Token#keb@naver.com]
select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Token#keb@naver.com]
Resolving attributes for [com.coconet.server.entity.Token#keb@naver.com]
Processing attribute `refreshToken` : value = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyNDkzfQ.1EuIRTQmOJgupcoTXDv0EZItr37KzwWyHck5dqWrhek
Attribute (`refreshToken`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Token#keb@naver.com]
Done entity load
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(2063703878<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyNTM5fQ.Hqi7g4O3_mJjcPqiHO_4Fi7XHbKGtmQgTGy9C7s6d0w}
update token set refresh_token=? where email=?
Not closing pre-bound JPA EntityManager after transaction
select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
Result set row: 0
Result row: 
{tag:Login, title:로그인 성공, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:35:40}
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 11
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(2063703878<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1ecee969]
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(2063703878<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.UserStatus{num=90002, status=111}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyNTM5fQ.Hqi7g4O3_mJjcPqiHO_4Fi7XHbKGtmQgTGy9C7s6d0w}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
{tag:Status, title:출근, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:35:40}
select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: 
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.AuthDto@5aecf948]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Securing GET /coconet/board/chart
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/board/chart
Authorized public object filter invocation [GET /coconet/board/chart]
Secured GET /coconet/board/chart
GET "/coconet/board/chart", parameters={}
Mapped to com.coconet.server.controller.BoardJpaController#chartAll()
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Found thread-bound EntityManager [SessionImpl(373474551<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.count]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
Setting JDBC Connection [HikariProxyConnection@433734163 wrapping conn0: url=jdbc:h2:mem:testdb user=SA] read-only
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1f3216ac]
parse() - HQL: select count(*) from com.coconet.server.entity.Users x
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Users'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (x) -> users0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} users users0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-SqlNode
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}

throwQueryException() : no errors
HQL: select count(*) from com.coconet.server.entity.Users x
SQL: select count(*) as col_0_0_ from users users0_
throwQueryException() : no errors
select count(*) as col_0_0_ from users users0_
Result set row: 0
Result row: 
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(373474551<open>)]
committing
Resetting read-only flag of JDBC Connection [HikariProxyConnection@433734163 wrapping conn0: url=jdbc:h2:mem:testdb user=SA]
Not closing pre-bound JPA EntityManager after transaction
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
parse() - HQL: select count(generatedAlias0) from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.status=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'status'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (generatedAlias0) -> userstatus0_
Resolved : generatedAlias0 -> userstatus0_.user_id
Resolved : generatedAlias0 -> userstatus0_.user_id
getDataType() : status -> org.hibernate.type.IntegerType@42dfe1d4
Resolved : generatedAlias0.status -> userstatus0_.status
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( count userstatus0_.user_id ) ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.status userstatus0_.user_id status ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  |    originalText: generatedAlias0
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: generatedAlias0.status
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: status
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=generatedAlias0.status,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'status' {originalText=status}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@42dfe1d4}

throwQueryException() : no errors
HQL: select count(generatedAlias0) from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.status=:param0
SQL: select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
throwQueryException() : no errors
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
{tag:Status, title:직원 0% 출근 완료, date:2022. 08. 10. 19:36:09}
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [[ChartData(num=1, title=근무중, value=0.0, color=#2CB0D7), ChartData(num=2, title=외근, value=0.0, color= (truncated)...]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7718feb8, started on Wed Aug 10 19:34:05 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Add connection elided, waiting 1, queue 4
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists chart_data CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=3, active=1, idle=2, waiting=0)
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
drop table if exists user_status CASCADE 
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@57c4db8f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1ee05815]
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn20: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
HV000001: Hibernate Validator 6.2.3.Final
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 20960 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserStatusController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\Status.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\BoardService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Finished Spring Data repository scanning in 207 ms. Found 10 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@612e9ad6'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@ebb8b69]
Creating shared instance of singleton bean 'servletContainer'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 443 (https) 7070 (http)
Initializing ProtocolHandler ["https-jsse-nio-443"]
Initializing ProtocolHandler ["http-nio-7070"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 5659 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@374946d7

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'requestContextFilter'
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@612e9ad6'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@374946d7
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.UserStatus
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@225a5cae
Adding type registration boolean -> org.hibernate.type.BooleanType@225a5cae
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@225a5cae
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4da512b3
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b6fddda
Adding type registration yes_no -> org.hibernate.type.YesNoType@644ec782
Adding type registration byte -> org.hibernate.type.ByteType@6e65b58c
Adding type registration byte -> org.hibernate.type.ByteType@6e65b58c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6e65b58c
Adding type registration character -> org.hibernate.type.CharacterType@293bda6e
Adding type registration char -> org.hibernate.type.CharacterType@293bda6e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@293bda6e
Adding type registration short -> org.hibernate.type.ShortType@4b0eb43e
Adding type registration short -> org.hibernate.type.ShortType@4b0eb43e
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4b0eb43e
Adding type registration integer -> org.hibernate.type.IntegerType@615a748e
Adding type registration int -> org.hibernate.type.IntegerType@615a748e
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@615a748e
Adding type registration long -> org.hibernate.type.LongType@6b7f9a48
Adding type registration long -> org.hibernate.type.LongType@6b7f9a48
Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b7f9a48
Adding type registration float -> org.hibernate.type.FloatType@219a93a2
Adding type registration float -> org.hibernate.type.FloatType@219a93a2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@219a93a2
Adding type registration double -> org.hibernate.type.DoubleType@1d575403
Adding type registration double -> org.hibernate.type.DoubleType@1d575403
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1d575403
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@267e91da
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@267e91da
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5fd408c1
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5fd408c1
Adding type registration string -> org.hibernate.type.StringType@551f34f1
Adding type registration java.lang.String -> org.hibernate.type.StringType@551f34f1
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@500a16f8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@441868
Adding type registration url -> org.hibernate.type.UrlType@55331e65
Adding type registration java.net.URL -> org.hibernate.type.UrlType@55331e65
Adding type registration Duration -> org.hibernate.type.DurationType@6b3591dd
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6b3591dd
Adding type registration Instant -> org.hibernate.type.InstantType@3a7e1dc8
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3a7e1dc8
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@240b44e0
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@240b44e0
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@45d0c512
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@45d0c512
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3bef7e8d
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3bef7e8d
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c142bff
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c142bff
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@673b4401
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@673b4401
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35d08948
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@35d08948
Adding type registration date -> org.hibernate.type.DateType@210e93f9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@210e93f9
Adding type registration time -> org.hibernate.type.TimeType@2eff91df
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2eff91df
Adding type registration timestamp -> org.hibernate.type.TimestampType@2d2efe56
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2d2efe56
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2d2efe56
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@546064f5
Adding type registration calendar -> org.hibernate.type.CalendarType@ee76533
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@ee76533
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@ee76533
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ec96eae
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@21186640
Adding type registration locale -> org.hibernate.type.LocaleType@7f8a0ee
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f8a0ee
Adding type registration currency -> org.hibernate.type.CurrencyType@5ea67875
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5ea67875
Adding type registration timezone -> org.hibernate.type.TimeZoneType@8b6688a
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8b6688a
Adding type registration class -> org.hibernate.type.ClassType@66a5e118
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@66a5e118
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@67220171
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@67220171
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2480c51b
Adding type registration binary -> org.hibernate.type.BinaryType@42f8b8d0
Adding type registration byte[] -> org.hibernate.type.BinaryType@42f8b8d0
Adding type registration [B -> org.hibernate.type.BinaryType@42f8b8d0
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65096c6d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65096c6d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65096c6d
Adding type registration row_version -> org.hibernate.type.RowVersionType@2bedb4f9
Adding type registration image -> org.hibernate.type.ImageType@52652667
Adding type registration characters -> org.hibernate.type.CharArrayType@5272b0c9
Adding type registration char[] -> org.hibernate.type.CharArrayType@5272b0c9
Adding type registration [C -> org.hibernate.type.CharArrayType@5272b0c9
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b590555
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b590555
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b590555
Adding type registration text -> org.hibernate.type.TextType@6c65b15a
Adding type registration ntext -> org.hibernate.type.NTextType@7f38bce6
Adding type registration blob -> org.hibernate.type.BlobType@639300e9
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@639300e9
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26ce24de
Adding type registration clob -> org.hibernate.type.ClobType@302f88d0
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@302f88d0
Adding type registration nclob -> org.hibernate.type.NClobType@3701b337
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3701b337
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@11119942
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7cc5b7bd
Adding type registration serializable -> org.hibernate.type.SerializableType@4ed76390
Adding type registration object -> org.hibernate.type.ObjectType@43452ae1
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43452ae1
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a90f200
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7b52070a
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1dddd967
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6b65a026
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@36385fb8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5db96422
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2edc8813
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68fe697e
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@785fb975] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@785fb975) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7aa5168] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@659fc110] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@28e86e7e]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@785fb975]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@785fb975]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e328d21] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4519770c]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:date]
building SimpleValue for date
Building property date
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.UserStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserStatus
Bind entity com.coconet.server.entity.UserStatus on table user_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property status with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:status]
building SimpleValue for status
Building property status
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for date
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for status
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_status]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7e47fa72, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4a75f616, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.443.4482476352545433207, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=20960, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.443.4482476352545433207, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2a0d8687, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e328d21] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1e916826]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@619fa9fc]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.date as date2_5_, notice_.day as day3_5_, notice_.title as title4_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (date, day, title, id) values (?, ?, ?, ?)
 Update 0: update notice set date=?, day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, date, day, title) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b31a968]
Visiting attribute path : date
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.date as date2_5_0_, notice0_.day as day3_5_0_, notice0_.title as title4_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57492b43]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b772cd9]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224bcc50]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c08641e]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c93de29]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1900dae6]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.UserStatus
 Version select: select user_id from user_status where user_id =?
 Snapshot select: select userstatus_.user_id, userstatus_.status as status2_11_ from user_status userstatus_ where userstatus_.user_id=?
 Insert 0: insert into user_status (status, user_id) values (?, ?)
 Update 0: update user_status set status=? where user_id=?
 Delete 0: delete from user_status where user_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77da6b67]
Visiting attribute path : status
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.UserStatus)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.UserStatus, querySpaceUid=<gen:0>, path=com.coconet.server.entity.UserStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.UserStatus)
          - SQL table alias mapping - userstatus0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_11_0_}

Static select for entity com.coconet.server.entity.UserStatus [NONE]: select userstatus0_.user_id as user_id1_11_0_, userstatus0_.status as status2_11_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49019bd9]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe281c]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd6c2a0]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51c9e6db]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60bb2b56]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d8704d3]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
drop table if exists user_status CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value double not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, date varchar(255), day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
create table user_status (user_id integer not null, status integer not null, primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@436f4675
Registering SessionFactory: db1f19cd-1330-40e4-97db-759b99077ac6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$d524ac27] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findNumByEmail.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@35977149
parse() - HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'num'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (u) -> users0_
Resolved : u -> users0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@615a748e
Resolved : u.num -> users0_.user_id
Resolved : u -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@551f34f1
Resolved : u.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( users0_.user_id users0_.user_id num ) ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | path: u.num
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: num
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: u.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'users0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  |  \-[IDENT] IdentNode: 'num' {originalText=num}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@551f34f1}

throwQueryException() : no errors
HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
SQL: select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
throwQueryException() : no errors
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNum
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$d524ac27] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@612e9ad6'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@612e9ad6'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@551f34f1
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@615a748e
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@551f34f1
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@551f34f1}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@551f34f1
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@615a748e
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@615a748e}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Creating shared instance of singleton bean 'logTag'
Creating shared instance of singleton bean 'status'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'logTag'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'status'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardService'
Creating shared instance of singleton bean 'userStatusRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserStatusRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query UserStatus.countByStatus
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.countByStatus
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findStatusByNum.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'status'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'num'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (u) -> userstatus0_
Resolved : u -> userstatus0_.user_id
getDataType() : status -> org.hibernate.type.IntegerType@615a748e
Resolved : u.status -> userstatus0_.status
Resolved : u -> userstatus0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@615a748e
Resolved : u.num -> userstatus0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( userstatus0_.status userstatus0_.user_id status ) ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.user_id userstatus0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  | path: u.status
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: status
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: u.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'userstatus0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=num, expectedType=org.hibernate.type.IntegerType@615a748e}

throwQueryException() : no errors
HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
SQL: select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
throwQueryException() : no errors
Looking up named query UserStatus.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findByNum
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserStatusRepository.
Creating shared instance of singleton bean 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'status'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@615a748e
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@551f34f1
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@551f34f1}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@551f34f1
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@551f34f1
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@551f34f1
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@551f34f1
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@551f34f1}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@551f34f1
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@551f34f1
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@551f34f1}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@615a748e
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardService'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'readFileService'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'status'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'userStatusController'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'status'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6db39cec, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@51a14ff5, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d86a66a, org.springframework.security.web.header.HeaderWriterFilter@69eb4b97, org.springframework.security.web.authentication.logout.LogoutFilter@38d6d105, org.springframework.web.filter.CorsFilter@4f8c8837, com.coconet.server.jwt.JwtFilter@2421542c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@169da2c6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40bffda2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a1080c0, org.springframework.security.web.session.SessionManagementFilter@655c9c90, org.springframework.security.web.access.ExceptionTranslationFilter@73972cb5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78e888df]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/department]}: retrieveDepartment()
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/username]}: retrieveUsername(String,String)

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/admin]}: adminLogInfo()
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String)

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/log]}: logAll()
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{GET [/coconet/board/notification]}: getNoticeList()
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{GET [/coconet/board/todo]}: todoAll(String)

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{GET [/coconet/image], produces [image/png]}: getImageWithMediaType(HttpServletRequest)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{POST [/coconet/logout]}: logout(String,LogoutDto)
	{POST [/coconet/users]}: createUser(Users)
	{GET [/coconet/users]}: retrieveAllUsers()
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{GET [/coconet/users/userid]}: retrieveUserNum(String)
	{POST [/coconet/login]}: login(LoginDto)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{POST [/coconet/signup]}: signup(UserDto,String)

	c.c.s.c.UserStatusController:
	{POST [/coconet/status]}: updateStatus(UserStatus)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
29 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@612e9ad6'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(2, '공지사항 test2', '공지사항 내용2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(3, '공지사항 test3', '공지사항 내용3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(4, '공지사항 test4', '공지사항 내용4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(5, '공지사항 test5', '공지사항 내용5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(6, '공지사항 test6', '공지사항 내용6', to_char('2021.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(7, '공지사항 test7', '공지사항 내용7', to_char('2020.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
1 returned as update count for SQL: insert into user_status(user_id, status) values(90000, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90001, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90002, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90003, 15)
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 89 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["https-jsse-nio-443"]
Starting ProtocolHandler ["http-nio-7070"]
Tomcat started on port(s): 443 (https) 7070 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) found beans of type 'org.springframework.boot.web.servlet.server.ServletWebServerFactory' servletContainer (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 16.981 seconds (JVM running for 18.548)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6b10d592
Detected org.springframework.web.servlet.support.SessionFlashMapManager@7996e92
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 3 ms
Securing POST /coconet/status
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/status
Set SecurityContextHolder to anonymous SecurityContext
Authorized public object filter invocation [POST /coconet/status]
Secured POST /coconet/status
POST "/coconet/status", parameters={}
Mapped to com.coconet.server.controller.UserStatusController#updateStatus(UserStatus)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [UserStatus(num=90002, status=11)]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.num=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.num=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@615a748e
Resolved : generatedAlias0.num -> users0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.user_id users0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=generatedAlias0.num,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@615a748e}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.num=:param0
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.user_id=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.num=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (generatedAlias0) -> userstatus0_
Resolved : generatedAlias0 -> userstatus0_.user_id
Resolved : generatedAlias0 -> userstatus0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@615a748e
Resolved : generatedAlias0.num -> userstatus0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} userstatus0_.user_id ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.user_id userstatus0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity UserStatus): [user_status]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: generatedAlias0.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id as user_id1_11_' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  \-[SQL_TOKEN] SqlFragment: 'userstatus0_.status as status2_11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=generatedAlias0.num,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@615a748e}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.num=:param0
SQL: select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
throwQueryException() : no errors
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 15
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(825787242<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@20293253]
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Configured EntityCopyObserver strategy: disallow
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(825787242<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
com.coconet.server.entity.UserStatus{num=90002, status=11}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
Loading collection: [com.coconet.server.entity.Users.authorities#90002]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90002]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
{tag:@@Status, title:외근, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:40:33}
Using 'text/plain', given [*/*] and supported [text/plain, */*, text/plain, */*, application/json, application/*+json, application/json, application/*+json]
Writing ["update user status: [WORK_OUTWORK]"]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Securing POST /coconet/login
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/login
Set SecurityContextHolder to anonymous SecurityContext
Authorized filter invocation [POST /coconet/login] with attributes [permitAll]
Secured POST /coconet/login
POST "/coconet/login", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#login(LoginDto)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.LoginDto@4d383225]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@551f34f1
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@551f34f1}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Found thread-bound EntityManager [SessionImpl(421616654<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.CustomUserDetailsService.loadUserByUsername]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2804b59e]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@551f34f1
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@551f34f1}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002], EntityKey[com.coconet.server.entity.Authority#ROLE_USER]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(421616654<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
Not closing pre-bound JPA EntityManager after transaction
Authenticated user
Found thread-bound EntityManager [SessionImpl(421616654<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7993c42b]
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Static select for action ACTION_MERGE on entity com.coconet.server.entity.Token: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Loading entity: [com.coconet.server.entity.Token#keb@naver.com]
select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Done entity load
Generated identifier: keb@naver.com, using strategy: org.hibernate.id.Assigned
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(421616654<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyODM2fQ.sW2z4LJCr-oO_428sEFrIG96VALzrVRb-VH3067dUEE}
insert into token (refresh_token, email) values (?, ?)
Not closing pre-bound JPA EntityManager after transaction
select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
Result set row: 0
Result row: 
{tag:Login, title:로그인 성공, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:40:36}
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 11
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(421616654<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@4e62dfcd]
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(421616654<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.UserStatus{num=90002, status=111}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyODM2fQ.sW2z4LJCr-oO_428sEFrIG96VALzrVRb-VH3067dUEE}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
{tag:Status, title:출근, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:40:36}
select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: 
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.AuthDto@3a8a9f35]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing POST /coconet/status
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/status
Set SecurityContextHolder to anonymous SecurityContext
Authorized public object filter invocation [POST /coconet/status]
Secured POST /coconet/status
POST "/coconet/status", parameters={}
Mapped to com.coconet.server.controller.UserStatusController#updateStatus(UserStatus)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [UserStatus(num=90002, status=11)]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.num=:param0
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 111
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(440792093<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@72a63fe8]
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(440792093<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
com.coconet.server.entity.UserStatus{num=90002, status=11}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
Loading collection: [com.coconet.server.entity.Users.authorities#90002]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90002]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
{tag:@@Status, title:외근, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:40:39}
Using 'text/plain', given [*/*] and supported [text/plain, */*, text/plain, */*, application/json, application/*+json, application/json, application/*+json]
Writing ["update user status: [WORK_OUTWORK]"]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing POST /coconet/login
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/login
Set SecurityContextHolder to anonymous SecurityContext
Authorized filter invocation [POST /coconet/login] with attributes [permitAll]
Secured POST /coconet/login
POST "/coconet/login", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#login(LoginDto)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.LoginDto@64d3339b]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Found thread-bound EntityManager [SessionImpl(424747770<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.CustomUserDetailsService.loadUserByUsername]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@37f83ea4]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@551f34f1
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@551f34f1}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002], EntityKey[com.coconet.server.entity.Authority#ROLE_USER]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(424747770<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
Not closing pre-bound JPA EntityManager after transaction
Authenticated user
Found thread-bound EntityManager [SessionImpl(424747770<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@ef6b459]
Loading entity: [com.coconet.server.entity.Token#keb@naver.com]
select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Token#keb@naver.com]
Resolving attributes for [com.coconet.server.entity.Token#keb@naver.com]
Processing attribute `refreshToken` : value = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyODM2fQ.sW2z4LJCr-oO_428sEFrIG96VALzrVRb-VH3067dUEE
Attribute (`refreshToken`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Token#keb@naver.com]
Done entity load
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(424747770<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyODQyfQ.9rsSE7y0uYwB_kziJdjzEM7mne0gL56RmIl-nU0ug08}
update token set refresh_token=? where email=?
Not closing pre-bound JPA EntityManager after transaction
select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
Result set row: 0
Result row: 
{tag:Login, title:로그인 성공, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:40:42}
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 11
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(424747770<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6f0ea36e]
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(424747770<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.UserStatus{num=90002, status=111}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyODQyfQ.9rsSE7y0uYwB_kziJdjzEM7mne0gL56RmIl-nU0ug08}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
{tag:Status, title:출근, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:40:42}
select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: 
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.AuthDto@15ba862e]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing GET /coconet/board/notification
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/board/notification
Authorized public object filter invocation [GET /coconet/board/notification]
Secured GET /coconet/board/notification
GET "/coconet/board/notification", parameters={}
Mapped to com.coconet.server.controller.BoardJpaController#getNoticeList()
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [[com.coconet.server.dto.UserStatusLogdataDto@6fefe982, com.coconet.server.dto.UserStatusLogdataDto@5 (truncated)...]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing GET /coconet/board/chart
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/board/chart
Authorized public object filter invocation [GET /coconet/board/chart]
Secured GET /coconet/board/chart
GET "/coconet/board/chart", parameters={}
Mapped to com.coconet.server.controller.BoardJpaController#chartAll()
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Found thread-bound EntityManager [SessionImpl(81517960<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.count]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
Setting JDBC Connection [HikariProxyConnection@585711362 wrapping conn0: url=jdbc:h2:mem:testdb user=SA] read-only
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5f193f7d]
parse() - HQL: select count(*) from com.coconet.server.entity.Users x
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Users'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (x) -> users0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} users users0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-SqlNode
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}

throwQueryException() : no errors
HQL: select count(*) from com.coconet.server.entity.Users x
SQL: select count(*) as col_0_0_ from users users0_
throwQueryException() : no errors
select count(*) as col_0_0_ from users users0_
Result set row: 0
Result row: 
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(81517960<open>)]
committing
Resetting read-only flag of JDBC Connection [HikariProxyConnection@585711362 wrapping conn0: url=jdbc:h2:mem:testdb user=SA]
Not closing pre-bound JPA EntityManager after transaction
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
parse() - HQL: select count(generatedAlias0) from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.status=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'status'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (generatedAlias0) -> userstatus0_
Resolved : generatedAlias0 -> userstatus0_.user_id
Resolved : generatedAlias0 -> userstatus0_.user_id
getDataType() : status -> org.hibernate.type.IntegerType@615a748e
Resolved : generatedAlias0.status -> userstatus0_.status
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( count userstatus0_.user_id ) ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.status userstatus0_.user_id status ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  |    originalText: generatedAlias0
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: generatedAlias0.status
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: status
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=generatedAlias0.status,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'status' {originalText=status}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@615a748e}

throwQueryException() : no errors
HQL: select count(generatedAlias0) from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.status=:param0
SQL: select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
throwQueryException() : no errors
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
{tag:Status, title:직원 0% 출근 완료, date:2022. 08. 10. 19:41:04}
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [[ChartData(num=1, title=근무중, value=0.0, color=#2CB0D7), ChartData(num=2, title=외근, value=0.0, color= (truncated)...]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Securing GET /coconet/board/chart
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/board/chart
Authorized public object filter invocation [GET /coconet/board/chart]
Secured GET /coconet/board/chart
GET "/coconet/board/chart", parameters={}
Mapped to com.coconet.server.controller.BoardJpaController#chartAll()
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Found thread-bound EntityManager [SessionImpl(663123592<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.count]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
Setting JDBC Connection [HikariProxyConnection@1449527632 wrapping conn0: url=jdbc:h2:mem:testdb user=SA] read-only
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5ea0094e]
select count(*) as col_0_0_ from users users0_
Result set row: 0
Result row: 
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(663123592<open>)]
committing
Resetting read-only flag of JDBC Connection [HikariProxyConnection@1449527632 wrapping conn0: url=jdbc:h2:mem:testdb user=SA]
Not closing pre-bound JPA EntityManager after transaction
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
{tag:Status, title:직원 0% 출근 완료, date:2022. 08. 10. 19:41:15}
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [[ChartData(num=1, title=근무중, value=0.0, color=#2CB0D7), ChartData(num=2, title=외근, value=0.0, color= (truncated)...]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d822d, started on Wed Aug 10 19:39:59 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
drop table if exists position CASCADE 
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
drop table if exists user_status CASCADE 
HikariPool-1 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=1, idle=9, waiting=0)
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4ebb2ed] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1e916826]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn20: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 28276 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
Running with Spring Boot v2.7.1, Spring v5.3.21
HV000001: Hibernate Validator 6.2.3.Final
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserStatusController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\Status.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\BoardService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Finished Spring Data repository scanning in 198 ms. Found 10 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5335da3e'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@4b45e2d1]
Creating shared instance of singleton bean 'servletContainer'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 443 (https) 7070 (http)
Initializing ProtocolHandler ["https-jsse-nio-443"]
Initializing ProtocolHandler ["http-nio-7070"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 5184 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1a82b0f7

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5335da3e'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1a82b0f7
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.UserStatus
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@2f994090
Adding type registration boolean -> org.hibernate.type.BooleanType@2f994090
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f994090
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71d70786
Adding type registration true_false -> org.hibernate.type.TrueFalseType@74ab8c6f
Adding type registration yes_no -> org.hibernate.type.YesNoType@79bcf059
Adding type registration byte -> org.hibernate.type.ByteType@2180044d
Adding type registration byte -> org.hibernate.type.ByteType@2180044d
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2180044d
Adding type registration character -> org.hibernate.type.CharacterType@7f26e48
Adding type registration char -> org.hibernate.type.CharacterType@7f26e48
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7f26e48
Adding type registration short -> org.hibernate.type.ShortType@4c499cd6
Adding type registration short -> org.hibernate.type.ShortType@4c499cd6
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c499cd6
Adding type registration integer -> org.hibernate.type.IntegerType@55ca273c
Adding type registration int -> org.hibernate.type.IntegerType@55ca273c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55ca273c
Adding type registration long -> org.hibernate.type.LongType@689cecde
Adding type registration long -> org.hibernate.type.LongType@689cecde
Adding type registration java.lang.Long -> org.hibernate.type.LongType@689cecde
Adding type registration float -> org.hibernate.type.FloatType@54a52ac8
Adding type registration float -> org.hibernate.type.FloatType@54a52ac8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@54a52ac8
Adding type registration double -> org.hibernate.type.DoubleType@5dfc857
Adding type registration double -> org.hibernate.type.DoubleType@5dfc857
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5dfc857
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7e78ec66
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7e78ec66
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@264af4c1
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@264af4c1
Adding type registration string -> org.hibernate.type.StringType@3e591f10
Adding type registration java.lang.String -> org.hibernate.type.StringType@3e591f10
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ffe9cef
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2ea5b57a
Adding type registration url -> org.hibernate.type.UrlType@710810ac
Adding type registration java.net.URL -> org.hibernate.type.UrlType@710810ac
Adding type registration Duration -> org.hibernate.type.DurationType@769cf624
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@769cf624
Adding type registration Instant -> org.hibernate.type.InstantType@3627a9ae
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3627a9ae
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@18ce601d
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@18ce601d
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4b0dcec6
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4b0dcec6
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7b3792a4
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7b3792a4
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d559df0
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d559df0
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2cf45642
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2cf45642
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2494acc9
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2494acc9
Adding type registration date -> org.hibernate.type.DateType@5a7b6f80
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5a7b6f80
Adding type registration time -> org.hibernate.type.TimeType@29380db3
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29380db3
Adding type registration timestamp -> org.hibernate.type.TimestampType@58ddd55a
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@58ddd55a
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@58ddd55a
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7a4e06c7
Adding type registration calendar -> org.hibernate.type.CalendarType@19334d3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19334d3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19334d3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@43ee54ac
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@54569677
Adding type registration locale -> org.hibernate.type.LocaleType@5a65c128
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5a65c128
Adding type registration currency -> org.hibernate.type.CurrencyType@79c66b5f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@79c66b5f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@607d7266
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@607d7266
Adding type registration class -> org.hibernate.type.ClassType@565dacea
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@565dacea
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@53510705
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@53510705
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@224dd05
Adding type registration binary -> org.hibernate.type.BinaryType@7ce28837
Adding type registration byte[] -> org.hibernate.type.BinaryType@7ce28837
Adding type registration [B -> org.hibernate.type.BinaryType@7ce28837
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@74892ec9
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@74892ec9
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@74892ec9
Adding type registration row_version -> org.hibernate.type.RowVersionType@69800ebf
Adding type registration image -> org.hibernate.type.ImageType@615e2464
Adding type registration characters -> org.hibernate.type.CharArrayType@6fbae06e
Adding type registration char[] -> org.hibernate.type.CharArrayType@6fbae06e
Adding type registration [C -> org.hibernate.type.CharArrayType@6fbae06e
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8729657
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8729657
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8729657
Adding type registration text -> org.hibernate.type.TextType@42bdcb1b
Adding type registration ntext -> org.hibernate.type.NTextType@1656e4f2
Adding type registration blob -> org.hibernate.type.BlobType@7de0cf9a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7de0cf9a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4749dfaa
Adding type registration clob -> org.hibernate.type.ClobType@2c165a66
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2c165a66
Adding type registration nclob -> org.hibernate.type.NClobType@11d1cea2
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@11d1cea2
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@182a54f7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@740f7461
Adding type registration serializable -> org.hibernate.type.SerializableType@6d6290e2
Adding type registration object -> org.hibernate.type.ObjectType@6fe26245
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6fe26245
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21b8181d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6614aa5e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@66538cb2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1e527045
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fcbeb62
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c4ef89f
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4602c5b8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4bdf5565
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@46cb7ad9] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@46cb7ad9) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@30532da2] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@153d0221] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6e307042]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@46cb7ad9]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@46cb7ad9]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7ebbbdfa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@581b3ddf]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:date]
building SimpleValue for date
Building property date
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.UserStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserStatus
Bind entity com.coconet.server.entity.UserStatus on table user_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property status with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:status]
building SimpleValue for status
Building property status
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for date
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for status
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_status]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2d1c255b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@d78f107, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.443.18254305448388110106, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=28276, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.443.18254305448388110106, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@736a976d, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7ebbbdfa] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5a2f70a]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a002fdf]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.date as date2_5_, notice_.day as day3_5_, notice_.title as title4_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (date, day, title, id) values (?, ?, ?, ?)
 Update 0: update notice set date=?, day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, date, day, title) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4662cd1b]
Visiting attribute path : date
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.date as date2_5_0_, notice0_.day as day3_5_0_, notice0_.title as title4_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7942bced]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e33cd17]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5874bf99]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15cca24f]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45a41ea4]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@481d8a4d]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.UserStatus
 Version select: select user_id from user_status where user_id =?
 Snapshot select: select userstatus_.user_id, userstatus_.status as status2_11_ from user_status userstatus_ where userstatus_.user_id=?
 Insert 0: insert into user_status (status, user_id) values (?, ?)
 Update 0: update user_status set status=? where user_id=?
 Delete 0: delete from user_status where user_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1deff5ba]
Visiting attribute path : status
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.UserStatus)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.UserStatus, querySpaceUid=<gen:0>, path=com.coconet.server.entity.UserStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.UserStatus)
          - SQL table alias mapping - userstatus0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_11_0_}

Static select for entity com.coconet.server.entity.UserStatus [NONE]: select userstatus0_.user_id as user_id1_11_0_, userstatus0_.status as status2_11_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25bd6245]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5edcae67]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27a2ba94]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@466361ae]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@19b18c2e]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fe4cfab]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
drop table if exists user_status CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value double not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, date varchar(255), day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
create table user_status (user_id integer not null, status integer not null, primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6b713a0c
Registering SessionFactory: 2838edbf-64cf-41fd-a052-a088a2c74440 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$ec9aa45e] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findNumByEmail.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@51467765
parse() - HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'num'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (u) -> users0_
Resolved : u -> users0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@55ca273c
Resolved : u.num -> users0_.user_id
Resolved : u -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@3e591f10
Resolved : u.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( users0_.user_id users0_.user_id num ) ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | path: u.num
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: num
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: u.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'users0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  |  \-[IDENT] IdentNode: 'num' {originalText=num}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@3e591f10}

throwQueryException() : no errors
HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
SQL: select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
throwQueryException() : no errors
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNum
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$ec9aa45e] because it is not cache-safe
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5335da3e'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5335da3e'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@3e591f10
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@55ca273c
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@3e591f10
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@3e591f10}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@3e591f10
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@55ca273c
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@55ca273c}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Creating shared instance of singleton bean 'logTag'
Creating shared instance of singleton bean 'status'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'logTag'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'status'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardService'
Creating shared instance of singleton bean 'userStatusRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserStatusRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query UserStatus.countByStatus
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.countByStatus
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findStatusByNum.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'status'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'num'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (u) -> userstatus0_
Resolved : u -> userstatus0_.user_id
getDataType() : status -> org.hibernate.type.IntegerType@55ca273c
Resolved : u.status -> userstatus0_.status
Resolved : u -> userstatus0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@55ca273c
Resolved : u.num -> userstatus0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( userstatus0_.status userstatus0_.user_id status ) ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.user_id userstatus0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  | path: u.status
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: status
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: u.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'userstatus0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=num, expectedType=org.hibernate.type.IntegerType@55ca273c}

throwQueryException() : no errors
HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
SQL: select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
throwQueryException() : no errors
Looking up named query UserStatus.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findByNum
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserStatusRepository.
Creating shared instance of singleton bean 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'status'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@55ca273c
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@3e591f10
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@3e591f10}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@3e591f10
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@3e591f10
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@3e591f10
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@3e591f10
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@3e591f10}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@3e591f10
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@3e591f10
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@3e591f10}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@55ca273c
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardService'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'readFileService'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'status'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'userStatusController'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'status'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@747ba8e0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c08ec11, org.springframework.security.web.context.SecurityContextPersistenceFilter@f5d047a, org.springframework.security.web.header.HeaderWriterFilter@2912bb1d, org.springframework.security.web.authentication.logout.LogoutFilter@6e7be077, org.springframework.web.filter.CorsFilter@240d4403, com.coconet.server.jwt.JwtFilter@13fdf2bc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c639b32, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d7589c7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58ee881b, org.springframework.security.web.session.SessionManagementFilter@3d3a41a8, org.springframework.security.web.access.ExceptionTranslationFilter@5050abd7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f94e9ef]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/department]}: retrieveDepartment()
	{GET [/coconet/user/username]}: retrieveUsername(String,String)

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/admin]}: adminLogInfo()
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String)

	c.c.s.c.BoardJpaController:
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/notification]}: getNoticeList()
	{GET [/coconet/board/log]}: logAll()
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/todo]}: todoAll(String)

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{GET [/coconet/image], produces [image/png]}: getImageWithMediaType(HttpServletRequest)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{POST [/coconet/logout]}: logout(String,LogoutDto)
	{GET [/coconet/users/userid]}: retrieveUserNum(String)
	{GET [/coconet/users]}: retrieveAllUsers()
	{POST [/coconet/login]}: login(LoginDto)
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/users]}: createUser(Users)
	{POST [/coconet/signup]}: signup(UserDto,String)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)

	c.c.s.c.UserStatusController:
	{POST [/coconet/status]}: updateStatus(UserStatus)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
29 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@5335da3e'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(2, '공지사항 test2', '공지사항 내용2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(3, '공지사항 test3', '공지사항 내용3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(4, '공지사항 test4', '공지사항 내용4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(5, '공지사항 test5', '공지사항 내용5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(6, '공지사항 test6', '공지사항 내용6', to_char('2021.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(7, '공지사항 test7', '공지사항 내용7', to_char('2020.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
1 returned as update count for SQL: insert into user_status(user_id, status) values(90000, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90001, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90002, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90003, 15)
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 89 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["https-jsse-nio-443"]
Starting ProtocolHandler ["http-nio-7070"]
Tomcat started on port(s): 443 (https) 7070 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) found beans of type 'org.springframework.boot.web.servlet.server.ServletWebServerFactory' servletContainer (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 15.79 seconds (JVM running for 17.37)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@73c2b614
Detected org.springframework.web.servlet.support.SessionFlashMapManager@1c33488c
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 6 ms
Securing POST /coconet/status
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/status
Set SecurityContextHolder to anonymous SecurityContext
Authorized public object filter invocation [POST /coconet/status]
Secured POST /coconet/status
POST "/coconet/status", parameters={}
Mapped to com.coconet.server.controller.UserStatusController#updateStatus(UserStatus)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [UserStatus(num=90002, status=11)]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.num=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.num=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@55ca273c
Resolved : generatedAlias0.num -> users0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.user_id users0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=generatedAlias0.num,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@55ca273c}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.num=:param0
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.user_id=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.num=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (generatedAlias0) -> userstatus0_
Resolved : generatedAlias0 -> userstatus0_.user_id
Resolved : generatedAlias0 -> userstatus0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@55ca273c
Resolved : generatedAlias0.num -> userstatus0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} userstatus0_.user_id ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.user_id userstatus0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity UserStatus): [user_status]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: generatedAlias0.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id as user_id1_11_' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  \-[SQL_TOKEN] SqlFragment: 'userstatus0_.status as status2_11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=generatedAlias0.num,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@55ca273c}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.num=:param0
SQL: select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
throwQueryException() : no errors
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 15
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(797188446<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@c4cd192]
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Configured EntityCopyObserver strategy: disallow
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(797188446<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
com.coconet.server.entity.UserStatus{num=90002, status=11}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
Loading collection: [com.coconet.server.entity.Users.authorities#90002]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90002]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
{tag:@@Status, title:외근, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:41:52}
Using 'text/plain', given [*/*] and supported [text/plain, */*, text/plain, */*, application/json, application/*+json, application/json, application/*+json]
Writing ["update user status: [WORK_OUTWORK]"]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing POST /coconet/login
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/login
Set SecurityContextHolder to anonymous SecurityContext
Authorized filter invocation [POST /coconet/login] with attributes [permitAll]
Secured POST /coconet/login
POST "/coconet/login", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#login(LoginDto)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.LoginDto@54e990cf]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@3e591f10
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3e591f10}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Found thread-bound EntityManager [SessionImpl(428425505<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.CustomUserDetailsService.loadUserByUsername]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@361cba44]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@3e591f10
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3e591f10}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002], EntityKey[com.coconet.server.entity.Authority#ROLE_USER]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(428425505<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
Not closing pre-bound JPA EntityManager after transaction
Authenticated user
Found thread-bound EntityManager [SessionImpl(428425505<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5f3798ce]
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Static select for action ACTION_MERGE on entity com.coconet.server.entity.Token: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Loading entity: [com.coconet.server.entity.Token#keb@naver.com]
select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Done entity load
Generated identifier: keb@naver.com, using strategy: org.hibernate.id.Assigned
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(428425505<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyOTE0fQ.5of7hBN1_MQaxdY4BEJALN7ezRdw44I6Gx7VAXRTn68}
insert into token (refresh_token, email) values (?, ?)
Not closing pre-bound JPA EntityManager after transaction
select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
Result set row: 0
Result row: 
{tag:Login, title:로그인 성공, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:41:54}
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 11
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(428425505<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@63e29899]
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(428425505<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.UserStatus{num=90002, status=111}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyOTE0fQ.5of7hBN1_MQaxdY4BEJALN7ezRdw44I6Gx7VAXRTn68}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
{tag:Status, title:출근, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:41:54}
select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: 
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.AuthDto@6c5e37e5]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing GET /coconet/board/chart
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/board/chart
Authorized public object filter invocation [GET /coconet/board/chart]
Secured GET /coconet/board/chart
GET "/coconet/board/chart", parameters={}
Mapped to com.coconet.server.controller.BoardJpaController#chartAll()
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Found thread-bound EntityManager [SessionImpl(336936755<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.count]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
Setting JDBC Connection [HikariProxyConnection@41505516 wrapping conn0: url=jdbc:h2:mem:testdb user=SA] read-only
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5e5a7dde]
parse() - HQL: select count(*) from com.coconet.server.entity.Users x
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Users'
       |     \-[ALIAS] Node: 'x'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[ROW_STAR] Node: '*'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (x) -> users0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( count * ) ) ( FromClause{level=1} users users0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-SqlNode
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[x], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=x,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}

throwQueryException() : no errors
HQL: select count(*) from com.coconet.server.entity.Users x
SQL: select count(*) as col_0_0_ from users users0_
throwQueryException() : no errors
select count(*) as col_0_0_ from users users0_
Result set row: 0
Result row: 
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(336936755<open>)]
committing
Resetting read-only flag of JDBC Connection [HikariProxyConnection@41505516 wrapping conn0: url=jdbc:h2:mem:testdb user=SA]
Not closing pre-bound JPA EntityManager after transaction
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
parse() - HQL: select count(generatedAlias0) from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.status=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'status'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (generatedAlias0) -> userstatus0_
Resolved : generatedAlias0 -> userstatus0_.user_id
Resolved : generatedAlias0 -> userstatus0_.user_id
getDataType() : status -> org.hibernate.type.IntegerType@55ca273c
Resolved : generatedAlias0.status -> userstatus0_.status
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( count userstatus0_.user_id ) ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.status userstatus0_.user_id status ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  |    originalText: generatedAlias0
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: generatedAlias0.status
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: status
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=generatedAlias0.status,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'status' {originalText=status}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.IntegerType@55ca273c}

throwQueryException() : no errors
HQL: select count(generatedAlias0) from com.coconet.server.entity.UserStatus as generatedAlias0 where generatedAlias0.status=:param0
SQL: select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
throwQueryException() : no errors
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
{tag:Status, title:직원 0% 출근 완료, date:2022. 08. 10. 19:41:57}
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [[ChartData(num=1, title=근무중, value=0.0, color=#2CB0D7), ChartData(num=2, title=외근, value=25.0, color (truncated)...]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing POST /coconet/status
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/status
Set SecurityContextHolder to anonymous SecurityContext
Authorized public object filter invocation [POST /coconet/status]
Secured POST /coconet/status
POST "/coconet/status", parameters={}
Mapped to com.coconet.server.controller.UserStatusController#updateStatus(UserStatus)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [UserStatus(num=90002, status=13)]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.num=:param0
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 111
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(901138784<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3682a28e]
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(901138784<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
com.coconet.server.entity.UserStatus{num=90002, status=13}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
Loading collection: [com.coconet.server.entity.Users.authorities#90002]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90002]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
{tag:@@Status, title:출장, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:42:06}
Using 'text/plain', given [*/*] and supported [text/plain, */*, text/plain, */*, application/json, application/*+json, application/json, application/*+json]
Writing ["update user status: [WORK_SITETRIP]"]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing POST /coconet/login
Set SecurityContextHolder to empty SecurityContext
유효한 JWT 토큰이 없습니다, uri: /coconet/login
Set SecurityContextHolder to anonymous SecurityContext
Authorized filter invocation [POST /coconet/login] with attributes [permitAll]
Secured POST /coconet/login
POST "/coconet/login", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#login(LoginDto)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.LoginDto@288ea585]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002]
Resolving attributes for [com.coconet.server.entity.Users#90002]
Processing attribute `andnum` : value = andNum2
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 011208
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = 인사팀
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = keb@naver.com
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = 김은비
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01026207411
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = 사장
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90002]
Found thread-bound EntityManager [SessionImpl(1457107186<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.CustomUserDetailsService.loadUserByUsername]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@42ccddba]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@3e591f10
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3e591f10}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=<uninitialized>, email=keb@naver.com}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90002], EntityKey[com.coconet.server.entity.Authority#ROLE_USER]
Found row of collection: [com.coconet.server.entity.Users.authorities#90002]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_USER]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_USER]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90002]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1457107186<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
Not closing pre-bound JPA EntityManager after transaction
Authenticated user
Found thread-bound EntityManager [SessionImpl(1457107186<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@601f7100]
Loading entity: [com.coconet.server.entity.Token#keb@naver.com]
select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Token#keb@naver.com]
Resolving attributes for [com.coconet.server.entity.Token#keb@naver.com]
Processing attribute `refreshToken` : value = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyOTE0fQ.5of7hBN1_MQaxdY4BEJALN7ezRdw44I6Gx7VAXRTn68
Attribute (`refreshToken`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Token#keb@naver.com]
Done entity load
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1457107186<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 3 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyOTI5fQ.N2DCb2HS1ZC8Ia6hxDdZLJJJ5SApFfj29kFvhuHc2kM}
update token set refresh_token=? where email=?
Not closing pre-bound JPA EntityManager after transaction
select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
Result set row: 0
Result row: 
{tag:Login, title:로그인 성공, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:42:09}
Rendered criteria query -> select generatedAlias0 from UserStatus as generatedAlias0 where generatedAlias0.num=:param0
select userstatus0_.user_id as user_id1_11_, userstatus0_.status as status2_11_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.UserStatus#90002]
Resolving attributes for [com.coconet.server.entity.UserStatus#90002]
Processing attribute `status` : value = 13
Attribute (`status`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.UserStatus#90002]
Found thread-bound EntityManager [SessionImpl(1457107186<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3ffe1e5b]
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1457107186<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90002], was: [com.coconet.server.entity.Users.authorities#90002] (initialized)
Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=011208, phone=01026207411, num=90002, name=김은비, position=사장, andnum=andNum2, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=keb@naver.com}
com.coconet.server.entity.Authority{authorityName=ROLE_USER}
com.coconet.server.entity.UserStatus{num=90002, status=131}
com.coconet.server.entity.Token{email=keb@naver.com, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZWJAbmF2ZXIuY29tIiwiZXhwIjoxNjYwNzMyOTI5fQ.N2DCb2HS1ZC8Ia6hxDdZLJJJ5SApFfj29kFvhuHc2kM}
update user_status set status=? where user_id=?
Not closing pre-bound JPA EntityManager after transaction
{tag:Status, title:출근, name:김은비, email:keb@naver.com, department:인사팀, date:2022. 08. 10. 19:42:09}
select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Result set row: 0
Result row: 
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.AuthDto@65488b5f]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
Securing GET /coconet/board/chart
Set SecurityContextHolder to empty SecurityContext
Security Context에 '정재훈' 인증 정보를 저장했습니다, uri: /coconet/board/chart
Authorized public object filter invocation [GET /coconet/board/chart]
Secured GET /coconet/board/chart
GET "/coconet/board/chart", parameters={}
Mapped to com.coconet.server.controller.BoardJpaController#chartAll()
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Found thread-bound EntityManager [SessionImpl(504480255<open>)] for JPA transaction
Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.count]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
Setting JDBC Connection [HikariProxyConnection@847958817 wrapping conn0: url=jdbc:h2:mem:testdb user=SA] read-only
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3273a6a]
select count(*) as col_0_0_ from users users0_
Result set row: 0
Result row: 
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(504480255<open>)]
committing
Resetting read-only flag of JDBC Connection [HikariProxyConnection@847958817 wrapping conn0: url=jdbc:h2:mem:testdb user=SA]
Not closing pre-bound JPA EntityManager after transaction
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
Rendered criteria query -> select count(generatedAlias0) from UserStatus as generatedAlias0 where generatedAlias0.status=:param0
select count(userstatus0_.user_id) as col_0_0_ from user_status userstatus0_ where userstatus0_.status=?
Result set row: 0
Result row: 
{tag:Status, title:직원 0% 출근 완료, date:2022. 08. 10. 19:42:12}
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [[ChartData(num=1, title=근무중, value=0.0, color=#2CB0D7), ChartData(num=2, title=외근, value=0.0, color= (truncated)...]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fa9cf9f, started on Wed Aug 10 19:41:37 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Add connection elided, waiting 1, queue 3
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
HikariPool-1 - After adding stats (total=4, active=1, idle=3, waiting=0)
drop table if exists user_status CASCADE 
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4db3ff33] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5a2f70a]
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
HV000001: Hibernate Validator 6.2.3.Final
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 33040 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserStatusController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\Status.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\BoardService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Finished Spring Data repository scanning in 233 ms. Found 10 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@1f99b275'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@45911c9e]
Creating shared instance of singleton bean 'servletContainer'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 443 (https) 7070 (http)
Initializing ProtocolHandler ["https-jsse-nio-443"]
Initializing ProtocolHandler ["http-nio-7070"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 5400 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4ea66a22

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'requestContextFilter'
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@1f99b275'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4ea66a22
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.UserStatus
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@6a2c95eb
Adding type registration boolean -> org.hibernate.type.BooleanType@6a2c95eb
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a2c95eb
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4772678e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@176ac16b
Adding type registration yes_no -> org.hibernate.type.YesNoType@1d656bb4
Adding type registration byte -> org.hibernate.type.ByteType@4253cc7c
Adding type registration byte -> org.hibernate.type.ByteType@4253cc7c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4253cc7c
Adding type registration character -> org.hibernate.type.CharacterType@797333ba
Adding type registration char -> org.hibernate.type.CharacterType@797333ba
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@797333ba
Adding type registration short -> org.hibernate.type.ShortType@6de67777
Adding type registration short -> org.hibernate.type.ShortType@6de67777
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6de67777
Adding type registration integer -> org.hibernate.type.IntegerType@44ddc267
Adding type registration int -> org.hibernate.type.IntegerType@44ddc267
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44ddc267
Adding type registration long -> org.hibernate.type.LongType@26c545a7
Adding type registration long -> org.hibernate.type.LongType@26c545a7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@26c545a7
Adding type registration float -> org.hibernate.type.FloatType@4109518a
Adding type registration float -> org.hibernate.type.FloatType@4109518a
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4109518a
Adding type registration double -> org.hibernate.type.DoubleType@458e149f
Adding type registration double -> org.hibernate.type.DoubleType@458e149f
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@458e149f
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@521e703d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@521e703d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@720f6988
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@720f6988
Adding type registration string -> org.hibernate.type.StringType@64c2d687
Adding type registration java.lang.String -> org.hibernate.type.StringType@64c2d687
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@258fb442
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4cc8c25e
Adding type registration url -> org.hibernate.type.UrlType@61816bbf
Adding type registration java.net.URL -> org.hibernate.type.UrlType@61816bbf
Adding type registration Duration -> org.hibernate.type.DurationType@5917700b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5917700b
Adding type registration Instant -> org.hibernate.type.InstantType@4a647082
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4a647082
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@46d454a1
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@46d454a1
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@75391890
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@75391890
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3be7b4b0
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3be7b4b0
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@17ae5e6f
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@17ae5e6f
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@415c33a3
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@415c33a3
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fd68788
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fd68788
Adding type registration date -> org.hibernate.type.DateType@46c35193
Adding type registration java.sql.Date -> org.hibernate.type.DateType@46c35193
Adding type registration time -> org.hibernate.type.TimeType@455ea3d5
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@455ea3d5
Adding type registration timestamp -> org.hibernate.type.TimestampType@38093109
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@38093109
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@38093109
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f1e6051
Adding type registration calendar -> org.hibernate.type.CalendarType@483e6cc2
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@483e6cc2
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@483e6cc2
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@107ad40d
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6514fd7a
Adding type registration locale -> org.hibernate.type.LocaleType@5ee1bcb4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5ee1bcb4
Adding type registration currency -> org.hibernate.type.CurrencyType@2f02970c
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f02970c
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e4b067c
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e4b067c
Adding type registration class -> org.hibernate.type.ClassType@53b46d2e
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@53b46d2e
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66ed822e
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66ed822e
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1551696e
Adding type registration binary -> org.hibernate.type.BinaryType@4f7ff63a
Adding type registration byte[] -> org.hibernate.type.BinaryType@4f7ff63a
Adding type registration [B -> org.hibernate.type.BinaryType@4f7ff63a
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5d8f23d1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5d8f23d1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5d8f23d1
Adding type registration row_version -> org.hibernate.type.RowVersionType@25e20e3a
Adding type registration image -> org.hibernate.type.ImageType@263bf89b
Adding type registration characters -> org.hibernate.type.CharArrayType@2054d023
Adding type registration char[] -> org.hibernate.type.CharArrayType@2054d023
Adding type registration [C -> org.hibernate.type.CharArrayType@2054d023
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7708225f
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7708225f
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7708225f
Adding type registration text -> org.hibernate.type.TextType@771a878d
Adding type registration ntext -> org.hibernate.type.NTextType@7298ac9d
Adding type registration blob -> org.hibernate.type.BlobType@4b7c770e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b7c770e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@786d4c03
Adding type registration clob -> org.hibernate.type.ClobType@6664b0a7
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6664b0a7
Adding type registration nclob -> org.hibernate.type.NClobType@4f569efc
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f569efc
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4109dfb6
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a09c162
Adding type registration serializable -> org.hibernate.type.SerializableType@45ac927f
Adding type registration object -> org.hibernate.type.ObjectType@2bb5ddc7
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bb5ddc7
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5d125622
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f199946
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@77c330bb
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48284161
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@744ad00
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3424c707
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a8c6fd0
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@50a51ea9
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3fe408f9] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3fe408f9) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47ed4b4a] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2184f06b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7167d584]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3fe408f9]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3fe408f9]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b1b1b73] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37c08603]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:date]
building SimpleValue for date
Building property date
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.UserStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserStatus
Bind entity com.coconet.server.entity.UserStatus on table user_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property status with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:status]
building SimpleValue for status
Building property status
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for date
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for status
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_status]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@64d4bc35, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5b1bed96, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.443.6562006214126095066, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=33040, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.443.6562006214126095066, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6818d486, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b1b1b73] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@105a4b3f]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a6e7fa]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.date as date2_5_, notice_.day as day3_5_, notice_.title as title4_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (date, day, title, id) values (?, ?, ?, ?)
 Update 0: update notice set date=?, day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, date, day, title) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55c7b6ee]
Visiting attribute path : date
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.date as date2_5_0_, notice0_.day as day3_5_0_, notice0_.title as title4_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@540abcd0]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0e132]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e41cd8]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7db57600]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2908227f]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b232752]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.UserStatus
 Version select: select user_id from user_status where user_id =?
 Snapshot select: select userstatus_.user_id, userstatus_.status as status2_11_ from user_status userstatus_ where userstatus_.user_id=?
 Insert 0: insert into user_status (status, user_id) values (?, ?)
 Update 0: update user_status set status=? where user_id=?
 Delete 0: delete from user_status where user_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c1ed18]
Visiting attribute path : status
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.UserStatus)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.UserStatus, querySpaceUid=<gen:0>, path=com.coconet.server.entity.UserStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.UserStatus)
          - SQL table alias mapping - userstatus0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_11_0_}

Static select for entity com.coconet.server.entity.UserStatus [NONE]: select userstatus0_.user_id as user_id1_11_0_, userstatus0_.status as status2_11_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d7c012c]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d172627]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@525b54b3]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3995bcf7]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4193dadf]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b15faa4]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
drop table if exists user_status CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value double not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, date varchar(255), day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
create table user_status (user_id integer not null, status integer not null, primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@264585b8
Registering SessionFactory: 48137e5d-f054-410b-84b7-994d7dbcf225 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$823faa09] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findNumByEmail.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@57a5219c
parse() - HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'num'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (u) -> users0_
Resolved : u -> users0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@44ddc267
Resolved : u.num -> users0_.user_id
Resolved : u -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@64c2d687
Resolved : u.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( users0_.user_id users0_.user_id num ) ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | path: u.num
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: num
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: u.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'users0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  |  \-[IDENT] IdentNode: 'num' {originalText=num}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@64c2d687}

throwQueryException() : no errors
HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
SQL: select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
throwQueryException() : no errors
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNum
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$823faa09] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@1f99b275'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@1f99b275'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@64c2d687
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@44ddc267
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@64c2d687
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@64c2d687}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@64c2d687
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@44ddc267
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@44ddc267}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Creating shared instance of singleton bean 'logTag'
Creating shared instance of singleton bean 'status'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'logTag'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'status'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardService'
Creating shared instance of singleton bean 'userStatusRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserStatusRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query UserStatus.countByStatus
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.countByStatus
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findStatusByNum.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'status'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'num'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (u) -> userstatus0_
Resolved : u -> userstatus0_.user_id
getDataType() : status -> org.hibernate.type.IntegerType@44ddc267
Resolved : u.status -> userstatus0_.status
Resolved : u -> userstatus0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@44ddc267
Resolved : u.num -> userstatus0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( userstatus0_.status userstatus0_.user_id status ) ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.user_id userstatus0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  | path: u.status
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: status
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: u.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'userstatus0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=num, expectedType=org.hibernate.type.IntegerType@44ddc267}

throwQueryException() : no errors
HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
SQL: select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
throwQueryException() : no errors
Looking up named query UserStatus.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findByNum
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserStatusRepository.
Creating shared instance of singleton bean 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'status'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@44ddc267
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@64c2d687
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@64c2d687}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@64c2d687
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@64c2d687
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@64c2d687
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@64c2d687
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@64c2d687}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@64c2d687
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@64c2d687
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@64c2d687}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@44ddc267
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardService'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'readFileService'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'status'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'status'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'userStatusController'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'status'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@45353750, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@557135f5, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f1eb8f7, org.springframework.security.web.header.HeaderWriterFilter@1447a5e0, org.springframework.security.web.authentication.logout.LogoutFilter@55d781a5, org.springframework.web.filter.CorsFilter@348bd700, com.coconet.server.jwt.JwtFilter@4b2e2e1c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f14bd0b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7783dafb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1350da04, org.springframework.security.web.session.SessionManagementFilter@3a2676b5, org.springframework.security.web.access.ExceptionTranslationFilter@59baf9d1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5e2a6cd]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/username]}: retrieveUsername(String,String)
	{GET [/coconet/user/department]}: retrieveDepartment()

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/admin]}: adminLogInfo()
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String)

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/notification]}: getNoticeList()
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/log]}: logAll()
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{GET [/coconet/board/todo]}: todoAll(String)

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{GET [/coconet/image], produces [image/png]}: getImageWithMediaType(HttpServletRequest)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{POST [/coconet/users]}: createUser(Users)
	{GET [/coconet/users]}: retrieveAllUsers()
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/login]}: login(LoginDto)
	{GET [/coconet/users/userid]}: retrieveUserNum(String)
	{POST [/coconet/signup]}: signup(UserDto,String)
	{POST [/coconet/logout]}: logout(String,LogoutDto)

	c.c.s.c.UserStatusController:
	{POST [/coconet/status]}: updateStatus(UserStatus)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
29 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@1f99b275'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(2, '공지사항 test2', '공지사항 내용2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(3, '공지사항 test3', '공지사항 내용3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(4, '공지사항 test4', '공지사항 내용4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(5, '공지사항 test5', '공지사항 내용5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(6, '공지사항 test6', '공지사항 내용6', to_char('2021.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(7, '공지사항 test7', '공지사항 내용7', to_char('2020.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
1 returned as update count for SQL: insert into user_status(user_id, status) values(90000, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90001, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90002, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90003, 15)
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 103 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["https-jsse-nio-443"]
Starting ProtocolHandler ["http-nio-7070"]
Tomcat started on port(s): 443 (https) 7070 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) found beans of type 'org.springframework.boot.web.servlet.server.ServletWebServerFactory' servletContainer (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 16.507 seconds (JVM running for 17.935)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@29346311
Detected org.springframework.web.servlet.support.SessionFlashMapManager@223ba5a2
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 3 ms
Securing POST /coconet/signup
Set SecurityContextHolder to empty SecurityContext
Security Context에 'admin' 인증 정보를 저장했습니다, uri: /coconet/signup
Authorized filter invocation [POST /coconet/signup] with attributes [permitAll]
Secured POST /coconet/signup
POST "/coconet/signup", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#signup(UserDto, String)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.UserDto@35194c96]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@64c2d687
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@64c2d687}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90000]
Resolving attributes for [com.coconet.server.entity.Users#90000]
Processing attribute `andnum` : value = andNum0
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 000000
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = department_admin
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = admin
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = admin
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01000000000
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = position_admin
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90000]
Loading collection: [com.coconet.server.entity.Users.authorities#90000]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90000]
Found row of collection: [com.coconet.server.entity.Users.authorities#90000]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_ADMIN]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_ADMIN]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90000]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
{ip:192.168.57.1, tag:Signup, title:신규 회원 등록, email:admin, date:2022. 08. 10. 19:59:39}
Found thread-bound EntityManager [SessionImpl(1984506697<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.UserService.signup]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1249c784]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@64c2d687
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@64c2d687}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=[com.coconet.server.entity.Authority#ROLE_ADMIN], email=admin}
com.coconet.server.entity.Authority{authorityName=ROLE_ADMIN}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
No collections were found in result set for role: com.coconet.server.entity.Users.authorities
Found thread-bound EntityManager [SessionImpl(1984506697<open>)] for JPA transaction
Participating in existing transaction
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Generated identifier: 0, using strategy: org.hibernate.id.Assigned
Found thread-bound EntityManager [SessionImpl(1984506697<open>)] for JPA transaction
Participating in existing transaction
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
insert into user_status (status, user_id) values (?, ?)
Executing identity-insert immediately
insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Natively generated identity: 90004
HHH000387: ResultSet's statement was not registered
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1984506697<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (initialized)
Collection found: [com.coconet.server.entity.Users.authorities#90004], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 2 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$GGBRsrhIo1eNPYhgJ9CdG.WV7jF49fzAH90uJXP04B4KPtChWFJ4C, birthdate=20220808, phone=010-2620-0000, num=90004, name=sp, position=사장, andnum=null, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=prnf@cocomo.com}
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=[com.coconet.server.entity.Authority#ROLE_ADMIN], email=admin}
com.coconet.server.entity.Authority{authorityName=ROLE_ADMIN}
com.coconet.server.entity.UserStatus{num=0, status=15}
Inserting collection: [com.coconet.server.entity.Users.authorities#90004]
insert into user_authority (user_id, authority_name) values (?, ?)
Done inserting collection: 1 rows inserted
Not closing pre-bound JPA EntityManager after transaction
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.UserDto@3cfd0071]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@335687e8, started on Wed Aug 10 19:59:17 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Add connection elided, waiting 1, queue 7
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
drop table if exists user_status CASCADE 
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6ec3e687] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@105a4b3f]
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=8, active=0, idle=8, waiting=0)
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn20: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 34140 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
HV000001: Hibernate Validator 6.2.3.Final
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserStatusController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\Status.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\BoardService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Finished Spring Data repository scanning in 211 ms. Found 10 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6d52788d'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@236d2f7e]
Creating shared instance of singleton bean 'servletContainer'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 443 (https) 7070 (http)
Initializing ProtocolHandler ["https-jsse-nio-443"]
Initializing ProtocolHandler ["http-nio-7070"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 4450 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@24565935

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Creating shared instance of singleton bean 'characterEncodingFilter'
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6d52788d'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@24565935
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.UserStatus
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@252038f0
Adding type registration boolean -> org.hibernate.type.BooleanType@252038f0
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@252038f0
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3937c3cd
Adding type registration true_false -> org.hibernate.type.TrueFalseType@20bf0966
Adding type registration yes_no -> org.hibernate.type.YesNoType@385bec33
Adding type registration byte -> org.hibernate.type.ByteType@7e8111ae
Adding type registration byte -> org.hibernate.type.ByteType@7e8111ae
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7e8111ae
Adding type registration character -> org.hibernate.type.CharacterType@34af8d6e
Adding type registration char -> org.hibernate.type.CharacterType@34af8d6e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@34af8d6e
Adding type registration short -> org.hibernate.type.ShortType@292fa5f0
Adding type registration short -> org.hibernate.type.ShortType@292fa5f0
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@292fa5f0
Adding type registration integer -> org.hibernate.type.IntegerType@6ef47b2f
Adding type registration int -> org.hibernate.type.IntegerType@6ef47b2f
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6ef47b2f
Adding type registration long -> org.hibernate.type.LongType@3f6b76c5
Adding type registration long -> org.hibernate.type.LongType@3f6b76c5
Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f6b76c5
Adding type registration float -> org.hibernate.type.FloatType@535c8d83
Adding type registration float -> org.hibernate.type.FloatType@535c8d83
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@535c8d83
Adding type registration double -> org.hibernate.type.DoubleType@1297a610
Adding type registration double -> org.hibernate.type.DoubleType@1297a610
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1297a610
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6e3d029f
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6e3d029f
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e1009ec
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e1009ec
Adding type registration string -> org.hibernate.type.StringType@69f3cb3f
Adding type registration java.lang.String -> org.hibernate.type.StringType@69f3cb3f
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@721f3938
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6c22e6db
Adding type registration url -> org.hibernate.type.UrlType@5be5e28c
Adding type registration java.net.URL -> org.hibernate.type.UrlType@5be5e28c
Adding type registration Duration -> org.hibernate.type.DurationType@70eb841b
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@70eb841b
Adding type registration Instant -> org.hibernate.type.InstantType@531f61a7
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@531f61a7
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@40c148e3
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@40c148e3
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7864903f
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7864903f
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70b5faa1
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70b5faa1
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5638037d
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5638037d
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60731089
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60731089
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2f9f36f1
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2f9f36f1
Adding type registration date -> org.hibernate.type.DateType@363a456f
Adding type registration java.sql.Date -> org.hibernate.type.DateType@363a456f
Adding type registration time -> org.hibernate.type.TimeType@6b557d46
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b557d46
Adding type registration timestamp -> org.hibernate.type.TimestampType@1ac35c40
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ac35c40
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ac35c40
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@10a4c570
Adding type registration calendar -> org.hibernate.type.CalendarType@2c2933c0
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c2933c0
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c2933c0
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b5cbbd6
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@66a93bf1
Adding type registration locale -> org.hibernate.type.LocaleType@1baf10b7
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1baf10b7
Adding type registration currency -> org.hibernate.type.CurrencyType@788932c3
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@788932c3
Adding type registration timezone -> org.hibernate.type.TimeZoneType@17f296b3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17f296b3
Adding type registration class -> org.hibernate.type.ClassType@d0879a4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d0879a4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f0c9111
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f0c9111
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@8a8b2e0
Adding type registration binary -> org.hibernate.type.BinaryType@4f3863bc
Adding type registration byte[] -> org.hibernate.type.BinaryType@4f3863bc
Adding type registration [B -> org.hibernate.type.BinaryType@4f3863bc
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7820e2c
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7820e2c
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7820e2c
Adding type registration row_version -> org.hibernate.type.RowVersionType@23b449b4
Adding type registration image -> org.hibernate.type.ImageType@59c6d72e
Adding type registration characters -> org.hibernate.type.CharArrayType@7b5ad53e
Adding type registration char[] -> org.hibernate.type.CharArrayType@7b5ad53e
Adding type registration [C -> org.hibernate.type.CharArrayType@7b5ad53e
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7745449c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7745449c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7745449c
Adding type registration text -> org.hibernate.type.TextType@175149d4
Adding type registration ntext -> org.hibernate.type.NTextType@684c5910
Adding type registration blob -> org.hibernate.type.BlobType@341a59ff
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@341a59ff
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@138b024b
Adding type registration clob -> org.hibernate.type.ClobType@6262d41c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6262d41c
Adding type registration nclob -> org.hibernate.type.NClobType@4a26ef59
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4a26ef59
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@622007c
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@355f2828
Adding type registration serializable -> org.hibernate.type.SerializableType@5c59c161
Adding type registration object -> org.hibernate.type.ObjectType@43014f44
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43014f44
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5620ee6c
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@111a3f21
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4401f19c
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4cd667e8
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1dd4b390
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5df7643c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1631e30f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@69273f06
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29fc400b] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29fc400b) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7cddbf4b] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5945715b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@248f4e74]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29fc400b]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29fc400b]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20a5f726] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@30b5765f]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:date]
building SimpleValue for date
Building property date
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.UserStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserStatus
Bind entity com.coconet.server.entity.UserStatus on table user_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property status with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:status]
building SimpleValue for status
Building property status
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for date
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for status
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_status]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1cd1a49f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@73555c2c, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.443.14369329922434688747, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=34140, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.443.14369329922434688747, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@571dc96e, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20a5f726] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3f3fc5f3]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6dbec0]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.date as date2_5_, notice_.day as day3_5_, notice_.title as title4_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (date, day, title, id) values (?, ?, ?, ?)
 Update 0: update notice set date=?, day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, date, day, title) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43367416]
Visiting attribute path : date
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.date as date2_5_0_, notice0_.day as day3_5_0_, notice0_.title as title4_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a88106]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@418f16cf]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e7314bf]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b32c821]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5241e216]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@690571af]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.UserStatus
 Version select: select user_id from user_status where user_id =?
 Snapshot select: select userstatus_.user_id, userstatus_.status as status2_11_ from user_status userstatus_ where userstatus_.user_id=?
 Insert 0: insert into user_status (status, user_id) values (?, ?)
 Update 0: update user_status set status=? where user_id=?
 Delete 0: delete from user_status where user_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a053b4e]
Visiting attribute path : status
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.UserStatus)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.UserStatus, querySpaceUid=<gen:0>, path=com.coconet.server.entity.UserStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.UserStatus)
          - SQL table alias mapping - userstatus0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_11_0_}

Static select for entity com.coconet.server.entity.UserStatus [NONE]: select userstatus0_.user_id as user_id1_11_0_, userstatus0_.status as status2_11_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749281a0]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71174f7f]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67f04f2e]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10893e03]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68631ca0]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31943a0e]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
drop table if exists user_status CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value double not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, date varchar(255), day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
create table user_status (user_id integer not null, status integer not null, primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6cde019
Registering SessionFactory: fe2f7e46-a9fe-47a6-aa9d-c89530b8f9e3 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$ff4be296] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findNumByEmail.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d8ca930
parse() - HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'num'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (u) -> users0_
Resolved : u -> users0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@6ef47b2f
Resolved : u.num -> users0_.user_id
Resolved : u -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@69f3cb3f
Resolved : u.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( users0_.user_id users0_.user_id num ) ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | path: u.num
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: num
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: u.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'users0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  |  \-[IDENT] IdentNode: 'num' {originalText=num}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@69f3cb3f}

throwQueryException() : no errors
HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
SQL: select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
throwQueryException() : no errors
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNum
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$ff4be296] because it is not cache-safe
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6d52788d'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6d52788d'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@69f3cb3f
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@6ef47b2f
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@69f3cb3f
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@69f3cb3f}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@69f3cb3f
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@6ef47b2f
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@6ef47b2f}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Creating shared instance of singleton bean 'logTag'
Creating shared instance of singleton bean 'status'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'logTag'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'status'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardService'
Creating shared instance of singleton bean 'userStatusRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserStatusRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query UserStatus.countByStatus
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.countByStatus
Creating new EntityManager for shared EntityManager invocation
Looking up named query UserStatus.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findByNum
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findStatusByNum.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'status'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'num'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (u) -> userstatus0_
Resolved : u -> userstatus0_.user_id
getDataType() : status -> org.hibernate.type.IntegerType@6ef47b2f
Resolved : u.status -> userstatus0_.status
Resolved : u -> userstatus0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@6ef47b2f
Resolved : u.num -> userstatus0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( userstatus0_.status userstatus0_.user_id status ) ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.user_id userstatus0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  | path: u.status
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: status
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: u.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'userstatus0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=num, expectedType=org.hibernate.type.IntegerType@6ef47b2f}

throwQueryException() : no errors
HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
SQL: select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.UserStatusRepository.
Creating shared instance of singleton bean 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'status'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@6ef47b2f
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@69f3cb3f
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@69f3cb3f}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@69f3cb3f
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@69f3cb3f
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@69f3cb3f
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@69f3cb3f
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@69f3cb3f}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@69f3cb3f
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@69f3cb3f
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@69f3cb3f}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@6ef47b2f
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardService'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'readFileService'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'status'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'status'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'userStatusController'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'status'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6ddfafcb, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ddec75, org.springframework.security.web.context.SecurityContextPersistenceFilter@6fa4ff94, org.springframework.security.web.header.HeaderWriterFilter@2db97483, org.springframework.security.web.authentication.logout.LogoutFilter@78e637eb, org.springframework.web.filter.CorsFilter@3960fd2, com.coconet.server.jwt.JwtFilter@50b4fb8d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ce154c8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@620fa89f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59520319, org.springframework.security.web.session.SessionManagementFilter@6811b76c, org.springframework.security.web.access.ExceptionTranslationFilter@70cfa6d4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4b748336]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/username]}: retrieveUsername(String,String)
	{GET [/coconet/user/department]}: retrieveDepartment()
	{GET [/coconet/user/position]}: retrievePosition(String)

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String)
	{GET [/coconet/logs/admin]}: adminLogInfo()

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{GET [/coconet/board/notification]}: getNoticeList()
	{GET [/coconet/board/log]}: logAll()
	{GET [/coconet/board/todo]}: todoAll(String)
	{GET [/coconet/board/chart]}: chartAll()
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{GET [/coconet/image], produces [image/png]}: getImageWithMediaType(HttpServletRequest)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{POST [/coconet/logout]}: logout(String,LogoutDto)
	{GET [/coconet/users]}: retrieveAllUsers()
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{GET [/coconet/users/userid]}: retrieveUserNum(String)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{POST [/coconet/login]}: login(LoginDto)
	{POST [/coconet/signup]}: signup(UserDto,String)
	{POST [/coconet/users]}: createUser(Users)

	c.c.s.c.UserStatusController:
	{POST [/coconet/status]}: updateStatus(UserStatus)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
29 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6d52788d'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(2, '공지사항 test2', '공지사항 내용2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(3, '공지사항 test3', '공지사항 내용3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(4, '공지사항 test4', '공지사항 내용4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(5, '공지사항 test5', '공지사항 내용5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(6, '공지사항 test6', '공지사항 내용6', to_char('2021.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(7, '공지사항 test7', '공지사항 내용7', to_char('2020.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
1 returned as update count for SQL: insert into user_status(user_id, status) values(90000, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90001, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90002, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90003, 15)
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 81 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["https-jsse-nio-443"]
Starting ProtocolHandler ["http-nio-7070"]
Tomcat started on port(s): 443 (https) 7070 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) found beans of type 'org.springframework.boot.web.servlet.server.ServletWebServerFactory' servletContainer (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 13.689 seconds (JVM running for 15.298)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@166b9c4b, started on Wed Aug 10 20:00:21 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
drop table if exists authority CASCADE 
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists position CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
drop table if exists user_status CASCADE 
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@31365c31] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3f3fc5f3]
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
Logging Provider: org.jboss.logging.Log4j2LoggerProvider
Starting ServerApplication using Java 11.0.11 on 한유진재산1300억 with PID 15036 (D:\@coconet\Coconet-main\Coconet-main\target\classes started by User in D:\@coconet\Coconet-main)
HV000001: Hibernate Validator 6.2.3.Final
Running with Spring Boot v2.7.1, Spring v5.3.21
No active profile set, falling back to 1 default profile: "default"
Loading source class com.coconet.server.ServerApplication
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Matching URLs for reloading : [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Included patterns for restart : []
Excluded patterns for restart : [/spring-boot-starter-[\w-]+/, /spring-boot/(bin|build|out)/, /spring-boot-starter/(bin|build|out)/, /spring-boot-devtools/(bin|build|out)/, /spring-boot-actuator/(bin|build|out)/, /spring-boot-autoconfigure/(bin|build|out)/]
Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2
Loaded expression factory via original TCCL
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\CorsConfig.class]
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\SecurityConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\config\WebConfig.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\AdminLogController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\BoardJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\CertificationController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ExceptionController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\ImageController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\JwtController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserJpaController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\controller\UserStatusController.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\LogTag.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\NoticeType.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\define\Status.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAccessDeniedHandler.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtAuthenticationEntryPoint.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\jwt\JwtTokenProvider.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Ignored because not a concrete top-level class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\AuthService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\BoardService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CertificationService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\CustomUserDetailsService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ImageService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\LogService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\ReadFileService.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\service\UserService.class]
Bootstrapping Spring Data JPA repositories in DEFAULT mode.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
@EnableAutoConfiguration was declared on a class in the package 'com.coconet.server'. Automatic @Repository and @Entity scanning is enabled.
Scanning for JPA repositories in packages com.coconet.server.
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ApprovalRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\BoardRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\ChartRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\DepartmentRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\LogRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\PositionRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\RefreshTokenRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\TodoRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserRepository.class]
Identified candidate component class: file [D:\@coconet\Coconet-main\Coconet-main\target\classes\com\coconet\server\repository\UserStatusRepository.class]
Finished Spring Data repository scanning in 216 ms. Found 10 JPA repository interfaces.
Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
Creating shared instance of singleton bean 'conversionServicePostProcessor'
Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'methodValidationPostProcessor'
Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
Creating shared instance of singleton bean 'metaDataSourceAdvisor'
Creating shared instance of singleton bean 'methodSecurityMetadataSource'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
Creating shared instance of singleton bean 'transactionAttributeSource'
Creating shared instance of singleton bean 'transactionInterceptor'
Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
Creating shared instance of singleton bean 'objectPostProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration'
Autowiring by type from bean name 'objectPostProcessor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6b11eb34'
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@305470d]
Creating shared instance of singleton bean 'servletContainer'
Creating shared instance of singleton bean 'serverApplication'
Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'errorPageCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
Creating shared instance of singleton bean 'dispatcherServletRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
Creating shared instance of singleton bean 'dispatcherServlet'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Creating shared instance of singleton bean 'multipartConfigElement'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
Code archive: C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar
None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
Tomcat initialized with port(s): 443 (https) 7070 (http)
Initializing ProtocolHandler ["https-jsse-nio-443"]
Initializing ProtocolHandler ["http-nio-7070"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.64]
Initializing Spring embedded WebApplicationContext
Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
Root WebApplicationContext: initialization completed in 5628 ms
Creating shared instance of singleton bean 'h2Console'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration'
Creating shared instance of singleton bean 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Autowiring by type from bean name 'h2Console' via factory method to bean named 'spring.h2.console-org.springframework.boot.autoconfigure.h2.H2ConsoleProperties'
Creating shared instance of singleton bean 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@33bd5bf3

HikariPool-1 - configuration:
allowPoolSuspension................................false
autoCommit................................true
catalog................................none
connectionInitSql................................none
connectionTestQuery................................none
connectionTimeout................................30000
dataSource................................none
dataSourceClassName................................none
dataSourceJNDI................................none
dataSourceProperties................................{password=<masked>}
driverClassName................................"org.h2.Driver"
exceptionOverrideClassName................................none
healthCheckProperties................................{}
healthCheckRegistry................................none
idleTimeout................................600000
initializationFailTimeout................................1
isolateInternalQueries................................false
jdbcUrl................................jdbc:h2:mem:testdb
keepaliveTime................................0
leakDetectionThreshold................................0
maxLifetime................................1800000
maximumPoolSize................................10
metricRegistry................................none
metricsTrackerFactory................................none
minimumIdle................................10
password................................<masked>
poolName................................"HikariPool-1"
readOnly................................false
registerMbeans................................false
scheduledExecutor................................none
schema................................none
threadFactory................................internal
transactionIsolation................................default
username................................"sa"
validationTimeout................................5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Start completed.
H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
Creating shared instance of singleton bean 'errorPageSecurityFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$ErrorPageSecurityFilterConfiguration'
Autowiring by type from bean name 'errorPageSecurityFilter' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Creating shared instance of singleton bean 'securityFilterChainRegistration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration'
Creating shared instance of singleton bean 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Autowiring by type from bean name 'securityFilterChainRegistration' via factory method to bean named 'spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties'
Creating shared instance of singleton bean 'corsFilter'
Creating shared instance of singleton bean 'corsConfig'
Creating shared instance of singleton bean 'requestContextFilter'
Creating shared instance of singleton bean 'formContentFilter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
Creating shared instance of singleton bean 'characterEncodingFilter'
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Mapping filters: springSecurityFilterChain urls=[/*] order=-100, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, corsFilter urls=[/*] order=2147483647
Mapping servlets: dispatcherServlet urls=[/], webServlet urls=[/h2-console/*]
Filter 'requestContextFilter' configured for use
Filter 'corsFilter' configured for use
Filter 'characterEncodingFilter' configured for use
Filter 'springSecurityFilterChain' configured for use
Filter 'formContentFilter' configured for use
Creating shared instance of singleton bean 'inMemoryDatabaseShutdownExecutor'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'inMemoryDatabaseShutdownExecutor' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
Creating shared instance of singleton bean 'entityManagerFactory'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'
Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6b11eb34'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'
Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
Creating shared instance of singleton bean 'entityManagerFactoryBuilder'
Creating shared instance of singleton bean 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'
Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'
Fetching JDBC Connection from DataSource
Building JPA container EntityManagerFactory for persistence unit 'default'
PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@33bd5bf3
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.coconet.server.entity.ApprovalData
		com.coconet.server.entity.Authority
		com.coconet.server.entity.ChartData
		com.coconet.server.entity.Department
		com.coconet.server.entity.LogData
		com.coconet.server.entity.Notice
		com.coconet.server.entity.Position
		com.coconet.server.entity.TodoData
		com.coconet.server.entity.Token
		com.coconet.server.entity.UserStatus
		com.coconet.server.entity.Users]
	Mapping files names []
	Properties []
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate ORM core version 5.6.9.Final
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@74ef1a61
Adding type registration boolean -> org.hibernate.type.BooleanType@74ef1a61
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@74ef1a61
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2203875c
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b78933d
Adding type registration yes_no -> org.hibernate.type.YesNoType@31483659
Adding type registration byte -> org.hibernate.type.ByteType@29203a06
Adding type registration byte -> org.hibernate.type.ByteType@29203a06
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@29203a06
Adding type registration character -> org.hibernate.type.CharacterType@16ca122
Adding type registration char -> org.hibernate.type.CharacterType@16ca122
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16ca122
Adding type registration short -> org.hibernate.type.ShortType@4a7160c4
Adding type registration short -> org.hibernate.type.ShortType@4a7160c4
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4a7160c4
Adding type registration integer -> org.hibernate.type.IntegerType@3da144c9
Adding type registration int -> org.hibernate.type.IntegerType@3da144c9
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3da144c9
Adding type registration long -> org.hibernate.type.LongType@442ef537
Adding type registration long -> org.hibernate.type.LongType@442ef537
Adding type registration java.lang.Long -> org.hibernate.type.LongType@442ef537
Adding type registration float -> org.hibernate.type.FloatType@47e0dcbd
Adding type registration float -> org.hibernate.type.FloatType@47e0dcbd
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47e0dcbd
Adding type registration double -> org.hibernate.type.DoubleType@1045ec2d
Adding type registration double -> org.hibernate.type.DoubleType@1045ec2d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1045ec2d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7a941588
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7a941588
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@78a8b006
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@78a8b006
Adding type registration string -> org.hibernate.type.StringType@15b6cb85
Adding type registration java.lang.String -> org.hibernate.type.StringType@15b6cb85
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c68fdbe
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@582bb0ef
Adding type registration url -> org.hibernate.type.UrlType@21cd367
Adding type registration java.net.URL -> org.hibernate.type.UrlType@21cd367
Adding type registration Duration -> org.hibernate.type.DurationType@668cca3
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@668cca3
Adding type registration Instant -> org.hibernate.type.InstantType@78b187dd
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@78b187dd
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@62003005
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@62003005
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1d6298f0
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1d6298f0
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13b2e31c
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13b2e31c
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10d54651
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10d54651
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6300585f
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6300585f
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@54cf78b7
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@54cf78b7
Adding type registration date -> org.hibernate.type.DateType@693ca559
Adding type registration java.sql.Date -> org.hibernate.type.DateType@693ca559
Adding type registration time -> org.hibernate.type.TimeType@5576fef1
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5576fef1
Adding type registration timestamp -> org.hibernate.type.TimestampType@19904dae
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19904dae
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19904dae
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@dd8dc35
Adding type registration calendar -> org.hibernate.type.CalendarType@4138f6d0
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4138f6d0
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4138f6d0
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5dd377a7
Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@a6f75ff
Adding type registration locale -> org.hibernate.type.LocaleType@5a372921
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5a372921
Adding type registration currency -> org.hibernate.type.CurrencyType@1ede4d70
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ede4d70
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4790309e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4790309e
Adding type registration class -> org.hibernate.type.ClassType@798f1351
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@798f1351
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5e1cf90f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5e1cf90f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2738c2ec
Adding type registration binary -> org.hibernate.type.BinaryType@4042336
Adding type registration byte[] -> org.hibernate.type.BinaryType@4042336
Adding type registration [B -> org.hibernate.type.BinaryType@4042336
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@103f7ca4
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@103f7ca4
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@103f7ca4
Adding type registration row_version -> org.hibernate.type.RowVersionType@7ee26464
Adding type registration image -> org.hibernate.type.ImageType@60a922c3
Adding type registration characters -> org.hibernate.type.CharArrayType@7717971c
Adding type registration char[] -> org.hibernate.type.CharArrayType@7717971c
Adding type registration [C -> org.hibernate.type.CharArrayType@7717971c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45ab3f3
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45ab3f3
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45ab3f3
Adding type registration text -> org.hibernate.type.TextType@41330ad9
Adding type registration ntext -> org.hibernate.type.NTextType@5bcecb49
Adding type registration blob -> org.hibernate.type.BlobType@1a950d94
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a950d94
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@34c11fa9
Adding type registration clob -> org.hibernate.type.ClobType@5f3a683e
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f3a683e
Adding type registration nclob -> org.hibernate.type.NClobType@64cf1434
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64cf1434
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b9dc11b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@60a84c95
Adding type registration serializable -> org.hibernate.type.SerializableType@2ab3aff1
Adding type registration object -> org.hibernate.type.ObjectType@651ce181
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@651ce181
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e869771
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1379f010
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5a015a12
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45c62868
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4ff102be
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@13548220
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@43d59b92
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@37247ee8
Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1ad99fb0] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1ad99fb0) [was null]
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1e75d2ed] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1f678621] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@415503af]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1ad99fb0]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1ad99fb0]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Database ->
       name : H2
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.197 (2018-03-18)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1463862d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22323b5e]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: com.coconet.server.entity.ApprovalData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ApprovalData
Bind entity com.coconet.server.entity.ApprovalData on table approval_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(approval_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ApprovalData:state]
building SimpleValue for state
Building property state
Binding entity from annotated class: com.coconet.server.entity.Authority
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Authority
Bind entity com.coconet.server.entity.Authority on table authority
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(authority), mappingColumn=authority_name, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
MetadataSourceProcessor property authorityName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Authority:authorityName]
building SimpleValue for authorityName
Building property authorityName
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(authority_name)]), authorityName, assigned, , ...)
Binding entity from annotated class: com.coconet.server.entity.ChartData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name ChartData
Bind entity com.coconet.server.entity.ChartData on table chart_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:title]
building SimpleValue for title
Building property title
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(chart_data), mappingColumn=value, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property value with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.ChartData:value]
building SimpleValue for value
Building property value
Binding entity from annotated class: com.coconet.server.entity.Department
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Department
Bind entity com.coconet.server.entity.Department on table department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(department_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(department), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Department:department]
building SimpleValue for department
Building property department
Binding entity from annotated class: com.coconet.server.entity.LogData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name LogData
Bind entity com.coconet.server.entity.LogData on table log_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=color, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property color with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:color]
building SimpleValue for color
Building property color
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=img, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property img with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:img]
building SimpleValue for img
Building property img
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:position]
building SimpleValue for position
Building property position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=state, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property state with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:state]
building SimpleValue for state
Building property state
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(log_data), mappingColumn=time, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.LogData:time]
building SimpleValue for time
Building property time
Binding entity from annotated class: com.coconet.server.entity.Notice
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Notice
Bind entity com.coconet.server.entity.Notice on table notice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=date, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:date]
building SimpleValue for date
Building property date
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=day, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property day with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:day]
building SimpleValue for day
Building property day
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(notice), mappingColumn=title, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property title with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Notice:title]
building SimpleValue for title
Building property title
Binding entity from annotated class: com.coconet.server.entity.Position
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Position
Bind entity com.coconet.server.entity.Position on table position
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(position_id)]), id, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=department_id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property departmentId with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:departmentId]
building SimpleValue for departmentId
Building property departmentId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(position), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Position:position]
building SimpleValue for position
Building property position
Binding entity from annotated class: com.coconet.server.entity.TodoData
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name TodoData
Bind entity com.coconet.server.entity.TodoData on table todo_data
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=num, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(num)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=todo, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property todo with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:todo]
building SimpleValue for todo
Building property todo
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userName]
building SimpleValue for userName
Building property userName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(todo_data), mappingColumn=user_num, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userNum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.TodoData:userNum]
building SimpleValue for userNum
Building property userNum
Binding entity from annotated class: com.coconet.server.entity.Token
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Token
Bind entity com.coconet.server.entity.Token on table token
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=email, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:email]
building SimpleValue for email
Building property email
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(email)]), email, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(token), mappingColumn=refresh_token, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property refreshToken with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Token:refreshToken]
building SimpleValue for refreshToken
Building property refreshToken
Binding entity from annotated class: com.coconet.server.entity.UserStatus
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name UserStatus
Bind entity com.coconet.server.entity.UserStatus on table user_status
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, assigned, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_status), mappingColumn=status, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property status with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.UserStatus:status]
building SimpleValue for status
Building property status
Binding entity from annotated class: com.coconet.server.entity.Users
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Users
Bind entity com.coconet.server.entity.Users on table users
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
MetadataSourceProcessor property num with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:num]
building SimpleValue for num
Building property num
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), num, identity, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=andnum, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property andnum with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:andnum]
building SimpleValue for andnum
Building property andnum
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=authorities_key, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='authorities_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='authority_name', referencedColumn='authority_name', mappedBy=''}
Collection role: com.coconet.server.entity.Users.authorities
Building property authorities
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property birthdate with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:birthdate]
building SimpleValue for birthdate
Building property birthdate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=department, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property department with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:department]
building SimpleValue for department
Building property department
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property email with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:email]
building SimpleValue for email
Building property email
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:name]
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:password]
building SimpleValue for password
Building property password
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=phone, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property phone with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:phone]
building SimpleValue for phone
Building property phone
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=position, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property position with lazy=false
Attempting to locate auto-apply AttributeConverter for property [com.coconet.server.entity.Users:position]
building SimpleValue for position
Building property position
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for day
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for state
Starting fillSimpleValue for authorityName
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for title
Starting fillSimpleValue for value
Starting fillSimpleValue for id
Starting fillSimpleValue for department
Starting fillSimpleValue for num
Starting fillSimpleValue for color
Starting fillSimpleValue for img
Starting fillSimpleValue for name
Starting fillSimpleValue for position
Starting fillSimpleValue for state
Starting fillSimpleValue for time
Starting fillSimpleValue for id
Starting fillSimpleValue for date
Starting fillSimpleValue for day
Starting fillSimpleValue for title
Starting fillSimpleValue for id
Starting fillSimpleValue for departmentId
Starting fillSimpleValue for position
Starting fillSimpleValue for num
Starting fillSimpleValue for todo
Starting fillSimpleValue for userName
Starting fillSimpleValue for userNum
Starting fillSimpleValue for email
Starting fillSimpleValue for refreshToken
Starting fillSimpleValue for num
Starting fillSimpleValue for status
Starting fillSimpleValue for num
Starting fillSimpleValue for andnum
Starting fillSimpleValue for birthdate
Starting fillSimpleValue for department
Starting fillSimpleValue for email
Starting fillSimpleValue for name
Starting fillSimpleValue for password
Starting fillSimpleValue for phone
Starting fillSimpleValue for position
Forcing column [num] to be non-null as it is part of the primary key for table [approval_data]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [authority]
Forcing column [num] to be non-null as it is part of the primary key for table [chart_data]
Forcing column [department_id] to be non-null as it is part of the primary key for table [department]
Forcing column [num] to be non-null as it is part of the primary key for table [log_data]
Forcing column [id] to be non-null as it is part of the primary key for table [notice]
Forcing column [position_id] to be non-null as it is part of the primary key for table [position]
Forcing column [num] to be non-null as it is part of the primary key for table [todo_data]
Forcing column [email] to be non-null as it is part of the primary key for table [token]
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_status]
Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
Second pass for collection: com.coconet.server.entity.Users.authorities
Binding as ManyToMany: com.coconet.server.entity.Users.authorities
Forcing column [user_id] to be non-null as it is part of the primary key for table [user_authority]
Forcing column [authority_name] to be non-null as it is part of the primary key for table [user_authority]
Mapped collection key: user_id, element: authority_name
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Resolving reference to class: com.coconet.server.entity.Authority
Resolving reference to class: com.coconet.server.entity.Users
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
JPA compliance - query : disabled
JPA compliance - closed-handling : disabled
JPA compliance - lists : disabled
JPA compliance - transactions : disabled
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3792093a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=MS949, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=D:\@coconet\Coconet-main\Coconet-main\target\classes;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\2.7.1\spring-boot-starter-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-aop\2.7.1\spring-boot-starter-aop-2.7.1.jar;C:\Users\User\.m2\repository\org\aspectj\aspectjweaver\1.9.7\aspectjweaver-1.9.7.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\2.7.1\spring-boot-starter-jdbc-2.7.1.jar;C:\Users\User\.m2\repository\com\zaxxer\HikariCP\4.0.3\HikariCP-4.0.3.jar;C:\Users\User\.m2\repository\org\springframework\spring-jdbc\5.3.21\spring-jdbc-5.3.21.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\2.2.3\jakarta.persistence-api-2.2.3.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.6.9.Final\hibernate-core-5.6.9.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.11\byte-buddy-1.12.11.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.6\jaxb-runtime-2.3.6.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.6\txw2-2.3.6.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.12\istack-commons-runtime-3.0.12.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-jpa\2.7.1\spring-data-jpa-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\data\spring-data-commons\2.7.1\spring-data-commons-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-orm\5.3.21\spring-orm-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-context\5.3.21\spring-context-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-tx\5.3.21\spring-tx-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-beans\5.3.21\spring-beans-5.3.21.jar;C:\Users\User\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\User\.m2\repository\org\springframework\spring-aspects\5.3.21\spring-aspects-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.1\spring-boot-starter-web-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.1\spring-boot-starter-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.1\spring-boot-starter-logging-2.7.1.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\User\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\User\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\User\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\User\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\User\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.1\spring-boot-starter-json-2.7.1.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.1\spring-boot-starter-tomcat-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.64\tomcat-embed-core-9.0.64.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.64\tomcat-embed-websocket-9.0.64.jar;C:\Users\User\.m2\repository\org\springframework\spring-web\5.3.21\spring-web-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-webmvc\5.3.21\spring-webmvc-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-expression\5.3.21\spring-expression-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-devtools\2.7.1\spring-boot-devtools-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot\2.7.1\spring-boot-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.1\spring-boot-autoconfigure-2.7.1.jar;C:\Users\User\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\User\.m2\repository\org\springframework\spring-core\5.3.21\spring-core-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\spring-jcl\5.3.21\spring-jcl-5.3.21.jar;C:\Users\User\.m2\repository\com\h2database\h2\1.4.197\h2-1.4.197.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.29\mysql-connector-java-8.0.29.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-security\2.7.1\spring-boot-starter-security-2.7.1.jar;C:\Users\User\.m2\repository\org\springframework\spring-aop\5.3.21\spring-aop-5.3.21.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-config\5.7.2\spring-security-config-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-web\5.7.2\spring-security-web-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-core\5.7.2\spring-security-core-5.7.2.jar;C:\Users\User\.m2\repository\org\springframework\security\spring-security-crypto\5.7.2\spring-security-crypto-5.7.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.2\jjwt-api-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.2\jjwt-impl-0.11.2.jar;C:\Users\User\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.2\jjwt-jackson-0.11.2.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\User\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\User\.m2\repository\org\springframework\boot\spring-boot-starter-validation\2.7.1\spring-boot-starter-validation-2.7.1.jar;C:\Users\User\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.64\tomcat-embed-el-9.0.64.jar;C:\Users\User\.m2\repository\org\hibernate\validator\hibernate-validator\6.2.3.Final\hibernate-validator-6.2.3.Final.jar;C:\Users\User\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\User\.m2\repository\net\nurigo\javaSDK\2.2\javaSDK-2.2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-source-plugin\3.0.0\maven-source-plugin-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\User\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\User\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-archiver\3.0.0\maven-archiver-3.0.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.0.0\maven-shared-utils-3.0.0.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\2.0.1\jsr305-2.0.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-archiver\3.0.3\plexus-archiver-3.0.3.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-io\2.7\plexus-io-2.7.jar;C:\Users\User\.m2\repository\org\apache\commons\commons-compress\1.10\commons-compress-1.10.jar;C:\Users\User\.m2\repository\org\iq80\snappy\snappy\0.4\snappy-0.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.22\plexus-utils-3.0.22.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-javadoc-plugin\2.10.3\maven-javadoc-plugin-2.10.3.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-project\2.2.1\maven-project-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-profile\2.2.1\maven-profile-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-plugin-registry\2.2.1\maven-plugin-registry-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-settings\2.2.1\maven-settings-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-artifact-manager\2.2.1\maven-artifact-manager-2.2.1.jar;C:\Users\User\.m2\repository\backport-util-concurrent\backport-util-concurrent\3.1\backport-util-concurrent-3.1.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-toolchain\2.2.1\maven-toolchain-2.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-invoker\2.0.9\maven-invoker-2.0.9.jar;C:\Users\User\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\1.3\maven-common-artifact-filters-1.3.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.4\doxia-sink-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.4\doxia-logging-api-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.4\doxia-site-renderer-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-core\1.4\doxia-core-1.4.jar;C:\Users\User\.m2\repository\xerces\xercesImpl\2.9.1\xercesImpl-2.9.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.3.04\xml-apis-1.3.04.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.4\doxia-decoration-model-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.4\doxia-module-xhtml-1.4.jar;C:\Users\User\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.4\doxia-module-fml-1.4.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.7\plexus-velocity-1.1.7.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\User\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\User\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\User\.m2\repository\commons-beanutils\commons-beanutils\1.7.0\commons-beanutils-1.7.0.jar;C:\Users\User\.m2\repository\commons-digester\commons-digester\1.8\commons-digester-1.8.jar;C:\Users\User\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\User\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.1\dom4j-1.1.jar;C:\Users\User\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\User\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\User\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\User\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0-beta-6\wagon-provider-api-1.0-beta-6.jar;C:\Users\User\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\User\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\User\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\User\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\User\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Users\User\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\User\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-9\plexus-container-default-1.0-alpha-9.jar;C:\Users\User\.m2\repository\classworlds\classworlds\1.1-alpha-2\classworlds-1.1-alpha-2.jar;C:\Users\User\.m2\repository\org\apache\maven\plugins\maven-gpg-plugin\1.6\maven-gpg-plugin-1.6.jar;C:\Users\User\.m2\repository\org\apache\maven\maven-repository-metadata\2.2.1\maven-repository-metadata-2.2.1.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.4\plexus-sec-dispatcher-1.4.jar;C:\Users\User\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\User\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\User\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\User\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\User\.m2\repository\com\google\code\gson\gson\2.8.5\gson-2.8.5.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://openjdk.java.net/, catalina.useNaming=false, user.timezone=Asia/Seoul, jakarta.persistence.sharedCache.mode=UNSPECIFIED, os.name=Windows 10, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=KR, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.11\bin, sun.java.command=com.coconet.server.ServerApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@46969688, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=ko, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-11.0.11, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.11+9-LTS-194, user.name=User, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=18.9, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\User\AppData\Local\Temp\tomcat.443.5760685460675715061, java.version=11.0.11, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=D:\@coconet\Coconet-main, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=15036, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\User\AppData\Local\Temp\tomcat.443.5760685460675715061, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1501ec6b, java.library.path=C:\Program Files\Java\jdk-11.0.11\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;D:\Chameleon\Git\cmd;C:\Program Files\Git\cmd;C:\Program Files\dotnet\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Java\jdk-11.0.11\bin;D:\GAME\EclipseTool\apache-maven-3.8.4\bin;C:\Users\User\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\User\AppData\Local\Programs\Python\Python38-32\;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Bandizip\;C:\Users\User\Desktop\코딩\Microsoft VS Code\bin;C:\Users\User\.dotnet\tools;D:\GAME\IntelliJ IDEA Community Edition 2021.3.1\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.11+9-LTS-194, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=55.0}
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
Loaded expression factory via original TCCL
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1463862d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59a4c23c]
Not known whether passed class name [com.coconet.server.entity.ChartData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ChartData
Not known whether passed class name [com.coconet.server.entity.Notice] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Notice
Not known whether passed class name [com.coconet.server.entity.Authority] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Authority
Not known whether passed class name [com.coconet.server.entity.LogData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.LogData
Not known whether passed class name [com.coconet.server.entity.Users] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Users
Not known whether passed class name [com.coconet.server.entity.Token] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Token
Not known whether passed class name [com.coconet.server.entity.UserStatus] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.UserStatus
Not known whether passed class name [com.coconet.server.entity.TodoData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.TodoData
Not known whether passed class name [com.coconet.server.entity.ApprovalData] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.ApprovalData
Not known whether passed class name [com.coconet.server.entity.Department] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Department
Not known whether passed class name [com.coconet.server.entity.Position] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.coconet.server.entity.Position
Static SQL for collection: com.coconet.server.entity.Users.authorities
 Row insert: insert into user_authority (user_id, authority_name) values (?, ?)
 Row update: update user_authority set authority_name=? where user_id=? and authority_name=?
 Row delete: delete from user_authority where user_id=? and authority_name=?
 One-shot delete: delete from user_authority where user_id=?
Static SQL for entity: com.coconet.server.entity.ChartData
 Version select: select num from chart_data where num =?
 Snapshot select: select chartdata_.num, chartdata_.color as color2_2_, chartdata_.title as title3_2_, chartdata_.value as value4_2_ from chart_data chartdata_ where chartdata_.num=?
 Insert 0: insert into chart_data (color, title, value, num) values (?, ?, ?, ?)
 Update 0: update chart_data set color=?, title=?, value=? where num=?
 Delete 0: delete from chart_data where num=?
 Identity insert: insert into chart_data (num, color, title, value) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@551161b]
Visiting attribute path : color
Visiting attribute path : title
Visiting attribute path : value
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ChartData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ChartData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ChartData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ChartData)
          - SQL table alias mapping - chartdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_2_0_}

Static select for entity com.coconet.server.entity.ChartData [NONE]: select chartdata0_.num as num1_2_0_, chartdata0_.color as color2_2_0_, chartdata0_.title as title3_2_0_, chartdata0_.value as value4_2_0_ from chart_data chartdata0_ where chartdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Notice
 Version select: select id from notice where id =?
 Snapshot select: select notice_.id, notice_.date as date2_5_, notice_.day as day3_5_, notice_.title as title4_5_ from notice notice_ where notice_.id=?
 Insert 0: insert into notice (date, day, title, id) values (?, ?, ?, ?)
 Update 0: update notice set date=?, day=?, title=? where id=?
 Delete 0: delete from notice where id=?
 Identity insert: insert into notice (id, date, day, title) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61de451a]
Visiting attribute path : date
Visiting attribute path : day
Visiting attribute path : title
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Notice)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Notice, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Notice)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Notice)
          - SQL table alias mapping - notice0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

Static select for entity com.coconet.server.entity.Notice [NONE]: select notice0_.id as id1_5_0_, notice0_.date as date2_5_0_, notice0_.day as day3_5_0_, notice0_.title as title4_5_0_ from notice notice0_ where notice0_.id=?
Static SQL for entity: com.coconet.server.entity.Authority
 Version select: select authority_name from authority where authority_name =?
 Snapshot select: select authority_.authority_name from authority authority_ where authority_.authority_name=?
 Insert 0: insert into authority (authority_name) values (?)
 Update 0: null
 Delete 0: delete from authority where authority_name=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65c2def1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Authority)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Authority)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Authority)
          - SQL table alias mapping - authority0_
          - alias suffix - 0_
          - suffixed key columns - {authorit1_1_0_}

Static select for entity com.coconet.server.entity.Authority [NONE]: select authority0_.authority_name as authorit1_1_0_ from authority authority0_ where authority0_.authority_name=?
Static SQL for entity: com.coconet.server.entity.LogData
 Version select: select num from log_data where num =?
 Snapshot select: select logdata_.num, logdata_.color as color2_4_, logdata_.img as img3_4_, logdata_.name as name4_4_, logdata_.position as position5_4_, logdata_.state as state6_4_, logdata_.time as time7_4_ from log_data logdata_ where logdata_.num=?
 Insert 0: insert into log_data (color, img, name, position, state, time, num) values (?, ?, ?, ?, ?, ?, ?)
 Update 0: update log_data set color=?, img=?, name=?, position=?, state=?, time=? where num=?
 Delete 0: delete from log_data where num=?
 Identity insert: insert into log_data (num, color, img, name, position, state, time) values (default, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@660750b1]
Visiting attribute path : color
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : position
Visiting attribute path : state
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.LogData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.LogData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.LogData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.LogData)
          - SQL table alias mapping - logdata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_4_0_}

Static select for entity com.coconet.server.entity.LogData [NONE]: select logdata0_.num as num1_4_0_, logdata0_.color as color2_4_0_, logdata0_.img as img3_4_0_, logdata0_.name as name4_4_0_, logdata0_.position as position5_4_0_, logdata0_.state as state6_4_0_, logdata0_.time as time7_4_0_ from log_data logdata0_ where logdata0_.num=?
Static SQL for entity: com.coconet.server.entity.Users
 Version select: select user_id from users where user_id =?
 Snapshot select: select users_.user_id, users_.andnum as andnum2_10_, users_.birthdate as birthdat3_10_, users_.department as departme4_10_, users_.email as email5_10_, users_.name as name6_10_, users_.password as password7_10_, users_.phone as phone8_10_, users_.position as position9_10_ from users users_ where users_.user_id=?
 Insert 0: insert into users (andnum, birthdate, department, email, name, password, phone, position, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update users set andnum=?, birthdate=?, department=?, email=?, name=?, password=?, phone=?, position=? where user_id=?
 Delete 0: delete from users where user_id=?
 Identity insert: insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fa6d5dd]
Visiting attribute path : andnum
Visiting attribute path : authorities
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@facba2f]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ec252ae]
Visiting attribute path : birthdate
Visiting attribute path : department
Visiting attribute path : email
Visiting attribute path : name
Visiting attribute path : password
Visiting attribute path : phone
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Users)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Users, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Users)
          - CollectionAttributeFetchImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:1>, path=com.coconet.server.entity.Users.authorities)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:2>, path=com.coconet.server.entity.Users.authorities.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_10_0_}

Static select for entity com.coconet.server.entity.Users [NONE]: select users0_.user_id as user_id1_10_0_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_ from users users0_ where users0_.user_id=?
Static SQL for entity: com.coconet.server.entity.Token
 Version select: select email from token where email =?
 Snapshot select: select token_.email, token_.refresh_token as refresh_2_8_ from token token_ where token_.email=?
 Insert 0: insert into token (refresh_token, email) values (?, ?)
 Update 0: update token set refresh_token=? where email=?
 Delete 0: delete from token where email=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@573b3ecb]
Visiting attribute path : refreshToken
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Token)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Token, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Token)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Token)
          - SQL table alias mapping - token0_
          - alias suffix - 0_
          - suffixed key columns - {email1_8_0_}

Static select for entity com.coconet.server.entity.Token [NONE]: select token0_.email as email1_8_0_, token0_.refresh_token as refresh_2_8_0_ from token token0_ where token0_.email=?
Static SQL for entity: com.coconet.server.entity.UserStatus
 Version select: select user_id from user_status where user_id =?
 Snapshot select: select userstatus_.user_id, userstatus_.status as status2_11_ from user_status userstatus_ where userstatus_.user_id=?
 Insert 0: insert into user_status (status, user_id) values (?, ?)
 Update 0: update user_status set status=? where user_id=?
 Delete 0: delete from user_status where user_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13ee220c]
Visiting attribute path : status
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.UserStatus)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.UserStatus, querySpaceUid=<gen:0>, path=com.coconet.server.entity.UserStatus)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.UserStatus)
          - SQL table alias mapping - userstatus0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_11_0_}

Static select for entity com.coconet.server.entity.UserStatus [NONE]: select userstatus0_.user_id as user_id1_11_0_, userstatus0_.status as status2_11_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Static SQL for entity: com.coconet.server.entity.TodoData
 Version select: select num from todo_data where num =?
 Snapshot select: select tododata_.num, tododata_.todo as todo2_7_, tododata_.user_name as user_nam3_7_, tododata_.user_num as user_num4_7_ from todo_data tododata_ where tododata_.num=?
 Insert 0: insert into todo_data (todo, user_name, user_num, num) values (?, ?, ?, ?)
 Update 0: update todo_data set todo=?, user_name=?, user_num=? where num=?
 Delete 0: delete from todo_data where num=?
 Identity insert: insert into todo_data (num, todo, user_name, user_num) values (default, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c94ca0d]
Visiting attribute path : todo
Visiting attribute path : userName
Visiting attribute path : userNum
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.TodoData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.TodoData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.TodoData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.TodoData)
          - SQL table alias mapping - tododata0_
          - alias suffix - 0_
          - suffixed key columns - {num1_7_0_}

Static select for entity com.coconet.server.entity.TodoData [NONE]: select tododata0_.num as num1_7_0_, tododata0_.todo as todo2_7_0_, tododata0_.user_name as user_nam3_7_0_, tododata0_.user_num as user_num4_7_0_ from todo_data tododata0_ where tododata0_.num=?
Static SQL for entity: com.coconet.server.entity.ApprovalData
 Version select: select num from approval_data where num =?
 Snapshot select: select approvalda_.num, approvalda_.color as color2_0_, approvalda_.day as day3_0_, approvalda_.img as img4_0_, approvalda_.name as name5_0_, approvalda_.state as state6_0_ from approval_data approvalda_ where approvalda_.num=?
 Insert 0: insert into approval_data (color, day, img, name, state, num) values (?, ?, ?, ?, ?, ?)
 Update 0: update approval_data set color=?, day=?, img=?, name=?, state=? where num=?
 Delete 0: delete from approval_data where num=?
 Identity insert: insert into approval_data (num, color, day, img, name, state) values (default, ?, ?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79aedd3]
Visiting attribute path : color
Visiting attribute path : day
Visiting attribute path : img
Visiting attribute path : name
Visiting attribute path : state
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.ApprovalData)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.ApprovalData, querySpaceUid=<gen:0>, path=com.coconet.server.entity.ApprovalData)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.ApprovalData)
          - SQL table alias mapping - approvalda0_
          - alias suffix - 0_
          - suffixed key columns - {num1_0_0_}

Static select for entity com.coconet.server.entity.ApprovalData [NONE]: select approvalda0_.num as num1_0_0_, approvalda0_.color as color2_0_0_, approvalda0_.day as day3_0_0_, approvalda0_.img as img4_0_0_, approvalda0_.name as name5_0_0_, approvalda0_.state as state6_0_0_ from approval_data approvalda0_ where approvalda0_.num=?
Static SQL for entity: com.coconet.server.entity.Department
 Version select: select department_id from department where department_id =?
 Snapshot select: select department_.department_id, department_.department as departme2_3_ from department department_ where department_.department_id=?
 Insert 0: insert into department (department, department_id) values (?, ?)
 Update 0: update department set department=? where department_id=?
 Delete 0: delete from department where department_id=?
 Identity insert: insert into department (department_id, department) values (default, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14856509]
Visiting attribute path : department
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Department)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Department, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Department)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Department)
          - SQL table alias mapping - department0_
          - alias suffix - 0_
          - suffixed key columns - {departme1_3_0_}

Static select for entity com.coconet.server.entity.Department [NONE]: select department0_.department_id as departme1_3_0_, department0_.department as departme2_3_0_ from department department0_ where department0_.department_id=?
Static SQL for entity: com.coconet.server.entity.Position
 Version select: select position_id from position where position_id =?
 Snapshot select: select position_.position_id, position_.department_id as departme2_6_, position_.position as position3_6_ from position position_ where position_.position_id=?
 Insert 0: insert into position (department_id, position, position_id) values (?, ?, ?)
 Update 0: update position set department_id=?, position=? where position_id=?
 Delete 0: delete from position where position_id=?
 Identity insert: insert into position (position_id, department_id, position) values (default, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13993440]
Visiting attribute path : departmentId
Visiting attribute path : position
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.coconet.server.entity.Position)
    - Returns
       - EntityReturnImpl(entity=com.coconet.server.entity.Position, querySpaceUid=<gen:0>, path=com.coconet.server.entity.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.coconet.server.entity.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_6_0_}

Static select for entity com.coconet.server.entity.Position [NONE]: select position0_.position_id as position1_6_0_, position0_.department_id as departme2_6_0_, position0_.position as position3_6_0_ from position position0_ where position0_.position_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35e8d87a]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f6a89]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=com.coconet.server.entity.Users.authorities)
    - Returns
       - CollectionReturnImpl(collection=com.coconet.server.entity.Users.authorities, querySpaceUid=<gen:0>, path=[com.coconet.server.entity.Users.authorities])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.coconet.server.entity.Authority, querySpaceUid=<gen:1>, path=[com.coconet.server.entity.Users.authorities].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.coconet.server.entity.Users.authorities)
          - SQL table alias mapping - authoritie0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_9_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - authorit1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.coconet.server.entity.Authority)
                - SQL table alias mapping - authority1_
                - alias suffix - 1_
                - suffixed key columns - {authorit1_1_1_}

Static select for collection com.coconet.server.entity.Users.authorities: select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
drop table if exists approval_data CASCADE 
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
drop table if exists users CASCADE 
drop table if exists user_status CASCADE 
create table approval_data (num integer generated by default as identity, color varchar(255), day varchar(255), img varchar(255), name varchar(255), state varchar(255), primary key (num))
create table authority (authority_name varchar(50) not null, primary key (authority_name))
create table chart_data (num integer generated by default as identity, color varchar(255), title varchar(255), value double not null, primary key (num))
create table department (department_id integer generated by default as identity, department varchar(255), primary key (department_id))
create table log_data (num integer generated by default as identity, color varchar(255), img varchar(255), name varchar(255), position varchar(255), state varchar(255), time varchar(255), primary key (num))
create table notice (id integer generated by default as identity, date varchar(255), day varchar(255), title varchar(255), primary key (id))
create table position (position_id integer generated by default as identity, department_id integer not null, position varchar(255), primary key (position_id))
create table todo_data (num integer generated by default as identity, todo varchar(255), user_name varchar(255), user_num integer, primary key (num))
create table token (email varchar(255) not null, refresh_token varchar(255), primary key (email))
create table user_authority (user_id integer not null, authority_name varchar(50) not null, primary key (user_id, authority_name))
create table users (user_id integer generated by default as identity, andnum varchar(255), birthdate varchar(255), department varchar(255), email varchar(255), name varchar(255), password varchar(255), phone varchar(255), position varchar(255), primary key (user_id))
create table user_status (user_id integer not null, status integer not null, primary key (user_id))
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table users add constraint UK_du5v5sr43g5bfnji4vb8hg5s3 unique (phone)
alter table user_authority add constraint FK6ktglpl5mjosa283rvken2py5 foreign key (authority_name) references authority
alter table user_authority add constraint FKhi46vu7680y1hwvmnnuh4cybx foreign key (user_id) references users
HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29ca6e32
Registering SessionFactory: 36d98fc7-f01c-4bde-a2c9-280b0a8bdd70 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initialized JPA EntityManagerFactory for persistence unit 'default'
Creating shared instance of singleton bean 'securityConfig'
Cannot find '.class' file for class [class com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$5fb61887] - unable to determine constructor/method parameter names
Creating shared instance of singleton bean 'jwtTokenProvider'
Found key 'jwt.secret' in PropertySource 'environmentProperties' with value of type String
Found key 'jwt.token-validity-in-seconds' in PropertySource 'environmentProperties' with value of type String
Creating shared instance of singleton bean 'userDetailsService'
Creating shared instance of singleton bean 'userRepository'
Creating shared instance of singleton bean 'jpaMappingContext'
Initializing JpaMetamodelMappingContext…
Finished initializing JpaMetamodelMappingContext!
Creating new EntityManager for shared EntityManager invocation
Statistics initialized [enabled=false]
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Not strongly caching class [com.coconet.server.entity.Authority] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findOneWithAuthoritiesByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findOneWithAuthoritiesByEmail
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findNumByEmail.count
Creating new EntityManager for shared EntityManager invocation
QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3810a9b7
parse() - HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'num'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (u) -> users0_
Resolved : u -> users0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@3da144c9
Resolved : u.num -> users0_.user_id
Resolved : u -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@15b6cb85
Resolved : u.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( users0_.user_id users0_.user_id num ) ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | path: u.num
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: num
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: u.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'users0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  |  \-[IDENT] IdentNode: 'num' {originalText=num}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=u.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=u, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@15b6cb85}

throwQueryException() : no errors
HQL: select u.num from com.coconet.server.entity.Users u where u.email = :email
SQL: select users0_.user_id as col_0_0_ from users users0_ where users0_.email=?
throwQueryException() : no errors
Looking up named query Users.findByDepartmentAndPositionAndName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPositionAndName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByDepartmentAndPosition
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByDepartmentAndPosition
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByName
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNum
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByNameAndPhone
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByNameAndPhone
Creating new EntityManager for shared EntityManager invocation
Looking up named query Users.findByEmail
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Users.findByEmail
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.UserRepository.
Autowiring by type from bean name 'userDetailsService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtTokenProvider' via constructor to bean named 'userDetailsService'
Creating shared instance of singleton bean 'jwtAuthenticationEntryPoint'
Creating shared instance of singleton bean 'jwtAccessDeniedHandler'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'corsFilter'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAuthenticationEntryPoint'
Autowiring by type from bean name 'securityConfig' via constructor to bean named 'jwtAccessDeniedHandler'
Not strongly caching class [com.coconet.server.config.SecurityConfig$$EnhancerBySpringCGLIB$$5fb61887] because it is not cache-safe
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration'
Creating shared instance of singleton bean 'enableGlobalAuthenticationAutowiredConfigurer'
Autowiring by type from bean name 'enableGlobalAuthenticationAutowiredConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Creating shared instance of singleton bean 'initializeUserDetailsBeanManagerConfigurer'
Autowiring by type from bean name 'initializeUserDetailsBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Creating shared instance of singleton bean 'initializeAuthenticationProviderBeanManagerConfigurer'
Autowiring by type from bean name 'initializeAuthenticationProviderBeanManagerConfigurer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Creating shared instance of singleton bean 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6b11eb34'
Creating shared instance of singleton bean 'webConfig'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration'
Creating shared instance of singleton bean 'corsConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6b11eb34'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Creating shared instance of singleton bean 'adminController'
Creating shared instance of singleton bean 'departmentRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Department] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.DepartmentRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.department from com.coconet.server.entity.Department d
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Department'
       |     \-[ALIAS] Node: 'd'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'd'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@15b6cb85
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department department0_.department_id department ) ) ( FromClause{level=1} department department0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.department
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: department
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'department' {originalText=department}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}

throwQueryException() : no errors
HQL: select d.department from com.coconet.server.entity.Department d
SQL: select department0_.department as col_0_0_ from department department0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Department.findByDepartment.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Department'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'department'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'department'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Department (d) -> department0_
Resolved : d -> department0_.department_id
getDataType() : id -> org.hibernate.type.IntegerType@3da144c9
Resolved : d.id -> department0_.department_id
Resolved : d -> department0_.department_id
getDataType() : department -> org.hibernate.type.StringType@15b6cb85
Resolved : d.department -> department0_.department
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( department0_.department_id department0_.department_id id ) ) ( FromClause{level=1} department department0_ ) ( where ( = ( department0_.department department0_.department_id department ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  | path: d.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
    |  |  | originalText: d
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          | path: d.department
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Department)
          |  | originalText: d
          |  \-IdentNode
          |    persister: null
          |    originalText: department
          \-ParameterNode

Using FROM fragment [department department0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (department)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'department0_.department_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=d.id,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[department0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'department department0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=department,tableAlias=department0_,origin=null,columns={,className=com.coconet.server.entity.Department}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'department0_.department' {propertyName=department,dereferenceType=PRIMITIVE,getPropertyPath=department,path=d.department,tableAlias=department0_,className=com.coconet.server.entity.Department,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'department0_.department_id' {alias=d, className=com.coconet.server.entity.Department, tableAlias=department0_}
          |  \-[IDENT] IdentNode: 'department' {originalText=department}
          \-[NAMED_PARAM] ParameterNode: '?' {name=department, expectedType=org.hibernate.type.StringType@15b6cb85}

throwQueryException() : no errors
HQL: select d.id from com.coconet.server.entity.Department d where d.department = :department
SQL: select department0_.department_id as col_0_0_ from department department0_ where department0_.department=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.DepartmentRepository.
Creating shared instance of singleton bean 'positionRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Position] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.PositionRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Position.findByDepartmentId.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Position'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'position'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'departmentId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Position (p) -> position0_
Resolved : p -> position0_.position_id
getDataType() : position -> org.hibernate.type.StringType@15b6cb85
Resolved : p.position -> position0_.position
Resolved : p -> position0_.position_id
getDataType() : departmentId -> org.hibernate.type.IntegerType@3da144c9
Resolved : p.departmentId -> position0_.department_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( position0_.position position0_.position_id position ) ) ( FromClause{level=1} position position0_ ) ( where ( = ( position0_.department_id position0_.position_id departmentId ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  | path: p.position
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: position
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          | path: p.departmentId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Position)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: departmentId
          \-ParameterNode

Using FROM fragment [position position0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (position)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'position0_.position' {propertyName=position,dereferenceType=PRIMITIVE,getPropertyPath=position,path=p.position,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
    |  |  \-[IDENT] IdentNode: 'position' {originalText=position}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[position0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'position position0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=position,tableAlias=position0_,origin=null,columns={,className=com.coconet.server.entity.Position}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'position0_.department_id' {propertyName=departmentId,dereferenceType=PRIMITIVE,getPropertyPath=departmentId,path=p.departmentId,tableAlias=position0_,className=com.coconet.server.entity.Position,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'position0_.position_id' {alias=p, className=com.coconet.server.entity.Position, tableAlias=position0_}
          |  \-[IDENT] IdentNode: 'departmentId' {originalText=departmentId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@3da144c9}

throwQueryException() : no errors
HQL: select p.position from com.coconet.server.entity.Position p where p.departmentId = :id
SQL: select position0_.position as col_0_0_ from position position0_ where position0_.department_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.PositionRepository.
Autowiring by type from bean name 'adminController' via constructor to bean named 'departmentRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'positionRepository'
Autowiring by type from bean name 'adminController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveDepartment()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'methodSecurityInterceptor'
Autowiring by type from bean name 'methodSecurityInterceptor' via factory method to bean named 'methodSecurityMetadataSource'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrievePosition(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminController; public java.util.List com.coconet.server.controller.AdminController.retrieveUsername(java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'adminLogController'
Creating shared instance of singleton bean 'readFileService'
Creating shared instance of singleton bean 'logTag'
Creating shared instance of singleton bean 'status'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'logTag'
Autowiring by type from bean name 'readFileService' via constructor to bean named 'status'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'readFileService'
Autowiring by type from bean name 'adminLogController' via constructor to bean named 'userRepository'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.adminLogInfo()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.AdminLogController; public java.util.List com.coconet.server.controller.AdminLogController.userLogInfo(java.lang.String,java.lang.String,java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'boardJpaController'
Creating shared instance of singleton bean 'boardService'
Creating shared instance of singleton bean 'userStatusRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.UserStatusRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query UserStatus.countByStatus
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.countByStatus
Creating new EntityManager for shared EntityManager invocation
Looking up named query UserStatus.findByNum
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findByNum
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query UserStatus.findStatusByNum.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserStatus'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'status'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'num'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'num'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.UserStatus (u) -> userstatus0_
Resolved : u -> userstatus0_.user_id
getDataType() : status -> org.hibernate.type.IntegerType@3da144c9
Resolved : u.status -> userstatus0_.status
Resolved : u -> userstatus0_.user_id
getDataType() : num -> org.hibernate.type.IntegerType@3da144c9
Resolved : u.num -> userstatus0_.user_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( userstatus0_.status userstatus0_.user_id status ) ) ( FromClause{level=1} user_status userstatus0_ ) ( where ( = ( userstatus0_.user_id userstatus0_.user_id num ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  | path: u.status
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
    |  |  | originalText: u
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: status
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          | path: u.num
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.UserStatus)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: num
          \-ParameterNode

Using FROM fragment [user_status userstatus0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_status)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'userstatus0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
    |  |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
    |  |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[userstatus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_status userstatus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user_status,tableAlias=userstatus0_,origin=null,columns={,className=com.coconet.server.entity.UserStatus}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userstatus0_.user_id' {propertyName=num,dereferenceType=PRIMITIVE,getPropertyPath=num,path=u.num,tableAlias=userstatus0_,className=com.coconet.server.entity.UserStatus,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'userstatus0_.user_id' {alias=u, className=com.coconet.server.entity.UserStatus, tableAlias=userstatus0_}
          |  \-[IDENT] IdentNode: 'num' {originalText=num}
          \-[NAMED_PARAM] ParameterNode: '?' {name=num, expectedType=org.hibernate.type.IntegerType@3da144c9}

throwQueryException() : no errors
HQL: select u.status from com.coconet.server.entity.UserStatus u where u.num = :num
SQL: select userstatus0_.status as col_0_0_ from user_status userstatus0_ where userstatus0_.user_id=?
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.UserStatusRepository.
Creating shared instance of singleton bean 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'boardService' via constructor to bean named 'status'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logService'
Autowiring by type from bean name 'boardService' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'approvalRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ApprovalData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ApprovalRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ApprovalRepository.
Creating shared instance of singleton bean 'chartRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.ChartData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.ChartRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.ChartRepository.
Creating shared instance of singleton bean 'logRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.LogData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.LogRepository…
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.LogRepository.
Creating shared instance of singleton bean 'todoRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.TodoData] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.TodoRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByTodo
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByTodo
Creating new EntityManager for shared EntityManager invocation
Looking up named query TodoData.findByuserName
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query TodoData.findByuserName
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.TodoRepository.
Creating shared instance of singleton bean 'boardRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Notice] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.BoardRepository…
Creating new EntityManager for shared EntityManager invocation
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByIdStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@3da144c9
Resolved : n.id -> notice0_.id
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@15b6cb85
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@15b6cb85}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.id as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitle.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'title'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@15b6cb85
Resolved : n.title -> notice0_.title
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n
SQL: select notice0_.title as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDay.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@15b6cb85
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n
SQL: select notice0_.day as col_0_0_ from notice notice0_
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByTitleStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'title'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : title -> org.hibernate.type.StringType@15b6cb85
Resolved : n.title -> notice0_.title
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@15b6cb85
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.title notice0_.id title ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.title
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: title
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=n.title,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'title' {originalText=title}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@15b6cb85}

throwQueryException() : no errors
HQL: select n.title from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.title as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllByDayStartingWith.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Notice'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'n'
    |        \-[IDENT] Node: 'day'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'day'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'day'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@15b6cb85
Resolved : n.day -> notice0_.day
Resolved : n -> notice0_.id
getDataType() : day -> org.hibernate.type.StringType@15b6cb85
Resolved : n.day -> notice0_.day
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.day notice0_.id day ) ) ( FromClause{level=1} notice notice0_ ) ( where ( like ( notice0_.day notice0_.id day ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.day
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: day
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          | path: n.day
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
          |  | originalText: n
          |  \-IdentNode
          |    persister: null
          |    originalText: day
          \-ParameterNode

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'day' {originalText=day}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'notice0_.day' {propertyName=day,dereferenceType=PRIMITIVE,getPropertyPath=day,path=n.day,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
          |  \-[IDENT] IdentNode: 'day' {originalText=day}
          \-[NAMED_PARAM] ParameterNode: '?' {name=day, expectedType=org.hibernate.type.StringType@15b6cb85}

throwQueryException() : no errors
HQL: select n.day from com.coconet.server.entity.Notice n where n.day LIKE :day
SQL: select notice0_.day as col_0_0_ from notice notice0_ where notice0_.day like ?
throwQueryException() : no errors
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Notice.findAllById.count
Creating new EntityManager for shared EntityManager invocation
parse() - HQL: select n.id from com.coconet.server.entity.Notice n
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'coconet'
       |     |  |  |  \-[IDENT] Node: 'server'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Notice'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'id'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Notice (n) -> notice0_
Resolved : n -> notice0_.id
getDataType() : id -> org.hibernate.type.IntegerType@3da144c9
Resolved : n.id -> notice0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( notice0_.id notice0_.id id ) ) ( FromClause{level=1} notice notice0_ ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  | path: n.id
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Notice)
    |  |  | originalText: n
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: id
    |  \-SqlNode
    \-FromClause
       \-FromElement

Using FROM fragment [notice notice0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (notice)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'notice0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=n.id,tableAlias=notice0_,className=com.coconet.server.entity.Notice,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: 'notice0_.id' {alias=n, className=com.coconet.server.entity.Notice, tableAlias=notice0_}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[n], fromElementByTableAlias=[notice0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'notice notice0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=notice,tableAlias=notice0_,origin=null,columns={,className=com.coconet.server.entity.Notice}}

throwQueryException() : no errors
HQL: select n.id from com.coconet.server.entity.Notice n
SQL: select notice0_.id as col_0_0_ from notice notice0_
throwQueryException() : no errors
Finished creation of repository instance for com.coconet.server.repository.BoardRepository.
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardService'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'approvalRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'chartRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'logRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'todoRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'boardRepository'
Autowiring by type from bean name 'boardJpaController' via constructor to bean named 'readFileService'
Creating shared instance of singleton bean 'certificationController'
Creating shared instance of singleton bean 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'certificationService'
Autowiring by type from bean name 'certificationController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'exceptionController'
Creating shared instance of singleton bean 'imageController'
Creating shared instance of singleton bean 'jwtController'
Creating shared instance of singleton bean 'authService'
Creating shared instance of singleton bean 'authenticationManagerBuilder'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'objectPostProcessor'
Autowiring by type from bean name 'authenticationManagerBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Creating shared instance of singleton bean 'authenticationEventPublisher'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration'
Autowiring by type from bean name 'authenticationEventPublisher' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Creating shared instance of singleton bean 'refreshTokenRepository'
Creating new EntityManager for shared EntityManager invocation
Not strongly caching class [com.coconet.server.entity.Token] because it is not cache-safe
Initializing repository instance for com.coconet.server.repository.RefreshTokenRepository…
Creating new EntityManager for shared EntityManager invocation
Looking up named query Token.findByRefreshToken
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
Did not find named query Token.findByRefreshToken
Creating new EntityManager for shared EntityManager invocation
Finished creation of repository instance for com.coconet.server.repository.RefreshTokenRepository.
Autowiring by type from bean name 'authService' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'authService' via constructor to bean named 'authenticationManagerBuilder'
Autowiring by type from bean name 'authService' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'authService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'jwtController' via constructor to bean named 'authService'
Creating shared instance of singleton bean 'userJpaController'
Creating shared instance of singleton bean 'userService'
Creating shared instance of singleton bean 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userService' via constructor to bean named 'passwordEncoder'
Autowiring by type from bean name 'userService' via constructor to bean named 'status'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'refreshTokenRepository'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'authService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'jwtTokenProvider'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'logTag'
Autowiring by type from bean name 'userJpaController' via constructor to bean named 'status'
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public int com.coconet.server.controller.UserJpaController.retrieveUserNum(java.lang.String)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public com.coconet.server.entity.Users com.coconet.server.controller.UserJpaController.retrieveUser(int)]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
@org.springframework.security.access.prepost.PreAuthorize(value="hasAnyRole('ADMIN')") found on specific method: public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()
Caching method [CacheKey[com.coconet.server.controller.UserJpaController; public java.util.List com.coconet.server.controller.UserJpaController.retrieveAllUsers()]] with attributes [[authorize: 'hasAnyRole('ADMIN')', filter: 'null', filterTarget: 'null']]
Creating shared instance of singleton bean 'userStatusController'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userStatusRepository'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'status'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'userDetailsService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logService'
Autowiring by type from bean name 'userStatusController' via constructor to bean named 'logTag'
Creating shared instance of singleton bean 'noticeType'
Creating shared instance of singleton bean 'imageService'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration'
Creating shared instance of singleton bean 'delegatingApplicationListener'
Creating shared instance of singleton bean 'springSecurityFilterChain'
You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
Will not secure Ant [pattern='/h2-console/**']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/signup']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/login']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/log']
Adding web access control expression [permitAll] for Ant [pattern='/coconet/reissue']
Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@79a48b41, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11137ec7, org.springframework.security.web.context.SecurityContextPersistenceFilter@1eca724d, org.springframework.security.web.header.HeaderWriterFilter@49994900, org.springframework.security.web.authentication.logout.LogoutFilter@2ad013ce, org.springframework.web.filter.CorsFilter@5c733701, com.coconet.server.jwt.JwtFilter@b07e300, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@633b1d2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7124557f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12954698, org.springframework.security.web.session.SessionManagementFilter@5092a9d8, org.springframework.security.web.access.ExceptionTranslationFilter@3728efb1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@54378d07]
Creating shared instance of singleton bean 'webSecurityExpressionHandler'
Creating shared instance of singleton bean 'privilegeEvaluator'
Creating shared instance of singleton bean 'requestDataValueProcessor'
Creating shared instance of singleton bean 'org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration'
Creating shared instance of singleton bean 'preInvocationAuthorizationAdvice'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
Creating shared instance of singleton bean 'taskExecutorBuilder'
Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
Creating shared instance of singleton bean 'defaultValidator'
Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Loaded expression factory via original TCCL
Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
Trying to load META-INF/validation.xml for XML based Validator configuration.
Trying to load META-INF/validation.xml via user class loader
Trying to load META-INF/validation.xml via TCCL
Trying to load META-INF/validation.xml via Hibernate Validator's class loader
No META-INF/validation.xml found. Using annotation based configuration only.
Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
Creating shared instance of singleton bean 'error'
Creating shared instance of singleton bean 'beanNameViewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
Creating shared instance of singleton bean 'conventionErrorViewResolver'
Creating shared instance of singleton bean 'errorAttributes'
Creating shared instance of singleton bean 'basicErrorController'
Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'mvcConversionService'
Creating shared instance of singleton bean 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
Creating shared instance of singleton bean 'messageConverters'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
Creating shared instance of singleton bean 'stringHttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
Creating shared instance of singleton bean 'jacksonObjectMapper'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
Creating shared instance of singleton bean 'parameterNamesModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
Creating shared instance of singleton bean 'jsonComponentModule'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
Creating shared instance of singleton bean 'jsonMixinModule'
Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Creating shared instance of singleton bean 'jacksonGeoModule'
Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
Creating shared instance of singleton bean 'sortResolver'
Creating shared instance of singleton bean 'sortCustomizer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
Creating shared instance of singleton bean 'pageableResolver'
Creating shared instance of singleton bean 'pageableCustomizer'
Creating shared instance of singleton bean 'applicationTaskExecutor'
Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
Initializing ExecutorService 'applicationTaskExecutor'
ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'welcomePageHandlerMapping'
Creating shared instance of singleton bean 'mvcResourceUrlProvider'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'localeResolver'
Creating shared instance of singleton bean 'themeResolver'
Creating shared instance of singleton bean 'flashMapManager'
Creating shared instance of singleton bean 'requestMappingHandlerMapping'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'

	c.c.s.c.AdminController:
	{GET [/coconet/user/department]}: retrieveDepartment()
	{GET [/coconet/user/position]}: retrievePosition(String)
	{GET [/coconet/user/username]}: retrieveUsername(String,String)

	c.c.s.c.AdminLogController:
	{GET [/coconet/logs/admin]}: adminLogInfo()
	{GET [/coconet/logs/user]}: userLogInfo(String,String,String)

	c.c.s.c.BoardJpaController:
	{GET [/coconet/board/chart]}: chartAll()
	{GET [/coconet/board/notice/year]}: noticeYear(String)
	{GET [/coconet/board/notice]}: noticeAll()
	{GET [/coconet/board/notification]}: getNoticeList()
	{GET [/coconet/board/approval]}: approvalAll()
	{GET [/coconet/board/log]}: logAll()
	{GET [/coconet/board/notice/one]}: noticeOne(String,int,String)
	{GET [/coconet/board/todo]}: todoAll(String)
	{POST [/coconet/board/todo/add]}: todoAdd(TodoData)
	{DELETE [/coconet/board/todo/delete]}: todoDelete(TodoData)

	c.c.s.c.CertificationController:
	{GET [/coconet/sendSMS]}: sendSMS(String,String)

	c.c.s.c.ExceptionController:
	

	c.c.s.c.ImageController:
	{GET [/coconet/image], produces [image/png]}: getImageWithMediaType(HttpServletRequest)

	c.c.s.c.JwtController:
	{POST [/coconet/reissue]}: reissueToken(Map)

	c.c.s.c.UserJpaController:
	{GET [/coconet/users/userid]}: retrieveUserNum(String)
	{POST [/coconet/signup]}: signup(UserDto,String)
	{POST [/coconet/login]}: login(LoginDto)
	{DELETE [/coconet/users/{num}]}: deleteUser(int)
	{GET [/coconet/users/{num}]}: retrieveUser(int)
	{POST [/coconet/users]}: createUser(Users)
	{GET [/coconet/users]}: retrieveAllUsers()
	{POST [/coconet/logout]}: logout(String,LogoutDto)

	c.c.s.c.UserStatusController:
	{POST [/coconet/status]}: updateStatus(UserStatus)

	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
29 mappings in 'requestMappingHandlerMapping'
Creating shared instance of singleton bean 'mvcPatternParser'
Creating shared instance of singleton bean 'mvcUrlPathHelper'
Creating shared instance of singleton bean 'mvcPathMatcher'
Creating shared instance of singleton bean 'viewControllerHandlerMapping'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'beanNameHandlerMapping'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'beanNameHandlerMapping' {}
Creating shared instance of singleton bean 'routerFunctionMapping'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
Creating shared instance of singleton bean 'resourceHandlerMapping'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
Creating shared instance of singleton bean 'defaultServletHandlerMapping'
Creating shared instance of singleton bean 'handlerFunctionAdapter'
Creating shared instance of singleton bean 'mvcUriComponentsContributor'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
Creating shared instance of singleton bean 'handlerExceptionResolver'
Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
Creating shared instance of singleton bean 'mvcViewResolver'
Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
Creating shared instance of singleton bean 'viewNameTranslator'
Creating shared instance of singleton bean 'defaultViewResolver'
Creating shared instance of singleton bean 'viewResolver'
Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6b11eb34'
Creating shared instance of singleton bean 'viewResolver'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
Creating shared instance of singleton bean 'applicationAvailability'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
Creating shared instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
Creating shared instance of singleton bean 'lifecycleProcessor'
Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration'
Creating shared instance of singleton bean 'gsonBuilder'
Creating shared instance of singleton bean 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'standardGsonBuilderCustomizer' via factory method to bean named 'spring.gson-org.springframework.boot.autoconfigure.gson.GsonProperties'
Autowiring by type from bean name 'gsonBuilder' via factory method to bean named 'standardGsonBuilderCustomizer'
Creating shared instance of singleton bean 'gson'
Autowiring by type from bean name 'gson' via factory method to bean named 'gsonBuilder'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration'
Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
Fetching JDBC Connection from DataSource
Fetching JDBC Connection from DataSource
Executing SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql]
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_USER')
1 returned as update count for SQL: insert into AUTHORITY (AUTHORITY_NAME) values('ROLE_ADMIN')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90000, 'department_admin', 'position_admin', 'admin', 'admin', '01000000000', '000000', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum0')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90001, '개발팀', '부장', '정재훈', 'jjh@naver.com', '01020770880', '970816', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum1')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90002, '인사팀', '사장', '김은비', 'keb@naver.com', '01026207411', '011208', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum2')
1 returned as update count for SQL: insert into users(user_id, department, position, name, email, phone, birthdate, password, andnum) values(90003, '디자인팀', '사원', '김현빈', 'khb@naver.com', '01065597556', '012345', '$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW', 'andNum3')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90000, 'ROLE_ADMIN')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90001, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90002, 'ROLE_USER')
1 returned as update count for SQL: insert into USER_AUTHORITY (USER_ID, AUTHORITY_NAME) values(90003, 'ROLE_USER')
1 returned as update count for SQL: insert into notice(id, title, date, day) values(1, '공지사항 test1', '안녕하세요, 네이버 윅스입니다.'||CHAR(13)||CHAR(10)||'여기부터 엔터를 했는데 적용이 될까?', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(2, '공지사항 test2', '공지사항 내용2', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(3, '공지사항 test3', '공지사항 내용3', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(4, '공지사항 test4', '공지사항 내용4', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(5, '공지사항 test5', '공지사항 내용5', to_char(sysdate, 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(6, '공지사항 test6', '공지사항 내용6', to_char('2021.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into notice(id, title, date, day) values(7, '공지사항 test7', '공지사항 내용7', to_char('2020.08.05(금)', 'YYYY.MM.DD"("dy")"'))
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(1, '근무중', 60, '#2CB0D7')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(2, '휴식', 7, '#F0D828')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(3, '외근', 11, '#2C89DE')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(4, '휴가', 4, '#5AB6B1')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(5, '출장', 3, '#6571DC')
1 returned as update count for SQL: insert into chart_data(num, title, value, color) values(6, '출근전', 15, '#BFC8D2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(1, '휴가', '#5AB6B1', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크1')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(2, '외근', '#2C89DE', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크2')
1 returned as update count for SQL: insert into approval_data(num, state, color, name, day,img) values(3, '출장', '#6571DC', '정사원', to_char(sysdate, 'YYYY.MM.DD"("dy")"'), '프사 링크3')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(1, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(2, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(3, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(4, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(5, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(6, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into log_data(num, state, color, name, position, time, img) values(7, '퇴근', '#86ca89', '김대리', '백엔드 개발', to_char(sysdate, 'PM HH:MI'), '프사 링크1')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(1, 90003, '김현빈', '1회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(2, 90003, '김현빈', '1차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(3, 90003, '김현빈', '1차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(4, 90003, '김현빈', '1차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(5, 90002, '김은비', '2회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(6, 90002, '김은비', '2차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(7, 90002, '김은비', '2차 메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(8, 90002, '김은비', '2차 코드 리펙토링')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(9, 90001, '정재훈', '3회차 회의')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(10, 90001, '정재훈', '3차 JWT 토근 기능 구현')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(11, 90001, '정재훈', '3차메인페이지 작업')
1 returned as update count for SQL: insert into todo_data(num, user_Num, user_Name, todo) values(12, 90001, '정재훈', '3차코드 리펙토링')
1 returned as update count for SQL: insert into department(department_id, department) values(101, '인사팀')
1 returned as update count for SQL: insert into department(department_id, department) values(102, '회계팀')
1 returned as update count for SQL: insert into department(department_id, department) values(103, '영업팀')
1 returned as update count for SQL: insert into department(department_id, department) values(104, '개발팀')
1 returned as update count for SQL: insert into department(department_id, department) values(105, '디자인팀')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(201, 101, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(202, 101, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(203, 101, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(204, 101, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(205, 101, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(206, 102, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(207, 102, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(208, 102, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(209, 102, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(210, 102, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(211, 103, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(212, 103, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(213, 103, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(214, 103, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(215, 103, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(216, 104, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(217, 104, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(218, 104, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(219, 104, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(220, 104, '인턴')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(221, 105, '사장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(222, 105, '부장')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(223, 105, '대리')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(224, 105, '사원')
1 returned as update count for SQL: insert into position(position_id, department_id, position) values(225, 105, '인턴')
1 returned as update count for SQL: insert into user_status(user_id, status) values(90000, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90001, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90002, 15)
1 returned as update count for SQL: insert into user_status(user_id, status) values(90003, 15)
Executed SQL script from URL [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/data.sql] in 91 ms.
Creating shared instance of singleton bean 'jdbcTemplate'
Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
Creating shared instance of singleton bean 'taskSchedulerBuilder'
Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
Creating shared instance of singleton bean 'transactionTemplate'
Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
Creating shared instance of singleton bean 'multipartResolver'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration'
Creating shared instance of singleton bean 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration' via constructor to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Creating shared instance of singleton bean 'restartingClassPathChangedEventListener'
Creating shared instance of singleton bean 'fileSystemWatcherFactory'
Autowiring by type from bean name 'restartingClassPathChangedEventListener' via factory method to bean named 'fileSystemWatcherFactory'
Creating shared instance of singleton bean 'classPathFileSystemWatcher'
Creating shared instance of singleton bean 'classPathRestartStrategy'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'fileSystemWatcherFactory'
Autowiring by type from bean name 'classPathFileSystemWatcher' via factory method to bean named 'classPathRestartStrategy'
Creating shared instance of singleton bean 'conditionEvaluationDeltaLoggingListener'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration'
Creating shared instance of singleton bean 'optionalLiveReloadServer'
Autowiring by type from bean name 'liveReloadServer' via factory method to bean named 'spring.devtools-org.springframework.boot.devtools.autoconfigure.DevToolsProperties'
Autowiring by type from bean name 'optionalLiveReloadServer' via factory method to bean named 'liveReloadServer'
Starting live reload server on port 35729
LiveReload server is running on port 35729
Creating shared instance of singleton bean 'liveReloadServerEventListener'
Autowiring by type from bean name 'liveReloadServerEventListener' via factory method to bean named 'optionalLiveReloadServer'
Creating shared instance of singleton bean 'org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration'
Starting beans in phase 2147483646
Starting ProtocolHandler ["https-jsse-nio-443"]
Starting ProtocolHandler ["http-nio-7070"]
Tomcat started on port(s): 443 (https) 7070 (http) with context path ''
Successfully started bean 'webServerStartStop'
Starting beans in phase 2147483647
Successfully started bean 'webServerGracefulShutdown'



============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DevToolsDataSourceAutoConfiguration matched:
      - Devtools devtools enabled. (OnEnabledDevToolsCondition)
      - DevTools DataSource Condition found auto-configured DataSource (DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition)

   DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor matched:
      - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.orm.jpa.AbstractEntityManagerFactoryBean; SearchStrategy: all) found bean '&entityManagerFactory' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   GsonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   GsonAutoConfiguration#gson matched:
      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonAutoConfiguration#gsonBuilder matched:
      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GsonHttpMessageConvertersConfiguration matched:
      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.h2.server.web.WebServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.h2.console.enabled=true) matched (OnPropertyCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration matched:
      - Initialized Restarter Condition available and initialized (OnInitializedRestarterCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.livereload.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.LiveReloadConfiguration#liveReloadServer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.livereload.LiveReloadServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration matched:
      - @ConditionalOnProperty (spring.devtools.restart.enabled) matched (OnPropertyCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathFileSystemWatcher matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#classPathRestartStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.devtools.classpath.ClassPathRestartStrategy; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LocalDevToolsAutoConfiguration.RestartConfiguration#conditionEvaluationDeltaLoggingListener matched:
      - @ConditionalOnProperty (spring.devtools.restart.log-condition-evaluation-delta) matched (OnPropertyCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityAutoConfiguration#authenticationEventPublisher matched:
      - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SecurityFilterAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   SecurityFilterAutoConfiguration#securityFilterChainRegistration matched:
      - @ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain' (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringBootWebSecurityConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootWebSecurityConfiguration.ErrorPageSecurityFilterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.security.web.access.WebInvocationPrivilegeEvaluator' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator; SearchStrategy: all) found bean 'privilegeEvaluator' (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DevToolsR2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper' (GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NettyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.ReactiveWebApplicationCondition did not find reactive web application classes; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler (ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RemoteDevToolsAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.devtools.remote.secret) did not find property 'secret' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Filter', 'org.springframework.http.server.ServerHttpRequest' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityDataConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) found beans of type 'org.springframework.boot.web.servlet.server.ServletWebServerFactory' servletContainer (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SpringApplicationAdminJmxAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter' securityConfig; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)

   SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) found beans named springSecurityFilterChain (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder,org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector,org.springframework.security.oauth2.client.registration.ClientRegistrationRepository,org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository; SearchStrategy: all) found beans of type 'org.springframework.security.core.userdetails.UserDetailsService' userDetailsService (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



Started ServerApplication in 15.94 seconds (JVM running for 17.566)
Application availability state LivenessState changed to CORRECT
Creating new Restarter for thread Thread[main,5,main]
Immediately restarting application
Starting application com.coconet.server.ServerApplication with URLs [file:/D:/@coconet/Coconet-main/Coconet-main/target/classes/]
Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Detected StandardServletMultipartResolver
Detected AcceptHeaderLocaleResolver
Detected FixedThemeResolver
Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@265b6cd9
Detected org.springframework.web.servlet.support.SessionFlashMapManager@3d2a2752
enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
Completed initialization in 4 ms
Securing POST /coconet/signup
Set SecurityContextHolder to empty SecurityContext
Security Context에 'admin' 인증 정보를 저장했습니다, uri: /coconet/signup
Authorized filter invocation [POST /coconet/signup] with attributes [permitAll]
Secured POST /coconet/signup
POST "/coconet/signup", parameters={}
Mapped to com.coconet.server.controller.UserJpaController#signup(UserDto, String)
Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
Read "application/json;charset=UTF-8" to [com.coconet.server.dto.UserDto@1fbef52f]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@15b6cb85
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  \-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@15b6cb85}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
throwQueryException() : no errors
select users0_.user_id as user_id1_10_, users0_.andnum as andnum2_10_, users0_.birthdate as birthdat3_10_, users0_.department as departme4_10_, users0_.email as email5_10_, users0_.name as name6_10_, users0_.password as password7_10_, users0_.phone as phone8_10_, users0_.position as position9_10_ from users users0_ where users0_.email=?
Result set row: 0
Result row: EntityKey[com.coconet.server.entity.Users#90000]
Resolving attributes for [com.coconet.server.entity.Users#90000]
Processing attribute `andnum` : value = andNum0
Attribute (`andnum`)  - enhanced for lazy-loading? - false
Processing attribute `authorities` : value = NOT NULL COLLECTION
Attribute (`authorities`)  - enhanced for lazy-loading? - false
Processing attribute `birthdate` : value = 000000
Attribute (`birthdate`)  - enhanced for lazy-loading? - false
Processing attribute `department` : value = department_admin
Attribute (`department`)  - enhanced for lazy-loading? - false
Processing attribute `email` : value = admin
Attribute (`email`)  - enhanced for lazy-loading? - false
Processing attribute `name` : value = admin
Attribute (`name`)  - enhanced for lazy-loading? - false
Processing attribute `password` : value = $2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW
Attribute (`password`)  - enhanced for lazy-loading? - false
Processing attribute `phone` : value = 01000000000
Attribute (`phone`)  - enhanced for lazy-loading? - false
Processing attribute `position` : value = position_admin
Attribute (`position`)  - enhanced for lazy-loading? - false
Done materializing entity [com.coconet.server.entity.Users#90000]
Loading collection: [com.coconet.server.entity.Users.authorities#90000]
select authoritie0_.user_id as user_id1_9_0_, authoritie0_.authority_name as authorit2_9_0_, authority1_.authority_name as authorit1_1_1_ from user_authority authoritie0_ inner join authority authority1_ on authoritie0_.authority_name=authority1_.authority_name where authoritie0_.user_id=?
Preparing collection initializer : [com.coconet.server.entity.Users.authorities#90000]
Found row of collection: [com.coconet.server.entity.Users.authorities#90000]
Resolving attributes for [com.coconet.server.entity.Authority#ROLE_ADMIN]
Done materializing entity [com.coconet.server.entity.Authority#ROLE_ADMIN]
1 collections were found in result set for role: com.coconet.server.entity.Users.authorities
Collection fully initialized: [com.coconet.server.entity.Users.authorities#90000]
1 collections initialized for role: com.coconet.server.entity.Users.authorities
Done loading collection
{ip:192.168.57.1, tag:Signup, title:신규 회원 등록, email:admin, date:2022. 08. 10. 20:18:34}
Found thread-bound EntityManager [SessionImpl(1610481388<open>)] for JPA transaction
Creating new transaction with name [com.coconet.server.service.UserService.signup]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5ae39e37]
Rendered criteria query -> select generatedAlias0 from Users as generatedAlias0 where generatedAlias0.email=:param0
parse() - HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'coconet'
    |  |     |  |  |  \-[IDENT] Node: 'server'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Users'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.coconet.server.entity.Users (generatedAlias0) -> users0_
Resolved : generatedAlias0 -> users0_.user_id
Resolved : generatedAlias0 -> users0_.user_id
getDataType() : email -> org.hibernate.type.StringType@15b6cb85
Resolved : generatedAlias0.email -> users0_.email
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} users0_.user_id ) ( FromClause{level=1} users users0_ ) ( where ( = ( users0_.email users0_.user_id email ) ? ) ) )
createManyToMany() : path = authorities role = com.coconet.server.entity.Users.authorities associatedEntityName = com.coconet.server.entity.Authority
FromClause{level=1} : com.coconet.server.entity.Authority (generatedAlias0) -> authority2_
addJoinByPathMap() : authorities -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Users): [users]
    | referencedTables(entity Authority): [authority]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
    |  | originalText: generatedAlias0
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Authority)
    |  +-SqlFragment
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    |     \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.coconet.server.entity.Users)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

Using FROM fragment [users users0_]
Using FROM fragment [left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_authority,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'users0_.user_id as user_id1_10_0_' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'authority2_.authority_name as authorit1_1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}}
    |  +-[SQL_TOKEN] SqlFragment: 'users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[users0_, authority2_], fromElementsByPath=[authorities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users users0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=users0_,origin=null,columns={,className=com.coconet.server.entity.Users}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=com.coconet.server.entity.Users.authorities,tableName=authority,tableAlias=authority2_,origin=users users0_,columns={users0_.user_id,className=com.coconet.server.entity.Authority}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'users0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=users0_,className=com.coconet.server.entity.Users,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'users0_.user_id' {alias=generatedAlias0, className=com.coconet.server.entity.Users, tableAlias=users0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@15b6cb85}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.coconet.server.entity.Users as generatedAlias0 where generatedAlias0.email=:param0
SQL: select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=[com.coconet.server.entity.Authority#ROLE_ADMIN], email=admin}
com.coconet.server.entity.Authority{authorityName=ROLE_ADMIN}
select users0_.user_id as user_id1_10_0_, authority2_.authority_name as authorit1_1_1_, users0_.andnum as andnum2_10_0_, users0_.birthdate as birthdat3_10_0_, users0_.department as departme4_10_0_, users0_.email as email5_10_0_, users0_.name as name6_10_0_, users0_.password as password7_10_0_, users0_.phone as phone8_10_0_, users0_.position as position9_10_0_, authoritie1_.user_id as user_id1_9_0__, authoritie1_.authority_name as authorit2_9_0__ from users users0_ left outer join user_authority authoritie1_ on users0_.user_id=authoritie1_.user_id left outer join authority authority2_ on authoritie1_.authority_name=authority2_.authority_name where users0_.email=?
No collections were found in result set for role: com.coconet.server.entity.Users.authorities
Found thread-bound EntityManager [SessionImpl(1610481388<open>)] for JPA transaction
Participating in existing transaction
Not strongly caching class [com.coconet.server.entity.Users] because it is not cache-safe
Executing identity-insert immediately
insert into users (user_id, andnum, birthdate, department, email, name, password, phone, position) values (default, ?, ?, ?, ?, ?, ?, ?, ?)
Natively generated identity: 90004
HHH000387: ResultSet's statement was not registered
Found thread-bound EntityManager [SessionImpl(1610481388<open>)] for JPA transaction
Participating in existing transaction
Not strongly caching class [com.coconet.server.entity.UserStatus] because it is not cache-safe
Configured EntityCopyObserver strategy: disallow
Static select for action ACTION_MERGE on entity com.coconet.server.entity.UserStatus: select userstatus0_.user_id as user_id1_11_0_, userstatus0_.status as status2_11_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Loading entity: [com.coconet.server.entity.UserStatus#90004]
select userstatus0_.user_id as user_id1_11_0_, userstatus0_.status as status2_11_0_ from user_status userstatus0_ where userstatus0_.user_id=?
Done entity load
Generated identifier: 90004, using strategy: org.hibernate.id.Assigned
Initiating transaction commit
Committing JPA transaction on EntityManager [SessionImpl(1610481388<open>)]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.coconet.server.entity.Users.authorities#90000], was: [com.coconet.server.entity.Users.authorities#90000] (initialized)
Collection found: [com.coconet.server.entity.Users.authorities#90004], was: [<unreferenced>] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 4 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 2 collections
Listing entities:
com.coconet.server.entity.Users{password=$2a$10$NOv.hDWRwfqc7tngHYY4Ze5xyJ6gqBOaT9GZvc5BAQJzp0vcriysK, birthdate=20220808, phone=010-2620-0000, num=90004, name=sp, position=사장, andnum=null, department=인사팀, authorities=[com.coconet.server.entity.Authority#ROLE_USER], email=prnf@cocomo.com}
com.coconet.server.entity.UserStatus{num=90004, status=15}
com.coconet.server.entity.Users{password=$2a$10$UhIJYsHKFsfSx9dGZL7thOnEzfAZcsJZkMOiKEWF1YNA5Xwx2BDjW, birthdate=000000, phone=01000000000, num=90000, name=admin, position=position_admin, andnum=andNum0, department=department_admin, authorities=[com.coconet.server.entity.Authority#ROLE_ADMIN], email=admin}
com.coconet.server.entity.Authority{authorityName=ROLE_ADMIN}
insert into user_status (status, user_id) values (?, ?)
Inserting collection: [com.coconet.server.entity.Users.authorities#90004]
insert into user_authority (user_id, authority_name) values (?, ?)
Done inserting collection: 1 rows inserted
Not closing pre-bound JPA EntityManager after transaction
Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
Writing [com.coconet.server.dto.UserDto@493f8bc6]
Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
HHH000420: Closing un-released batch
Completed 200 OK
Cleared SecurityContextHolder to complete request
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e0e70d2, started on Wed Aug 10 20:17:48 KST 2022
Stopping beans in phase 2147483647
Bean 'webServerGracefulShutdown' completed its stop procedure
Stopping beans in phase 2147483646
Bean 'webServerStartStop' completed its stop procedure
Shutting down ExecutorService 'applicationTaskExecutor'
Closing JPA EntityManagerFactory for persistence unit 'default'
HHH000031: Closing
HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
drop table if exists approval_data CASCADE 
HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:testdb user=SA: (connection is dead)
HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Fill pool skipped, pool is at sufficient level.
drop table if exists authority CASCADE 
drop table if exists chart_data CASCADE 
drop table if exists department CASCADE 
drop table if exists log_data CASCADE 
HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:testdb user=SA
drop table if exists notice CASCADE 
drop table if exists position CASCADE 
drop table if exists todo_data CASCADE 
HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:testdb user=SA
drop table if exists token CASCADE 
drop table if exists user_authority CASCADE 
HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:testdb user=SA
drop table if exists users CASCADE 
HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:testdb user=SA
drop table if exists user_status CASCADE 
HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:testdb user=SA
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@22e53330] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@59a4c23c]
HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:testdb user=SA
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - Added connection conn20: url=jdbc:h2:mem:testdb user=SA
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor'
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1526)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1502)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:663)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:267)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.lambda$new$1(DevToolsDataSourceAutoConfiguration.java:140)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor$InMemoryDatabase.shutdown(DevToolsDataSourceAutoConfiguration.java:157)
	at org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.destroy(DevToolsDataSourceAutoConfiguration.java:103)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:834)
HikariPool-1 - Shutdown initiated...
HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - Closing connection conn20: url=jdbc:h2:mem:testdb user=SA: (connection evicted)
HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
HikariPool-1 - Shutdown completed.
